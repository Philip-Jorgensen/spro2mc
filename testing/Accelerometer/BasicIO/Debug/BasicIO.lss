
BasicIO.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000003c  00800100  0000248a  0000251e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000248a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000008f  0080013c  0080013c  0000255a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000255a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000025b8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000238  00000000  00000000  000025f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000216b  00000000  00000000  00002830  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008a2  00000000  00000000  0000499b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001228  00000000  00000000  0000523d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000574  00000000  00000000  00006468  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007ef  00000000  00000000  000069dc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001426  00000000  00000000  000071cb  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001f8  00000000  00000000  000085f1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 db 00 	jmp	0x1b6	; 0x1b6 <__ctors_end>
       4:	0c 94 09 09 	jmp	0x1212	; 0x1212 <__vector_1>
       8:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
       c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      10:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      14:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      18:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      1c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      20:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      24:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      28:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      2c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      30:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      34:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      38:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      3c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      40:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      44:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      48:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      4c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      50:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      54:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      58:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      5c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      60:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      64:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      68:	08 4a       	sbci	r16, 0xA8	; 168
      6a:	d7 3b       	cpi	r29, 0xB7	; 183
      6c:	3b ce       	rjmp	.-906    	; 0xfffffce4 <__eeprom_end+0xff7efce4>
      6e:	01 6e       	ori	r16, 0xE1	; 225
      70:	84 bc       	out	0x24, r8	; 36
      72:	bf fd       	.word	0xfdbf	; ????
      74:	c1 2f       	mov	r28, r17
      76:	3d 6c       	ori	r19, 0xCD	; 205
      78:	74 31       	cpi	r23, 0x14	; 20
      7a:	9a bd       	out	0x2a, r25	; 42
      7c:	56 83       	std	Z+6, r21	; 0x06
      7e:	3d da       	rcall	.-2950   	; 0xfffff4fa <__eeprom_end+0xff7ef4fa>
      80:	3d 00       	.word	0x003d	; ????
      82:	c7 7f       	andi	r28, 0xF7	; 247
      84:	11 be       	out	0x31, r1	; 49
      86:	d9 e4       	ldi	r29, 0x49	; 73
      88:	bb 4c       	sbci	r27, 0xCB	; 203
      8a:	3e 91       	ld	r19, -X
      8c:	6b aa       	std	Y+51, r6	; 0x33
      8e:	aa be       	out	0x3a, r10	; 58
      90:	00 00       	nop
      92:	00 80       	ld	r0, Z
      94:	3f 05       	cpc	r19, r15
      96:	a8 4c       	sbci	r26, 0xC8	; 200
      98:	cd b2       	in	r12, 0x1d	; 29
      9a:	d4 4e       	sbci	r29, 0xE4	; 228
      9c:	b9 38       	cpi	r27, 0x89	; 137
      9e:	36 a9       	ldd	r19, Z+54	; 0x36
      a0:	02 0c       	add	r0, r2
      a2:	50 b9       	out	0x00, r21	; 0
      a4:	91 86       	std	Z+9, r9	; 0x09
      a6:	88 08       	sbc	r8, r8
      a8:	3c a6       	std	Y+44, r3	; 0x2c
      aa:	aa aa       	std	Y+50, r10	; 0x32
      ac:	2a be       	out	0x3a, r2	; 58
      ae:	00 00       	nop
      b0:	00 80       	ld	r0, Z
      b2:	3f 00       	.word	0x003f	; ????

000000b4 <__trampolines_end>:
      b4:	6e 61       	ori	r22, 0x1E	; 30
      b6:	6e 00       	.word	0x006e	; ????

000000b8 <__c.2332>:
      b8:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      c8:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      d8:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      e8:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      f8:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     108:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     118:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     128:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     138:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     148:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     158:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     168:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     178:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     188:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     198:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     1a8:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

000001b6 <__ctors_end>:
     1b6:	11 24       	eor	r1, r1
     1b8:	1f be       	out	0x3f, r1	; 63
     1ba:	cf ef       	ldi	r28, 0xFF	; 255
     1bc:	d8 e0       	ldi	r29, 0x08	; 8
     1be:	de bf       	out	0x3e, r29	; 62
     1c0:	cd bf       	out	0x3d, r28	; 61

000001c2 <__do_copy_data>:
     1c2:	11 e0       	ldi	r17, 0x01	; 1
     1c4:	a0 e0       	ldi	r26, 0x00	; 0
     1c6:	b1 e0       	ldi	r27, 0x01	; 1
     1c8:	ea e8       	ldi	r30, 0x8A	; 138
     1ca:	f4 e2       	ldi	r31, 0x24	; 36
     1cc:	02 c0       	rjmp	.+4      	; 0x1d2 <__do_copy_data+0x10>
     1ce:	05 90       	lpm	r0, Z+
     1d0:	0d 92       	st	X+, r0
     1d2:	ac 33       	cpi	r26, 0x3C	; 60
     1d4:	b1 07       	cpc	r27, r17
     1d6:	d9 f7       	brne	.-10     	; 0x1ce <__do_copy_data+0xc>

000001d8 <__do_clear_bss>:
     1d8:	21 e0       	ldi	r18, 0x01	; 1
     1da:	ac e3       	ldi	r26, 0x3C	; 60
     1dc:	b1 e0       	ldi	r27, 0x01	; 1
     1de:	01 c0       	rjmp	.+2      	; 0x1e2 <.do_clear_bss_start>

000001e0 <.do_clear_bss_loop>:
     1e0:	1d 92       	st	X+, r1

000001e2 <.do_clear_bss_start>:
     1e2:	ab 3c       	cpi	r26, 0xCB	; 203
     1e4:	b2 07       	cpc	r27, r18
     1e6:	e1 f7       	brne	.-8      	; 0x1e0 <.do_clear_bss_loop>
     1e8:	0e 94 06 07 	call	0xe0c	; 0xe0c <main>
     1ec:	0c 94 43 12 	jmp	0x2486	; 0x2486 <_exit>

000001f0 <__bad_interrupt>:
     1f0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001f4 <LCD_write_PCF8574>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     1f4:	cf 93       	push	r28
     1f6:	c8 2f       	mov	r28, r24
     1f8:	8e e4       	ldi	r24, 0x4E	; 78
     1fa:	0e 94 6a 09 	call	0x12d4	; 0x12d4 <i2c_start_wait>
     1fe:	80 91 3c 01 	lds	r24, 0x013C	; 0x80013c <__data_end>
     202:	8c 2b       	or	r24, r28
     204:	0e 94 9e 09 	call	0x133c	; 0x133c <i2c_write>
     208:	0e 94 95 09 	call	0x132a	; 0x132a <i2c_stop>
     20c:	cf 91       	pop	r28
     20e:	08 95       	ret

00000210 <LCD_pulse_enable_neg>:
     210:	cf 93       	push	r28
     212:	c8 2f       	mov	r28, r24
     214:	84 60       	ori	r24, 0x04	; 4
     216:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <LCD_write_PCF8574>
     21a:	85 e0       	ldi	r24, 0x05	; 5
     21c:	8a 95       	dec	r24
     21e:	f1 f7       	brne	.-4      	; 0x21c <LCD_pulse_enable_neg+0xc>
     220:	00 00       	nop
     222:	8c 2f       	mov	r24, r28
     224:	8b 7f       	andi	r24, 0xFB	; 251
     226:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <LCD_write_PCF8574>
     22a:	87 ec       	ldi	r24, 0xC7	; 199
     22c:	90 e0       	ldi	r25, 0x00	; 0
     22e:	01 97       	sbiw	r24, 0x01	; 1
     230:	f1 f7       	brne	.-4      	; 0x22e <LCD_pulse_enable_neg+0x1e>
     232:	00 c0       	rjmp	.+0      	; 0x234 <LCD_pulse_enable_neg+0x24>
     234:	00 00       	nop
     236:	cf 91       	pop	r28
     238:	08 95       	ret

0000023a <LCD_write4bits>:
     23a:	cf 93       	push	r28
     23c:	c8 2f       	mov	r28, r24
     23e:	cd 7f       	andi	r28, 0xFD	; 253
     240:	8c 2f       	mov	r24, r28
     242:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <LCD_write_PCF8574>
     246:	8c 2f       	mov	r24, r28
     248:	0e 94 08 01 	call	0x210	; 0x210 <LCD_pulse_enable_neg>
     24c:	cf 91       	pop	r28
     24e:	08 95       	ret

00000250 <LCD_send>:
     250:	cf 93       	push	r28
     252:	df 93       	push	r29
     254:	d8 2f       	mov	r29, r24
     256:	c6 2f       	mov	r28, r22
     258:	c4 60       	ori	r28, 0x04	; 4
     25a:	80 7f       	andi	r24, 0xF0	; 240
     25c:	8c 2b       	or	r24, r28
     25e:	0e 94 1d 01 	call	0x23a	; 0x23a <LCD_write4bits>
     262:	8d 2f       	mov	r24, r29
     264:	82 95       	swap	r24
     266:	80 7f       	andi	r24, 0xF0	; 240
     268:	8c 2b       	or	r24, r28
     26a:	0e 94 1d 01 	call	0x23a	; 0x23a <LCD_write4bits>
     26e:	df 91       	pop	r29
     270:	cf 91       	pop	r28
     272:	08 95       	ret

00000274 <LCD_set_cursor>:
	_delay_us(30000);  // this command takes a long time!
	#endif
}

void LCD_set_cursor(unsigned char col, unsigned char row)
{
     274:	cf 93       	push	r28
     276:	df 93       	push	r29
     278:	cd b7       	in	r28, 0x3d	; 61
     27a:	de b7       	in	r29, 0x3e	; 62
     27c:	28 97       	sbiw	r28, 0x08	; 8
     27e:	0f b6       	in	r0, 0x3f	; 63
     280:	f8 94       	cli
     282:	de bf       	out	0x3e, r29	; 62
     284:	0f be       	out	0x3f, r0	; 63
     286:	cd bf       	out	0x3d, r28	; 61
	int row_offsets[] = { LCD_LINE1, LCD_LINE2, LCD_LINE3, LCD_LINE4 };
     288:	98 e0       	ldi	r25, 0x08	; 8
     28a:	ec e1       	ldi	r30, 0x1C	; 28
     28c:	f1 e0       	ldi	r31, 0x01	; 1
     28e:	de 01       	movw	r26, r28
     290:	11 96       	adiw	r26, 0x01	; 1
     292:	01 90       	ld	r0, Z+
     294:	0d 92       	st	X+, r0
     296:	9a 95       	dec	r25
     298:	e1 f7       	brne	.-8      	; 0x292 <LCD_set_cursor+0x1e>
	if ( row >= _numlines ) {
     29a:	90 91 3d 01 	lds	r25, 0x013D	; 0x80013d <_numlines>
     29e:	69 17       	cp	r22, r25
     2a0:	10 f0       	brcs	.+4      	; 0x2a6 <LCD_set_cursor+0x32>
		row = _numlines-1;    // we count rows starting w/0
     2a2:	6f ef       	ldi	r22, 0xFF	; 255
     2a4:	69 0f       	add	r22, r25
	}

	LCD_command_write(LCD_DD_RAM_ADDRESS | (col + row_offsets[row]));
     2a6:	e6 2f       	mov	r30, r22
     2a8:	f0 e0       	ldi	r31, 0x00	; 0
     2aa:	ee 0f       	add	r30, r30
     2ac:	ff 1f       	adc	r31, r31
     2ae:	ec 0f       	add	r30, r28
     2b0:	fd 1f       	adc	r31, r29


/*********** mid level commands, for sending data/cmds */

inline void LCD_command_write(unsigned char value) {
	LCD_send(value, Rs & ~Rs);
     2b2:	91 81       	ldd	r25, Z+1	; 0x01
     2b4:	89 0f       	add	r24, r25
     2b6:	60 e0       	ldi	r22, 0x00	; 0
     2b8:	80 68       	ori	r24, 0x80	; 128
     2ba:	0e 94 28 01 	call	0x250	; 0x250 <LCD_send>
	if ( row >= _numlines ) {
		row = _numlines-1;    // we count rows starting w/0
	}

	LCD_command_write(LCD_DD_RAM_ADDRESS | (col + row_offsets[row]));
}
     2be:	28 96       	adiw	r28, 0x08	; 8
     2c0:	0f b6       	in	r0, 0x3f	; 63
     2c2:	f8 94       	cli
     2c4:	de bf       	out	0x3e, r29	; 62
     2c6:	0f be       	out	0x3f, r0	; 63
     2c8:	cd bf       	out	0x3d, r28	; 61
     2ca:	df 91       	pop	r29
     2cc:	cf 91       	pop	r28
     2ce:	08 95       	ret

000002d0 <i2c_read_register8>:

	// Turn on orientation config
	i2c_write_register8(MMA8451_REG_PL_CFG, 0x40);

	// Activate at max rate, low noise mode,
	i2c_write_register8(MMA8451_REG_CTRL_REG1, 0x20 | 0x10 | 0x08 | 0x04 | 0x01);
     2d0:	cf 93       	push	r28
     2d2:	c8 2f       	mov	r28, r24
     2d4:	8a e3       	ldi	r24, 0x3A	; 58
     2d6:	0e 94 43 09 	call	0x1286	; 0x1286 <i2c_start>
     2da:	8c 2f       	mov	r24, r28
     2dc:	0e 94 9e 09 	call	0x133c	; 0x133c <i2c_write>
     2e0:	8b e3       	ldi	r24, 0x3B	; 59
     2e2:	0e 94 92 09 	call	0x1324	; 0x1324 <i2c_rep_start>
     2e6:	0e 94 b0 09 	call	0x1360	; 0x1360 <i2c_readNak>
     2ea:	c8 2f       	mov	r28, r24
     2ec:	0e 94 95 09 	call	0x132a	; 0x132a <i2c_stop>
     2f0:	8c 2f       	mov	r24, r28
     2f2:	cf 91       	pop	r28
     2f4:	08 95       	ret

000002f6 <getOrientation>:
	i2c_stop();
	return(ret_val);
}

unsigned char getOrientation(void) {
	return i2c_read_register8(MMA8451_REG_PL_STATUS) & 0x07;
     2f6:	80 e1       	ldi	r24, 0x10	; 16
     2f8:	0e 94 68 01 	call	0x2d0	; 0x2d0 <i2c_read_register8>
}
     2fc:	87 70       	andi	r24, 0x07	; 7
     2fe:	08 95       	ret

00000300 <Gravity>:

void Gravity(void)
{
     300:	4f 92       	push	r4
     302:	5f 92       	push	r5
     304:	6f 92       	push	r6
     306:	7f 92       	push	r7
     308:	8f 92       	push	r8
     30a:	9f 92       	push	r9
     30c:	af 92       	push	r10
     30e:	bf 92       	push	r11
     310:	cf 92       	push	r12
     312:	df 92       	push	r13
     314:	ef 92       	push	r14
     316:	ff 92       	push	r15
     318:	0f 93       	push	r16
     31a:	1f 93       	push	r17
     31c:	cf 93       	push	r28
     31e:	df 93       	push	r29
	float temp =  PI/180;
	
	x_gravity = sin(x_angle*temp);
     320:	25 e3       	ldi	r18, 0x35	; 53
     322:	3a ef       	ldi	r19, 0xFA	; 250
     324:	4e e8       	ldi	r20, 0x8E	; 142
     326:	5c e3       	ldi	r21, 0x3C	; 60
     328:	60 91 67 01 	lds	r22, 0x0167	; 0x800167 <x_angle>
     32c:	70 91 68 01 	lds	r23, 0x0168	; 0x800168 <x_angle+0x1>
     330:	80 91 69 01 	lds	r24, 0x0169	; 0x800169 <x_angle+0x2>
     334:	90 91 6a 01 	lds	r25, 0x016A	; 0x80016a <x_angle+0x3>
     338:	0e 94 cb 0f 	call	0x1f96	; 0x1f96 <__mulsf3>
     33c:	0e 94 38 10 	call	0x2070	; 0x2070 <sin>
     340:	4b 01       	movw	r8, r22
     342:	5c 01       	movw	r10, r24
     344:	60 93 5b 01 	sts	0x015B, r22	; 0x80015b <x_gravity>
     348:	70 93 5c 01 	sts	0x015C, r23	; 0x80015c <x_gravity+0x1>
     34c:	80 93 5d 01 	sts	0x015D, r24	; 0x80015d <x_gravity+0x2>
     350:	90 93 5e 01 	sts	0x015E, r25	; 0x80015e <x_gravity+0x3>
	y_gravity = sin(y_angle*temp);
     354:	25 e3       	ldi	r18, 0x35	; 53
     356:	3a ef       	ldi	r19, 0xFA	; 250
     358:	4e e8       	ldi	r20, 0x8E	; 142
     35a:	5c e3       	ldi	r21, 0x3C	; 60
     35c:	60 91 c1 01 	lds	r22, 0x01C1	; 0x8001c1 <y_angle>
     360:	70 91 c2 01 	lds	r23, 0x01C2	; 0x8001c2 <y_angle+0x1>
     364:	80 91 c3 01 	lds	r24, 0x01C3	; 0x8001c3 <y_angle+0x2>
     368:	90 91 c4 01 	lds	r25, 0x01C4	; 0x8001c4 <y_angle+0x3>
     36c:	0e 94 cb 0f 	call	0x1f96	; 0x1f96 <__mulsf3>
     370:	0e 94 38 10 	call	0x2070	; 0x2070 <sin>
     374:	6b 01       	movw	r12, r22
     376:	7c 01       	movw	r14, r24
     378:	60 93 60 01 	sts	0x0160, r22	; 0x800160 <y_gravity>
     37c:	70 93 61 01 	sts	0x0161, r23	; 0x800161 <y_gravity+0x1>
     380:	80 93 62 01 	sts	0x0162, r24	; 0x800162 <y_gravity+0x2>
     384:	90 93 63 01 	sts	0x0163, r25	; 0x800163 <y_gravity+0x3>
	z_gravity = 0.9 * z_gravity + 0.1 * z_g;//Low pass filter for Z axis
     388:	26 e6       	ldi	r18, 0x66	; 102
     38a:	36 e6       	ldi	r19, 0x66	; 102
     38c:	46 e6       	ldi	r20, 0x66	; 102
     38e:	5f e3       	ldi	r21, 0x3F	; 63
     390:	60 91 56 01 	lds	r22, 0x0156	; 0x800156 <z_gravity>
     394:	70 91 57 01 	lds	r23, 0x0157	; 0x800157 <z_gravity+0x1>
     398:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <z_gravity+0x2>
     39c:	90 91 59 01 	lds	r25, 0x0159	; 0x800159 <z_gravity+0x3>
     3a0:	0e 94 cb 0f 	call	0x1f96	; 0x1f96 <__mulsf3>
     3a4:	2b 01       	movw	r4, r22
     3a6:	3c 01       	movw	r6, r24
     3a8:	2d ec       	ldi	r18, 0xCD	; 205
     3aa:	3c ec       	ldi	r19, 0xCC	; 204
     3ac:	4c ec       	ldi	r20, 0xCC	; 204
     3ae:	5d e3       	ldi	r21, 0x3D	; 61
     3b0:	60 91 b5 01 	lds	r22, 0x01B5	; 0x8001b5 <z_g>
     3b4:	70 91 b6 01 	lds	r23, 0x01B6	; 0x8001b6 <z_g+0x1>
     3b8:	80 91 b7 01 	lds	r24, 0x01B7	; 0x8001b7 <z_g+0x2>
     3bc:	90 91 b8 01 	lds	r25, 0x01B8	; 0x8001b8 <z_g+0x3>
     3c0:	0e 94 cb 0f 	call	0x1f96	; 0x1f96 <__mulsf3>
     3c4:	9b 01       	movw	r18, r22
     3c6:	ac 01       	movw	r20, r24
     3c8:	c3 01       	movw	r24, r6
     3ca:	b2 01       	movw	r22, r4
     3cc:	0e 94 a4 0d 	call	0x1b48	; 0x1b48 <__addsf3>
     3d0:	60 93 56 01 	sts	0x0156, r22	; 0x800156 <z_gravity>
     3d4:	70 93 57 01 	sts	0x0157, r23	; 0x800157 <z_gravity+0x1>
     3d8:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <z_gravity+0x2>
     3dc:	90 93 59 01 	sts	0x0159, r25	; 0x800159 <z_gravity+0x3>
	
	if (x_g > 0)
     3e0:	00 91 96 01 	lds	r16, 0x0196	; 0x800196 <x_g>
     3e4:	10 91 97 01 	lds	r17, 0x0197	; 0x800197 <x_g+0x1>
     3e8:	c0 91 98 01 	lds	r28, 0x0198	; 0x800198 <x_g+0x2>
     3ec:	d0 91 99 01 	lds	r29, 0x0199	; 0x800199 <x_g+0x3>
     3f0:	20 e0       	ldi	r18, 0x00	; 0
     3f2:	30 e0       	ldi	r19, 0x00	; 0
     3f4:	a9 01       	movw	r20, r18
     3f6:	60 2f       	mov	r22, r16
     3f8:	71 2f       	mov	r23, r17
     3fa:	8c 2f       	mov	r24, r28
     3fc:	9d 2f       	mov	r25, r29
     3fe:	0e 94 be 0f 	call	0x1f7c	; 0x1f7c <__gesf2>
     402:	18 16       	cp	r1, r24
     404:	0c f0       	brlt	.+2      	; 0x408 <__FUSE_REGION_LENGTH__+0x8>
     406:	77 c0       	rjmp	.+238    	; 0x4f6 <__FUSE_REGION_LENGTH__+0xf6>
	{
		if (x_gravity > 0)
     408:	20 e0       	ldi	r18, 0x00	; 0
     40a:	30 e0       	ldi	r19, 0x00	; 0
     40c:	a9 01       	movw	r20, r18
     40e:	c5 01       	movw	r24, r10
     410:	b4 01       	movw	r22, r8
     412:	0e 94 be 0f 	call	0x1f7c	; 0x1f7c <__gesf2>
     416:	18 16       	cp	r1, r24
     418:	44 f5       	brge	.+80     	; 0x46a <__FUSE_REGION_LENGTH__+0x6a>
		{
			if (((x_gravity - x_g) < 0.1) && ((x_gravity - x_g) > -0.1))
     41a:	20 2f       	mov	r18, r16
     41c:	31 2f       	mov	r19, r17
     41e:	4c 2f       	mov	r20, r28
     420:	5d 2f       	mov	r21, r29
     422:	c5 01       	movw	r24, r10
     424:	b4 01       	movw	r22, r8
     426:	0e 94 a3 0d 	call	0x1b46	; 0x1b46 <__subsf3>
     42a:	4b 01       	movw	r8, r22
     42c:	5c 01       	movw	r10, r24
     42e:	2d ec       	ldi	r18, 0xCD	; 205
     430:	3c ec       	ldi	r19, 0xCC	; 204
     432:	4c ec       	ldi	r20, 0xCC	; 204
     434:	5d e3       	ldi	r21, 0x3D	; 61
     436:	0e 94 3f 0e 	call	0x1c7e	; 0x1c7e <__cmpsf2>
     43a:	88 23       	and	r24, r24
     43c:	b4 f4       	brge	.+44     	; 0x46a <__FUSE_REGION_LENGTH__+0x6a>
     43e:	2d ec       	ldi	r18, 0xCD	; 205
     440:	3c ec       	ldi	r19, 0xCC	; 204
     442:	4c ec       	ldi	r20, 0xCC	; 204
     444:	5d eb       	ldi	r21, 0xBD	; 189
     446:	c5 01       	movw	r24, r10
     448:	b4 01       	movw	r22, r8
     44a:	0e 94 be 0f 	call	0x1f7c	; 0x1f7c <__gesf2>
     44e:	18 16       	cp	r1, r24
     450:	64 f4       	brge	.+24     	; 0x46a <__FUSE_REGION_LENGTH__+0x6a>
			{
				x_gravity = x_g;
     452:	80 2f       	mov	r24, r16
     454:	91 2f       	mov	r25, r17
     456:	ac 2f       	mov	r26, r28
     458:	bd 2f       	mov	r27, r29
     45a:	80 93 5b 01 	sts	0x015B, r24	; 0x80015b <x_gravity>
     45e:	90 93 5c 01 	sts	0x015C, r25	; 0x80015c <x_gravity+0x1>
     462:	a0 93 5d 01 	sts	0x015D, r26	; 0x80015d <x_gravity+0x2>
     466:	b0 93 5e 01 	sts	0x015E, r27	; 0x80015e <x_gravity+0x3>
			}
		}
		if (x_gravity < 0)
     46a:	80 90 5b 01 	lds	r8, 0x015B	; 0x80015b <x_gravity>
     46e:	90 90 5c 01 	lds	r9, 0x015C	; 0x80015c <x_gravity+0x1>
     472:	a0 90 5d 01 	lds	r10, 0x015D	; 0x80015d <x_gravity+0x2>
     476:	b0 90 5e 01 	lds	r11, 0x015E	; 0x80015e <x_gravity+0x3>
     47a:	20 e0       	ldi	r18, 0x00	; 0
     47c:	30 e0       	ldi	r19, 0x00	; 0
     47e:	a9 01       	movw	r20, r18
     480:	c5 01       	movw	r24, r10
     482:	b4 01       	movw	r22, r8
     484:	0e 94 3f 0e 	call	0x1c7e	; 0x1c7e <__cmpsf2>
     488:	88 23       	and	r24, r24
     48a:	ac f5       	brge	.+106    	; 0x4f6 <__FUSE_REGION_LENGTH__+0xf6>
		{
			if (((x_gravity + x_g) < 0.1) && ((x_gravity + x_g) > -0.1))
     48c:	a5 01       	movw	r20, r10
     48e:	94 01       	movw	r18, r8
     490:	60 2f       	mov	r22, r16
     492:	71 2f       	mov	r23, r17
     494:	8c 2f       	mov	r24, r28
     496:	9d 2f       	mov	r25, r29
     498:	0e 94 a4 0d 	call	0x1b48	; 0x1b48 <__addsf3>
     49c:	4b 01       	movw	r8, r22
     49e:	5c 01       	movw	r10, r24
     4a0:	2d ec       	ldi	r18, 0xCD	; 205
     4a2:	3c ec       	ldi	r19, 0xCC	; 204
     4a4:	4c ec       	ldi	r20, 0xCC	; 204
     4a6:	5d e3       	ldi	r21, 0x3D	; 61
     4a8:	0e 94 3f 0e 	call	0x1c7e	; 0x1c7e <__cmpsf2>
     4ac:	88 23       	and	r24, r24
     4ae:	1c f5       	brge	.+70     	; 0x4f6 <__FUSE_REGION_LENGTH__+0xf6>
     4b0:	2d ec       	ldi	r18, 0xCD	; 205
     4b2:	3c ec       	ldi	r19, 0xCC	; 204
     4b4:	4c ec       	ldi	r20, 0xCC	; 204
     4b6:	5d eb       	ldi	r21, 0xBD	; 189
     4b8:	c5 01       	movw	r24, r10
     4ba:	b4 01       	movw	r22, r8
     4bc:	0e 94 be 0f 	call	0x1f7c	; 0x1f7c <__gesf2>
     4c0:	18 16       	cp	r1, r24
     4c2:	cc f4       	brge	.+50     	; 0x4f6 <__FUSE_REGION_LENGTH__+0xf6>
			{
				x_gravity = x_g;
     4c4:	80 2f       	mov	r24, r16
     4c6:	91 2f       	mov	r25, r17
     4c8:	ac 2f       	mov	r26, r28
     4ca:	bd 2f       	mov	r27, r29
     4cc:	80 93 5b 01 	sts	0x015B, r24	; 0x80015b <x_gravity>
     4d0:	90 93 5c 01 	sts	0x015C, r25	; 0x80015c <x_gravity+0x1>
     4d4:	a0 93 5d 01 	sts	0x015D, r26	; 0x80015d <x_gravity+0x2>
     4d8:	b0 93 5e 01 	sts	0x015E, r27	; 0x80015e <x_gravity+0x3>
			}
		}
	}
	if (x_g < 0)
     4dc:	20 e0       	ldi	r18, 0x00	; 0
     4de:	30 e0       	ldi	r19, 0x00	; 0
     4e0:	a9 01       	movw	r20, r18
     4e2:	60 2f       	mov	r22, r16
     4e4:	71 2f       	mov	r23, r17
     4e6:	8c 2f       	mov	r24, r28
     4e8:	9d 2f       	mov	r25, r29
     4ea:	0e 94 3f 0e 	call	0x1c7e	; 0x1c7e <__cmpsf2>
     4ee:	88 23       	and	r24, r24
     4f0:	0c f0       	brlt	.+2      	; 0x4f4 <__FUSE_REGION_LENGTH__+0xf4>
     4f2:	88 c0       	rjmp	.+272    	; 0x604 <__FUSE_REGION_LENGTH__+0x204>
     4f4:	18 c3       	rjmp	.+1584   	; 0xb26 <__stack+0x227>
     4f6:	20 e0       	ldi	r18, 0x00	; 0
     4f8:	30 e0       	ldi	r19, 0x00	; 0
     4fa:	a9 01       	movw	r20, r18
     4fc:	60 2f       	mov	r22, r16
     4fe:	71 2f       	mov	r23, r17
     500:	8c 2f       	mov	r24, r28
     502:	9d 2f       	mov	r25, r29
     504:	0e 94 3f 0e 	call	0x1c7e	; 0x1c7e <__cmpsf2>
     508:	88 23       	and	r24, r24
     50a:	0c f0       	brlt	.+2      	; 0x50e <__FUSE_REGION_LENGTH__+0x10e>
     50c:	7b c0       	rjmp	.+246    	; 0x604 <__FUSE_REGION_LENGTH__+0x204>
	{
		if (x_gravity > 0)
     50e:	80 90 5b 01 	lds	r8, 0x015B	; 0x80015b <x_gravity>
     512:	90 90 5c 01 	lds	r9, 0x015C	; 0x80015c <x_gravity+0x1>
     516:	a0 90 5d 01 	lds	r10, 0x015D	; 0x80015d <x_gravity+0x2>
     51a:	b0 90 5e 01 	lds	r11, 0x015E	; 0x80015e <x_gravity+0x3>
     51e:	20 e0       	ldi	r18, 0x00	; 0
     520:	30 e0       	ldi	r19, 0x00	; 0
     522:	a9 01       	movw	r20, r18
     524:	c5 01       	movw	r24, r10
     526:	b4 01       	movw	r22, r8
     528:	0e 94 be 0f 	call	0x1f7c	; 0x1f7c <__gesf2>
     52c:	18 16       	cp	r1, r24
     52e:	6c f5       	brge	.+90     	; 0x58a <__FUSE_REGION_LENGTH__+0x18a>
		{
			if (((x_gravity + x_g) < 0.1) && ((x_gravity + x_g) > -0.1))
     530:	a5 01       	movw	r20, r10
     532:	94 01       	movw	r18, r8
     534:	60 2f       	mov	r22, r16
     536:	71 2f       	mov	r23, r17
     538:	8c 2f       	mov	r24, r28
     53a:	9d 2f       	mov	r25, r29
     53c:	0e 94 a4 0d 	call	0x1b48	; 0x1b48 <__addsf3>
     540:	4b 01       	movw	r8, r22
     542:	5c 01       	movw	r10, r24
     544:	2d ec       	ldi	r18, 0xCD	; 205
     546:	3c ec       	ldi	r19, 0xCC	; 204
     548:	4c ec       	ldi	r20, 0xCC	; 204
     54a:	5d e3       	ldi	r21, 0x3D	; 61
     54c:	0e 94 3f 0e 	call	0x1c7e	; 0x1c7e <__cmpsf2>
     550:	88 23       	and	r24, r24
     552:	dc f4       	brge	.+54     	; 0x58a <__FUSE_REGION_LENGTH__+0x18a>
     554:	2d ec       	ldi	r18, 0xCD	; 205
     556:	3c ec       	ldi	r19, 0xCC	; 204
     558:	4c ec       	ldi	r20, 0xCC	; 204
     55a:	5d eb       	ldi	r21, 0xBD	; 189
     55c:	c5 01       	movw	r24, r10
     55e:	b4 01       	movw	r22, r8
     560:	0e 94 be 0f 	call	0x1f7c	; 0x1f7c <__gesf2>
     564:	18 16       	cp	r1, r24
     566:	8c f4       	brge	.+34     	; 0x58a <__FUSE_REGION_LENGTH__+0x18a>
			{
				x_gravity = x_g;
     568:	80 2f       	mov	r24, r16
     56a:	91 2f       	mov	r25, r17
     56c:	ac 2f       	mov	r26, r28
     56e:	bd 2f       	mov	r27, r29
     570:	80 93 5b 01 	sts	0x015B, r24	; 0x80015b <x_gravity>
     574:	90 93 5c 01 	sts	0x015C, r25	; 0x80015c <x_gravity+0x1>
     578:	a0 93 5d 01 	sts	0x015D, r26	; 0x80015d <x_gravity+0x2>
     57c:	b0 93 5e 01 	sts	0x015E, r27	; 0x80015e <x_gravity+0x3>
			}
		}
		if (x_gravity < 0)
     580:	b0 2e       	mov	r11, r16
     582:	a1 2e       	mov	r10, r17
     584:	9c 2e       	mov	r9, r28
     586:	8d 2e       	mov	r8, r29
     588:	13 c0       	rjmp	.+38     	; 0x5b0 <__FUSE_REGION_LENGTH__+0x1b0>
     58a:	b0 90 5b 01 	lds	r11, 0x015B	; 0x80015b <x_gravity>
     58e:	a0 90 5c 01 	lds	r10, 0x015C	; 0x80015c <x_gravity+0x1>
     592:	90 90 5d 01 	lds	r9, 0x015D	; 0x80015d <x_gravity+0x2>
     596:	80 90 5e 01 	lds	r8, 0x015E	; 0x80015e <x_gravity+0x3>
     59a:	20 e0       	ldi	r18, 0x00	; 0
     59c:	30 e0       	ldi	r19, 0x00	; 0
     59e:	a9 01       	movw	r20, r18
     5a0:	6b 2d       	mov	r22, r11
     5a2:	7a 2d       	mov	r23, r10
     5a4:	89 2d       	mov	r24, r9
     5a6:	98 2d       	mov	r25, r8
     5a8:	0e 94 3f 0e 	call	0x1c7e	; 0x1c7e <__cmpsf2>
     5ac:	88 23       	and	r24, r24
     5ae:	54 f5       	brge	.+84     	; 0x604 <__FUSE_REGION_LENGTH__+0x204>
		{
			if (((x_gravity - x_g) < 0.1) && ((x_gravity - x_g) > -0.1))
     5b0:	20 2f       	mov	r18, r16
     5b2:	31 2f       	mov	r19, r17
     5b4:	4c 2f       	mov	r20, r28
     5b6:	5d 2f       	mov	r21, r29
     5b8:	6b 2d       	mov	r22, r11
     5ba:	7a 2d       	mov	r23, r10
     5bc:	89 2d       	mov	r24, r9
     5be:	98 2d       	mov	r25, r8
     5c0:	0e 94 a3 0d 	call	0x1b46	; 0x1b46 <__subsf3>
     5c4:	4b 01       	movw	r8, r22
     5c6:	5c 01       	movw	r10, r24
     5c8:	2d ec       	ldi	r18, 0xCD	; 205
     5ca:	3c ec       	ldi	r19, 0xCC	; 204
     5cc:	4c ec       	ldi	r20, 0xCC	; 204
     5ce:	5d e3       	ldi	r21, 0x3D	; 61
     5d0:	0e 94 3f 0e 	call	0x1c7e	; 0x1c7e <__cmpsf2>
     5d4:	88 23       	and	r24, r24
     5d6:	b4 f4       	brge	.+44     	; 0x604 <__FUSE_REGION_LENGTH__+0x204>
     5d8:	2d ec       	ldi	r18, 0xCD	; 205
     5da:	3c ec       	ldi	r19, 0xCC	; 204
     5dc:	4c ec       	ldi	r20, 0xCC	; 204
     5de:	5d eb       	ldi	r21, 0xBD	; 189
     5e0:	c5 01       	movw	r24, r10
     5e2:	b4 01       	movw	r22, r8
     5e4:	0e 94 be 0f 	call	0x1f7c	; 0x1f7c <__gesf2>
     5e8:	18 16       	cp	r1, r24
     5ea:	64 f4       	brge	.+24     	; 0x604 <__FUSE_REGION_LENGTH__+0x204>
			{
				x_gravity = x_g;
     5ec:	80 2f       	mov	r24, r16
     5ee:	91 2f       	mov	r25, r17
     5f0:	ac 2f       	mov	r26, r28
     5f2:	bd 2f       	mov	r27, r29
     5f4:	80 93 5b 01 	sts	0x015B, r24	; 0x80015b <x_gravity>
     5f8:	90 93 5c 01 	sts	0x015C, r25	; 0x80015c <x_gravity+0x1>
     5fc:	a0 93 5d 01 	sts	0x015D, r26	; 0x80015d <x_gravity+0x2>
     600:	b0 93 5e 01 	sts	0x015E, r27	; 0x80015e <x_gravity+0x3>
			}
		}
	}
	if (y_g > 0)
     604:	80 90 bd 01 	lds	r8, 0x01BD	; 0x8001bd <y_g>
     608:	90 90 be 01 	lds	r9, 0x01BE	; 0x8001be <y_g+0x1>
     60c:	a0 90 bf 01 	lds	r10, 0x01BF	; 0x8001bf <y_g+0x2>
     610:	b0 90 c0 01 	lds	r11, 0x01C0	; 0x8001c0 <y_g+0x3>
     614:	20 e0       	ldi	r18, 0x00	; 0
     616:	30 e0       	ldi	r19, 0x00	; 0
     618:	a9 01       	movw	r20, r18
     61a:	68 2d       	mov	r22, r8
     61c:	79 2d       	mov	r23, r9
     61e:	8a 2d       	mov	r24, r10
     620:	9b 2d       	mov	r25, r11
     622:	0e 94 be 0f 	call	0x1f7c	; 0x1f7c <__gesf2>
     626:	18 16       	cp	r1, r24
     628:	0c f0       	brlt	.+2      	; 0x62c <__FUSE_REGION_LENGTH__+0x22c>
     62a:	77 c0       	rjmp	.+238    	; 0x71a <__FUSE_REGION_LENGTH__+0x31a>
	{
		if (y_gravity > 0)
     62c:	20 e0       	ldi	r18, 0x00	; 0
     62e:	30 e0       	ldi	r19, 0x00	; 0
     630:	a9 01       	movw	r20, r18
     632:	c7 01       	movw	r24, r14
     634:	b6 01       	movw	r22, r12
     636:	0e 94 be 0f 	call	0x1f7c	; 0x1f7c <__gesf2>
     63a:	18 16       	cp	r1, r24
     63c:	44 f5       	brge	.+80     	; 0x68e <__FUSE_REGION_LENGTH__+0x28e>
		{
			if (((y_gravity - y_g) < 0.1) && ((y_gravity - y_g) > -0.1))
     63e:	28 2d       	mov	r18, r8
     640:	39 2d       	mov	r19, r9
     642:	4a 2d       	mov	r20, r10
     644:	5b 2d       	mov	r21, r11
     646:	c7 01       	movw	r24, r14
     648:	b6 01       	movw	r22, r12
     64a:	0e 94 a3 0d 	call	0x1b46	; 0x1b46 <__subsf3>
     64e:	6b 01       	movw	r12, r22
     650:	7c 01       	movw	r14, r24
     652:	2d ec       	ldi	r18, 0xCD	; 205
     654:	3c ec       	ldi	r19, 0xCC	; 204
     656:	4c ec       	ldi	r20, 0xCC	; 204
     658:	5d e3       	ldi	r21, 0x3D	; 61
     65a:	0e 94 3f 0e 	call	0x1c7e	; 0x1c7e <__cmpsf2>
     65e:	88 23       	and	r24, r24
     660:	b4 f4       	brge	.+44     	; 0x68e <__FUSE_REGION_LENGTH__+0x28e>
     662:	2d ec       	ldi	r18, 0xCD	; 205
     664:	3c ec       	ldi	r19, 0xCC	; 204
     666:	4c ec       	ldi	r20, 0xCC	; 204
     668:	5d eb       	ldi	r21, 0xBD	; 189
     66a:	c7 01       	movw	r24, r14
     66c:	b6 01       	movw	r22, r12
     66e:	0e 94 be 0f 	call	0x1f7c	; 0x1f7c <__gesf2>
     672:	18 16       	cp	r1, r24
     674:	64 f4       	brge	.+24     	; 0x68e <__FUSE_REGION_LENGTH__+0x28e>
			{
				y_gravity = y_g;
     676:	88 2d       	mov	r24, r8
     678:	99 2d       	mov	r25, r9
     67a:	aa 2d       	mov	r26, r10
     67c:	bb 2d       	mov	r27, r11
     67e:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <y_gravity>
     682:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <y_gravity+0x1>
     686:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <y_gravity+0x2>
     68a:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <y_gravity+0x3>
			}
		}
		if (y_gravity < 0)
     68e:	c0 90 60 01 	lds	r12, 0x0160	; 0x800160 <y_gravity>
     692:	d0 90 61 01 	lds	r13, 0x0161	; 0x800161 <y_gravity+0x1>
     696:	e0 90 62 01 	lds	r14, 0x0162	; 0x800162 <y_gravity+0x2>
     69a:	f0 90 63 01 	lds	r15, 0x0163	; 0x800163 <y_gravity+0x3>
     69e:	20 e0       	ldi	r18, 0x00	; 0
     6a0:	30 e0       	ldi	r19, 0x00	; 0
     6a2:	a9 01       	movw	r20, r18
     6a4:	c7 01       	movw	r24, r14
     6a6:	b6 01       	movw	r22, r12
     6a8:	0e 94 3f 0e 	call	0x1c7e	; 0x1c7e <__cmpsf2>
     6ac:	88 23       	and	r24, r24
     6ae:	ac f5       	brge	.+106    	; 0x71a <__FUSE_REGION_LENGTH__+0x31a>
		{
			if (((y_gravity + y_g) < 0.1) && ((y_gravity + y_g) > -0.1))
     6b0:	a7 01       	movw	r20, r14
     6b2:	96 01       	movw	r18, r12
     6b4:	68 2d       	mov	r22, r8
     6b6:	79 2d       	mov	r23, r9
     6b8:	8a 2d       	mov	r24, r10
     6ba:	9b 2d       	mov	r25, r11
     6bc:	0e 94 a4 0d 	call	0x1b48	; 0x1b48 <__addsf3>
     6c0:	6b 01       	movw	r12, r22
     6c2:	7c 01       	movw	r14, r24
     6c4:	2d ec       	ldi	r18, 0xCD	; 205
     6c6:	3c ec       	ldi	r19, 0xCC	; 204
     6c8:	4c ec       	ldi	r20, 0xCC	; 204
     6ca:	5d e3       	ldi	r21, 0x3D	; 61
     6cc:	0e 94 3f 0e 	call	0x1c7e	; 0x1c7e <__cmpsf2>
     6d0:	88 23       	and	r24, r24
     6d2:	1c f5       	brge	.+70     	; 0x71a <__FUSE_REGION_LENGTH__+0x31a>
     6d4:	2d ec       	ldi	r18, 0xCD	; 205
     6d6:	3c ec       	ldi	r19, 0xCC	; 204
     6d8:	4c ec       	ldi	r20, 0xCC	; 204
     6da:	5d eb       	ldi	r21, 0xBD	; 189
     6dc:	c7 01       	movw	r24, r14
     6de:	b6 01       	movw	r22, r12
     6e0:	0e 94 be 0f 	call	0x1f7c	; 0x1f7c <__gesf2>
     6e4:	18 16       	cp	r1, r24
     6e6:	cc f4       	brge	.+50     	; 0x71a <__FUSE_REGION_LENGTH__+0x31a>
			{
				y_gravity = y_g;
     6e8:	88 2d       	mov	r24, r8
     6ea:	99 2d       	mov	r25, r9
     6ec:	aa 2d       	mov	r26, r10
     6ee:	bb 2d       	mov	r27, r11
     6f0:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <y_gravity>
     6f4:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <y_gravity+0x1>
     6f8:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <y_gravity+0x2>
     6fc:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <y_gravity+0x3>
			}
		}
	}
	if (y_g < 0)
     700:	20 e0       	ldi	r18, 0x00	; 0
     702:	30 e0       	ldi	r19, 0x00	; 0
     704:	a9 01       	movw	r20, r18
     706:	68 2d       	mov	r22, r8
     708:	79 2d       	mov	r23, r9
     70a:	8a 2d       	mov	r24, r10
     70c:	9b 2d       	mov	r25, r11
     70e:	0e 94 3f 0e 	call	0x1c7e	; 0x1c7e <__cmpsf2>
     712:	88 23       	and	r24, r24
     714:	0c f0       	brlt	.+2      	; 0x718 <__FUSE_REGION_LENGTH__+0x318>
     716:	88 c0       	rjmp	.+272    	; 0x828 <__FUSE_REGION_LENGTH__+0x428>
     718:	1b c2       	rjmp	.+1078   	; 0xb50 <__stack+0x251>
     71a:	20 e0       	ldi	r18, 0x00	; 0
     71c:	30 e0       	ldi	r19, 0x00	; 0
     71e:	a9 01       	movw	r20, r18
     720:	68 2d       	mov	r22, r8
     722:	79 2d       	mov	r23, r9
     724:	8a 2d       	mov	r24, r10
     726:	9b 2d       	mov	r25, r11
     728:	0e 94 3f 0e 	call	0x1c7e	; 0x1c7e <__cmpsf2>
     72c:	88 23       	and	r24, r24
     72e:	0c f0       	brlt	.+2      	; 0x732 <__FUSE_REGION_LENGTH__+0x332>
     730:	7b c0       	rjmp	.+246    	; 0x828 <__FUSE_REGION_LENGTH__+0x428>
	{
		if (y_gravity > 0)
     732:	c0 90 60 01 	lds	r12, 0x0160	; 0x800160 <y_gravity>
     736:	d0 90 61 01 	lds	r13, 0x0161	; 0x800161 <y_gravity+0x1>
     73a:	e0 90 62 01 	lds	r14, 0x0162	; 0x800162 <y_gravity+0x2>
     73e:	f0 90 63 01 	lds	r15, 0x0163	; 0x800163 <y_gravity+0x3>
     742:	20 e0       	ldi	r18, 0x00	; 0
     744:	30 e0       	ldi	r19, 0x00	; 0
     746:	a9 01       	movw	r20, r18
     748:	c7 01       	movw	r24, r14
     74a:	b6 01       	movw	r22, r12
     74c:	0e 94 be 0f 	call	0x1f7c	; 0x1f7c <__gesf2>
     750:	18 16       	cp	r1, r24
     752:	6c f5       	brge	.+90     	; 0x7ae <__FUSE_REGION_LENGTH__+0x3ae>
		{
			if (((y_gravity + y_g) < 0.1) && ((y_gravity + y_g) > -0.1))
     754:	a7 01       	movw	r20, r14
     756:	96 01       	movw	r18, r12
     758:	68 2d       	mov	r22, r8
     75a:	79 2d       	mov	r23, r9
     75c:	8a 2d       	mov	r24, r10
     75e:	9b 2d       	mov	r25, r11
     760:	0e 94 a4 0d 	call	0x1b48	; 0x1b48 <__addsf3>
     764:	6b 01       	movw	r12, r22
     766:	7c 01       	movw	r14, r24
     768:	2d ec       	ldi	r18, 0xCD	; 205
     76a:	3c ec       	ldi	r19, 0xCC	; 204
     76c:	4c ec       	ldi	r20, 0xCC	; 204
     76e:	5d e3       	ldi	r21, 0x3D	; 61
     770:	0e 94 3f 0e 	call	0x1c7e	; 0x1c7e <__cmpsf2>
     774:	88 23       	and	r24, r24
     776:	dc f4       	brge	.+54     	; 0x7ae <__FUSE_REGION_LENGTH__+0x3ae>
     778:	2d ec       	ldi	r18, 0xCD	; 205
     77a:	3c ec       	ldi	r19, 0xCC	; 204
     77c:	4c ec       	ldi	r20, 0xCC	; 204
     77e:	5d eb       	ldi	r21, 0xBD	; 189
     780:	c7 01       	movw	r24, r14
     782:	b6 01       	movw	r22, r12
     784:	0e 94 be 0f 	call	0x1f7c	; 0x1f7c <__gesf2>
     788:	18 16       	cp	r1, r24
     78a:	8c f4       	brge	.+34     	; 0x7ae <__FUSE_REGION_LENGTH__+0x3ae>
			{
				y_gravity = y_g;
     78c:	88 2d       	mov	r24, r8
     78e:	99 2d       	mov	r25, r9
     790:	aa 2d       	mov	r26, r10
     792:	bb 2d       	mov	r27, r11
     794:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <y_gravity>
     798:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <y_gravity+0x1>
     79c:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <y_gravity+0x2>
     7a0:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <y_gravity+0x3>
			}
		}
		if (y_gravity < 0)
     7a4:	f8 2c       	mov	r15, r8
     7a6:	e9 2c       	mov	r14, r9
     7a8:	da 2c       	mov	r13, r10
     7aa:	cb 2c       	mov	r12, r11
     7ac:	13 c0       	rjmp	.+38     	; 0x7d4 <__FUSE_REGION_LENGTH__+0x3d4>
     7ae:	f0 90 60 01 	lds	r15, 0x0160	; 0x800160 <y_gravity>
     7b2:	e0 90 61 01 	lds	r14, 0x0161	; 0x800161 <y_gravity+0x1>
     7b6:	d0 90 62 01 	lds	r13, 0x0162	; 0x800162 <y_gravity+0x2>
     7ba:	c0 90 63 01 	lds	r12, 0x0163	; 0x800163 <y_gravity+0x3>
     7be:	20 e0       	ldi	r18, 0x00	; 0
     7c0:	30 e0       	ldi	r19, 0x00	; 0
     7c2:	a9 01       	movw	r20, r18
     7c4:	6f 2d       	mov	r22, r15
     7c6:	7e 2d       	mov	r23, r14
     7c8:	8d 2d       	mov	r24, r13
     7ca:	9c 2d       	mov	r25, r12
     7cc:	0e 94 3f 0e 	call	0x1c7e	; 0x1c7e <__cmpsf2>
     7d0:	88 23       	and	r24, r24
     7d2:	54 f5       	brge	.+84     	; 0x828 <__FUSE_REGION_LENGTH__+0x428>
		{
			if (((y_gravity - y_g) < 0.1) && ((y_gravity - y_g) > -0.1))
     7d4:	28 2d       	mov	r18, r8
     7d6:	39 2d       	mov	r19, r9
     7d8:	4a 2d       	mov	r20, r10
     7da:	5b 2d       	mov	r21, r11
     7dc:	6f 2d       	mov	r22, r15
     7de:	7e 2d       	mov	r23, r14
     7e0:	8d 2d       	mov	r24, r13
     7e2:	9c 2d       	mov	r25, r12
     7e4:	0e 94 a3 0d 	call	0x1b46	; 0x1b46 <__subsf3>
     7e8:	6b 01       	movw	r12, r22
     7ea:	7c 01       	movw	r14, r24
     7ec:	2d ec       	ldi	r18, 0xCD	; 205
     7ee:	3c ec       	ldi	r19, 0xCC	; 204
     7f0:	4c ec       	ldi	r20, 0xCC	; 204
     7f2:	5d e3       	ldi	r21, 0x3D	; 61
     7f4:	0e 94 3f 0e 	call	0x1c7e	; 0x1c7e <__cmpsf2>
     7f8:	88 23       	and	r24, r24
     7fa:	b4 f4       	brge	.+44     	; 0x828 <__FUSE_REGION_LENGTH__+0x428>
     7fc:	2d ec       	ldi	r18, 0xCD	; 205
     7fe:	3c ec       	ldi	r19, 0xCC	; 204
     800:	4c ec       	ldi	r20, 0xCC	; 204
     802:	5d eb       	ldi	r21, 0xBD	; 189
     804:	c7 01       	movw	r24, r14
     806:	b6 01       	movw	r22, r12
     808:	0e 94 be 0f 	call	0x1f7c	; 0x1f7c <__gesf2>
     80c:	18 16       	cp	r1, r24
     80e:	64 f4       	brge	.+24     	; 0x828 <__FUSE_REGION_LENGTH__+0x428>
			{
				y_gravity = y_g;
     810:	88 2d       	mov	r24, r8
     812:	99 2d       	mov	r25, r9
     814:	aa 2d       	mov	r26, r10
     816:	bb 2d       	mov	r27, r11
     818:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <y_gravity>
     81c:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <y_gravity+0x1>
     820:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <y_gravity+0x2>
     824:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <y_gravity+0x3>
			}
		}
	}
	
	if (x_gravity > 0)
     828:	c0 90 5b 01 	lds	r12, 0x015B	; 0x80015b <x_gravity>
     82c:	d0 90 5c 01 	lds	r13, 0x015C	; 0x80015c <x_gravity+0x1>
     830:	e0 90 5d 01 	lds	r14, 0x015D	; 0x80015d <x_gravity+0x2>
     834:	f0 90 5e 01 	lds	r15, 0x015E	; 0x80015e <x_gravity+0x3>
     838:	20 e0       	ldi	r18, 0x00	; 0
     83a:	30 e0       	ldi	r19, 0x00	; 0
     83c:	a9 01       	movw	r20, r18
     83e:	c7 01       	movw	r24, r14
     840:	b6 01       	movw	r22, r12
     842:	0e 94 be 0f 	call	0x1f7c	; 0x1f7c <__gesf2>
     846:	18 16       	cp	r1, r24
     848:	c4 f5       	brge	.+112    	; 0x8ba <__FUSE_REGION_LENGTH__+0x4ba>
	{
		if (x_g > 0)
     84a:	20 e0       	ldi	r18, 0x00	; 0
     84c:	30 e0       	ldi	r19, 0x00	; 0
     84e:	a9 01       	movw	r20, r18
     850:	60 2f       	mov	r22, r16
     852:	71 2f       	mov	r23, r17
     854:	8c 2f       	mov	r24, r28
     856:	9d 2f       	mov	r25, r29
     858:	0e 94 be 0f 	call	0x1f7c	; 0x1f7c <__gesf2>
     85c:	18 16       	cp	r1, r24
     85e:	84 f4       	brge	.+32     	; 0x880 <__FUSE_REGION_LENGTH__+0x480>
		{
			x_acceleration = x_g - x_gravity;
     860:	a7 01       	movw	r20, r14
     862:	96 01       	movw	r18, r12
     864:	60 2f       	mov	r22, r16
     866:	71 2f       	mov	r23, r17
     868:	8c 2f       	mov	r24, r28
     86a:	9d 2f       	mov	r25, r29
     86c:	0e 94 a3 0d 	call	0x1b46	; 0x1b46 <__subsf3>
     870:	60 93 7f 01 	sts	0x017F, r22	; 0x80017f <x_acceleration>
     874:	70 93 80 01 	sts	0x0180, r23	; 0x800180 <x_acceleration+0x1>
     878:	80 93 81 01 	sts	0x0181, r24	; 0x800181 <x_acceleration+0x2>
     87c:	90 93 82 01 	sts	0x0182, r25	; 0x800182 <x_acceleration+0x3>
		}
	
		if (x_g < 0)
     880:	20 e0       	ldi	r18, 0x00	; 0
     882:	30 e0       	ldi	r19, 0x00	; 0
     884:	a9 01       	movw	r20, r18
     886:	60 2f       	mov	r22, r16
     888:	71 2f       	mov	r23, r17
     88a:	8c 2f       	mov	r24, r28
     88c:	9d 2f       	mov	r25, r29
     88e:	0e 94 3f 0e 	call	0x1c7e	; 0x1c7e <__cmpsf2>
     892:	88 23       	and	r24, r24
     894:	0c f0       	brlt	.+2      	; 0x898 <__FUSE_REGION_LENGTH__+0x498>
     896:	47 c0       	rjmp	.+142    	; 0x926 <__stack+0x27>
		{
			x_acceleration = x_g + x_gravity;
     898:	a7 01       	movw	r20, r14
     89a:	96 01       	movw	r18, r12
     89c:	60 2f       	mov	r22, r16
     89e:	71 2f       	mov	r23, r17
     8a0:	8c 2f       	mov	r24, r28
     8a2:	9d 2f       	mov	r25, r29
     8a4:	0e 94 a4 0d 	call	0x1b48	; 0x1b48 <__addsf3>
     8a8:	60 93 7f 01 	sts	0x017F, r22	; 0x80017f <x_acceleration>
     8ac:	70 93 80 01 	sts	0x0180, r23	; 0x800180 <x_acceleration+0x1>
     8b0:	80 93 81 01 	sts	0x0181, r24	; 0x800181 <x_acceleration+0x2>
     8b4:	90 93 82 01 	sts	0x0182, r25	; 0x800182 <x_acceleration+0x3>
     8b8:	36 c0       	rjmp	.+108    	; 0x926 <__stack+0x27>
		}
	}
	
	else
	{
		if (x_g > 0)
     8ba:	20 e0       	ldi	r18, 0x00	; 0
     8bc:	30 e0       	ldi	r19, 0x00	; 0
     8be:	a9 01       	movw	r20, r18
     8c0:	60 2f       	mov	r22, r16
     8c2:	71 2f       	mov	r23, r17
     8c4:	8c 2f       	mov	r24, r28
     8c6:	9d 2f       	mov	r25, r29
     8c8:	0e 94 be 0f 	call	0x1f7c	; 0x1f7c <__gesf2>
     8cc:	18 16       	cp	r1, r24
     8ce:	84 f4       	brge	.+32     	; 0x8f0 <__FUSE_REGION_LENGTH__+0x4f0>
		{
			x_acceleration = x_g + x_gravity;
     8d0:	a7 01       	movw	r20, r14
     8d2:	96 01       	movw	r18, r12
     8d4:	60 2f       	mov	r22, r16
     8d6:	71 2f       	mov	r23, r17
     8d8:	8c 2f       	mov	r24, r28
     8da:	9d 2f       	mov	r25, r29
     8dc:	0e 94 a4 0d 	call	0x1b48	; 0x1b48 <__addsf3>
     8e0:	60 93 7f 01 	sts	0x017F, r22	; 0x80017f <x_acceleration>
     8e4:	70 93 80 01 	sts	0x0180, r23	; 0x800180 <x_acceleration+0x1>
     8e8:	80 93 81 01 	sts	0x0181, r24	; 0x800181 <x_acceleration+0x2>
     8ec:	90 93 82 01 	sts	0x0182, r25	; 0x800182 <x_acceleration+0x3>
		}
		if (x_g < 0)
     8f0:	20 e0       	ldi	r18, 0x00	; 0
     8f2:	30 e0       	ldi	r19, 0x00	; 0
     8f4:	a9 01       	movw	r20, r18
     8f6:	60 2f       	mov	r22, r16
     8f8:	71 2f       	mov	r23, r17
     8fa:	8c 2f       	mov	r24, r28
     8fc:	9d 2f       	mov	r25, r29
     8fe:	0e 94 3f 0e 	call	0x1c7e	; 0x1c7e <__cmpsf2>
     902:	88 23       	and	r24, r24
     904:	84 f4       	brge	.+32     	; 0x926 <__stack+0x27>
		{
			x_acceleration = x_g - x_gravity;
     906:	a7 01       	movw	r20, r14
     908:	96 01       	movw	r18, r12
     90a:	60 2f       	mov	r22, r16
     90c:	71 2f       	mov	r23, r17
     90e:	8c 2f       	mov	r24, r28
     910:	9d 2f       	mov	r25, r29
     912:	0e 94 a3 0d 	call	0x1b46	; 0x1b46 <__subsf3>
     916:	60 93 7f 01 	sts	0x017F, r22	; 0x80017f <x_acceleration>
     91a:	70 93 80 01 	sts	0x0180, r23	; 0x800180 <x_acceleration+0x1>
     91e:	80 93 81 01 	sts	0x0181, r24	; 0x800181 <x_acceleration+0x2>
     922:	90 93 82 01 	sts	0x0182, r25	; 0x800182 <x_acceleration+0x3>
		}
	}
	
	if (y_gravity > 0)
     926:	c0 90 60 01 	lds	r12, 0x0160	; 0x800160 <y_gravity>
     92a:	d0 90 61 01 	lds	r13, 0x0161	; 0x800161 <y_gravity+0x1>
     92e:	e0 90 62 01 	lds	r14, 0x0162	; 0x800162 <y_gravity+0x2>
     932:	f0 90 63 01 	lds	r15, 0x0163	; 0x800163 <y_gravity+0x3>
     936:	20 e0       	ldi	r18, 0x00	; 0
     938:	30 e0       	ldi	r19, 0x00	; 0
     93a:	a9 01       	movw	r20, r18
     93c:	c7 01       	movw	r24, r14
     93e:	b6 01       	movw	r22, r12
     940:	0e 94 be 0f 	call	0x1f7c	; 0x1f7c <__gesf2>
     944:	18 16       	cp	r1, r24
     946:	c4 f5       	brge	.+112    	; 0x9b8 <__stack+0xb9>
	{
		if (y_g > 0)
     948:	80 90 bd 01 	lds	r8, 0x01BD	; 0x8001bd <y_g>
     94c:	90 90 be 01 	lds	r9, 0x01BE	; 0x8001be <y_g+0x1>
     950:	a0 90 bf 01 	lds	r10, 0x01BF	; 0x8001bf <y_g+0x2>
     954:	b0 90 c0 01 	lds	r11, 0x01C0	; 0x8001c0 <y_g+0x3>
     958:	20 e0       	ldi	r18, 0x00	; 0
     95a:	30 e0       	ldi	r19, 0x00	; 0
     95c:	a9 01       	movw	r20, r18
     95e:	c5 01       	movw	r24, r10
     960:	b4 01       	movw	r22, r8
     962:	0e 94 be 0f 	call	0x1f7c	; 0x1f7c <__gesf2>
     966:	18 16       	cp	r1, r24
     968:	74 f4       	brge	.+28     	; 0x986 <__stack+0x87>
		{
			y_acceleration = y_g - y_gravity;
     96a:	a7 01       	movw	r20, r14
     96c:	96 01       	movw	r18, r12
     96e:	c5 01       	movw	r24, r10
     970:	b4 01       	movw	r22, r8
     972:	0e 94 a3 0d 	call	0x1b46	; 0x1b46 <__subsf3>
     976:	60 93 91 01 	sts	0x0191, r22	; 0x800191 <y_acceleration>
     97a:	70 93 92 01 	sts	0x0192, r23	; 0x800192 <y_acceleration+0x1>
     97e:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <y_acceleration+0x2>
     982:	90 93 94 01 	sts	0x0194, r25	; 0x800194 <y_acceleration+0x3>
		}
		if (y_g < 0)
     986:	20 e0       	ldi	r18, 0x00	; 0
     988:	30 e0       	ldi	r19, 0x00	; 0
     98a:	a9 01       	movw	r20, r18
     98c:	c5 01       	movw	r24, r10
     98e:	b4 01       	movw	r22, r8
     990:	0e 94 3f 0e 	call	0x1c7e	; 0x1c7e <__cmpsf2>
     994:	88 23       	and	r24, r24
     996:	0c f0       	brlt	.+2      	; 0x99a <__stack+0x9b>
     998:	45 c0       	rjmp	.+138    	; 0xa24 <__stack+0x125>
		{
			y_acceleration = y_g + y_gravity;
     99a:	a5 01       	movw	r20, r10
     99c:	94 01       	movw	r18, r8
     99e:	c7 01       	movw	r24, r14
     9a0:	b6 01       	movw	r22, r12
     9a2:	0e 94 a4 0d 	call	0x1b48	; 0x1b48 <__addsf3>
     9a6:	60 93 91 01 	sts	0x0191, r22	; 0x800191 <y_acceleration>
     9aa:	70 93 92 01 	sts	0x0192, r23	; 0x800192 <y_acceleration+0x1>
     9ae:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <y_acceleration+0x2>
     9b2:	90 93 94 01 	sts	0x0194, r25	; 0x800194 <y_acceleration+0x3>
     9b6:	36 c0       	rjmp	.+108    	; 0xa24 <__stack+0x125>
		}
	}
	
	else
	{
		if (y_g > 0)
     9b8:	80 90 bd 01 	lds	r8, 0x01BD	; 0x8001bd <y_g>
     9bc:	90 90 be 01 	lds	r9, 0x01BE	; 0x8001be <y_g+0x1>
     9c0:	a0 90 bf 01 	lds	r10, 0x01BF	; 0x8001bf <y_g+0x2>
     9c4:	b0 90 c0 01 	lds	r11, 0x01C0	; 0x8001c0 <y_g+0x3>
     9c8:	20 e0       	ldi	r18, 0x00	; 0
     9ca:	30 e0       	ldi	r19, 0x00	; 0
     9cc:	a9 01       	movw	r20, r18
     9ce:	c5 01       	movw	r24, r10
     9d0:	b4 01       	movw	r22, r8
     9d2:	0e 94 be 0f 	call	0x1f7c	; 0x1f7c <__gesf2>
     9d6:	18 16       	cp	r1, r24
     9d8:	74 f4       	brge	.+28     	; 0x9f6 <__stack+0xf7>
		{
			y_acceleration = y_g + y_gravity;
     9da:	a5 01       	movw	r20, r10
     9dc:	94 01       	movw	r18, r8
     9de:	c7 01       	movw	r24, r14
     9e0:	b6 01       	movw	r22, r12
     9e2:	0e 94 a4 0d 	call	0x1b48	; 0x1b48 <__addsf3>
     9e6:	60 93 91 01 	sts	0x0191, r22	; 0x800191 <y_acceleration>
     9ea:	70 93 92 01 	sts	0x0192, r23	; 0x800192 <y_acceleration+0x1>
     9ee:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <y_acceleration+0x2>
     9f2:	90 93 94 01 	sts	0x0194, r25	; 0x800194 <y_acceleration+0x3>
		}
		
		if (y_g < 0)
     9f6:	20 e0       	ldi	r18, 0x00	; 0
     9f8:	30 e0       	ldi	r19, 0x00	; 0
     9fa:	a9 01       	movw	r20, r18
     9fc:	c5 01       	movw	r24, r10
     9fe:	b4 01       	movw	r22, r8
     a00:	0e 94 3f 0e 	call	0x1c7e	; 0x1c7e <__cmpsf2>
     a04:	88 23       	and	r24, r24
     a06:	74 f4       	brge	.+28     	; 0xa24 <__stack+0x125>
		{
			y_acceleration = y_g - y_gravity;
     a08:	a7 01       	movw	r20, r14
     a0a:	96 01       	movw	r18, r12
     a0c:	c5 01       	movw	r24, r10
     a0e:	b4 01       	movw	r22, r8
     a10:	0e 94 a3 0d 	call	0x1b46	; 0x1b46 <__subsf3>
     a14:	60 93 91 01 	sts	0x0191, r22	; 0x800191 <y_acceleration>
     a18:	70 93 92 01 	sts	0x0192, r23	; 0x800192 <y_acceleration+0x1>
     a1c:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <y_acceleration+0x2>
     a20:	90 93 94 01 	sts	0x0194, r25	; 0x800194 <y_acceleration+0x3>
		}
	}
	
	if (z_gravity > 0)
     a24:	c0 90 56 01 	lds	r12, 0x0156	; 0x800156 <z_gravity>
     a28:	d0 90 57 01 	lds	r13, 0x0157	; 0x800157 <z_gravity+0x1>
     a2c:	e0 90 58 01 	lds	r14, 0x0158	; 0x800158 <z_gravity+0x2>
     a30:	f0 90 59 01 	lds	r15, 0x0159	; 0x800159 <z_gravity+0x3>
     a34:	20 e0       	ldi	r18, 0x00	; 0
     a36:	30 e0       	ldi	r19, 0x00	; 0
     a38:	a9 01       	movw	r20, r18
     a3a:	c7 01       	movw	r24, r14
     a3c:	b6 01       	movw	r22, r12
     a3e:	0e 94 be 0f 	call	0x1f7c	; 0x1f7c <__gesf2>
     a42:	18 16       	cp	r1, r24
     a44:	c4 f5       	brge	.+112    	; 0xab6 <__stack+0x1b7>
	{
		if (z_g > 0)
     a46:	80 90 b5 01 	lds	r8, 0x01B5	; 0x8001b5 <z_g>
     a4a:	90 90 b6 01 	lds	r9, 0x01B6	; 0x8001b6 <z_g+0x1>
     a4e:	a0 90 b7 01 	lds	r10, 0x01B7	; 0x8001b7 <z_g+0x2>
     a52:	b0 90 b8 01 	lds	r11, 0x01B8	; 0x8001b8 <z_g+0x3>
     a56:	20 e0       	ldi	r18, 0x00	; 0
     a58:	30 e0       	ldi	r19, 0x00	; 0
     a5a:	a9 01       	movw	r20, r18
     a5c:	c5 01       	movw	r24, r10
     a5e:	b4 01       	movw	r22, r8
     a60:	0e 94 be 0f 	call	0x1f7c	; 0x1f7c <__gesf2>
     a64:	18 16       	cp	r1, r24
     a66:	74 f4       	brge	.+28     	; 0xa84 <__stack+0x185>
		{
			z_acceleration = z_g - z_gravity;
     a68:	a7 01       	movw	r20, r14
     a6a:	96 01       	movw	r18, r12
     a6c:	c5 01       	movw	r24, r10
     a6e:	b4 01       	movw	r22, r8
     a70:	0e 94 a3 0d 	call	0x1b46	; 0x1b46 <__subsf3>
     a74:	60 93 85 01 	sts	0x0185, r22	; 0x800185 <z_acceleration>
     a78:	70 93 86 01 	sts	0x0186, r23	; 0x800186 <z_acceleration+0x1>
     a7c:	80 93 87 01 	sts	0x0187, r24	; 0x800187 <z_acceleration+0x2>
     a80:	90 93 88 01 	sts	0x0188, r25	; 0x800188 <z_acceleration+0x3>
		}
		if (z_g < 0)
     a84:	20 e0       	ldi	r18, 0x00	; 0
     a86:	30 e0       	ldi	r19, 0x00	; 0
     a88:	a9 01       	movw	r20, r18
     a8a:	c5 01       	movw	r24, r10
     a8c:	b4 01       	movw	r22, r8
     a8e:	0e 94 3f 0e 	call	0x1c7e	; 0x1c7e <__cmpsf2>
     a92:	88 23       	and	r24, r24
     a94:	0c f0       	brlt	.+2      	; 0xa98 <__stack+0x199>
     a96:	83 c0       	rjmp	.+262    	; 0xb9e <__stack+0x29f>
		{
			z_acceleration = z_g + z_gravity;
     a98:	a5 01       	movw	r20, r10
     a9a:	94 01       	movw	r18, r8
     a9c:	c7 01       	movw	r24, r14
     a9e:	b6 01       	movw	r22, r12
     aa0:	0e 94 a4 0d 	call	0x1b48	; 0x1b48 <__addsf3>
     aa4:	60 93 85 01 	sts	0x0185, r22	; 0x800185 <z_acceleration>
     aa8:	70 93 86 01 	sts	0x0186, r23	; 0x800186 <z_acceleration+0x1>
     aac:	80 93 87 01 	sts	0x0187, r24	; 0x800187 <z_acceleration+0x2>
     ab0:	90 93 88 01 	sts	0x0188, r25	; 0x800188 <z_acceleration+0x3>
     ab4:	74 c0       	rjmp	.+232    	; 0xb9e <__stack+0x29f>
		}
	}
		
	else
	{
		if (z_g > 0)
     ab6:	80 90 b5 01 	lds	r8, 0x01B5	; 0x8001b5 <z_g>
     aba:	90 90 b6 01 	lds	r9, 0x01B6	; 0x8001b6 <z_g+0x1>
     abe:	a0 90 b7 01 	lds	r10, 0x01B7	; 0x8001b7 <z_g+0x2>
     ac2:	b0 90 b8 01 	lds	r11, 0x01B8	; 0x8001b8 <z_g+0x3>
     ac6:	20 e0       	ldi	r18, 0x00	; 0
     ac8:	30 e0       	ldi	r19, 0x00	; 0
     aca:	a9 01       	movw	r20, r18
     acc:	c5 01       	movw	r24, r10
     ace:	b4 01       	movw	r22, r8
     ad0:	0e 94 be 0f 	call	0x1f7c	; 0x1f7c <__gesf2>
     ad4:	18 16       	cp	r1, r24
     ad6:	74 f4       	brge	.+28     	; 0xaf4 <__stack+0x1f5>
		{
			z_acceleration = z_g + z_gravity;
     ad8:	a5 01       	movw	r20, r10
     ada:	94 01       	movw	r18, r8
     adc:	c7 01       	movw	r24, r14
     ade:	b6 01       	movw	r22, r12
     ae0:	0e 94 a4 0d 	call	0x1b48	; 0x1b48 <__addsf3>
     ae4:	60 93 85 01 	sts	0x0185, r22	; 0x800185 <z_acceleration>
     ae8:	70 93 86 01 	sts	0x0186, r23	; 0x800186 <z_acceleration+0x1>
     aec:	80 93 87 01 	sts	0x0187, r24	; 0x800187 <z_acceleration+0x2>
     af0:	90 93 88 01 	sts	0x0188, r25	; 0x800188 <z_acceleration+0x3>
		}
			
		if (z_g < 0)
     af4:	20 e0       	ldi	r18, 0x00	; 0
     af6:	30 e0       	ldi	r19, 0x00	; 0
     af8:	a9 01       	movw	r20, r18
     afa:	c5 01       	movw	r24, r10
     afc:	b4 01       	movw	r22, r8
     afe:	0e 94 3f 0e 	call	0x1c7e	; 0x1c7e <__cmpsf2>
     b02:	88 23       	and	r24, r24
     b04:	0c f0       	brlt	.+2      	; 0xb08 <__stack+0x209>
     b06:	4b c0       	rjmp	.+150    	; 0xb9e <__stack+0x29f>
		{
			z_acceleration = z_g - z_gravity;
     b08:	a7 01       	movw	r20, r14
     b0a:	96 01       	movw	r18, r12
     b0c:	c5 01       	movw	r24, r10
     b0e:	b4 01       	movw	r22, r8
     b10:	0e 94 a3 0d 	call	0x1b46	; 0x1b46 <__subsf3>
     b14:	60 93 85 01 	sts	0x0185, r22	; 0x800185 <z_acceleration>
     b18:	70 93 86 01 	sts	0x0186, r23	; 0x800186 <z_acceleration+0x1>
     b1c:	80 93 87 01 	sts	0x0187, r24	; 0x800187 <z_acceleration+0x2>
     b20:	90 93 88 01 	sts	0x0188, r25	; 0x800188 <z_acceleration+0x3>
		}
	}
}
     b24:	3c c0       	rjmp	.+120    	; 0xb9e <__stack+0x29f>
	}
	if (x_g < 0)
	{
		if (x_gravity > 0)
		{
			if (((x_gravity + x_g) < 0.1) && ((x_gravity + x_g) > -0.1))
     b26:	20 2f       	mov	r18, r16
     b28:	31 2f       	mov	r19, r17
     b2a:	4c 2f       	mov	r20, r28
     b2c:	5d 2f       	mov	r21, r29
     b2e:	60 2f       	mov	r22, r16
     b30:	71 2f       	mov	r23, r17
     b32:	8c 2f       	mov	r24, r28
     b34:	9d 2f       	mov	r25, r29
     b36:	0e 94 a4 0d 	call	0x1b48	; 0x1b48 <__addsf3>
     b3a:	4b 01       	movw	r8, r22
     b3c:	5c 01       	movw	r10, r24
     b3e:	2d ec       	ldi	r18, 0xCD	; 205
     b40:	3c ec       	ldi	r19, 0xCC	; 204
     b42:	4c ec       	ldi	r20, 0xCC	; 204
     b44:	5d e3       	ldi	r21, 0x3D	; 61
     b46:	0e 94 3f 0e 	call	0x1c7e	; 0x1c7e <__cmpsf2>
     b4a:	88 23       	and	r24, r24
     b4c:	b4 f4       	brge	.+44     	; 0xb7a <__stack+0x27b>
     b4e:	02 cd       	rjmp	.-1532   	; 0x554 <__FUSE_REGION_LENGTH__+0x154>
	}
	if (y_g < 0)
	{
		if (y_gravity > 0)
		{
			if (((y_gravity + y_g) < 0.1) && ((y_gravity + y_g) > -0.1))
     b50:	28 2d       	mov	r18, r8
     b52:	39 2d       	mov	r19, r9
     b54:	4a 2d       	mov	r20, r10
     b56:	5b 2d       	mov	r21, r11
     b58:	68 2d       	mov	r22, r8
     b5a:	79 2d       	mov	r23, r9
     b5c:	8a 2d       	mov	r24, r10
     b5e:	9b 2d       	mov	r25, r11
     b60:	0e 94 a4 0d 	call	0x1b48	; 0x1b48 <__addsf3>
     b64:	6b 01       	movw	r12, r22
     b66:	7c 01       	movw	r14, r24
     b68:	2d ec       	ldi	r18, 0xCD	; 205
     b6a:	3c ec       	ldi	r19, 0xCC	; 204
     b6c:	4c ec       	ldi	r20, 0xCC	; 204
     b6e:	5d e3       	ldi	r21, 0x3D	; 61
     b70:	0e 94 3f 0e 	call	0x1c7e	; 0x1c7e <__cmpsf2>
     b74:	88 23       	and	r24, r24
     b76:	54 f4       	brge	.+20     	; 0xb8c <__stack+0x28d>
     b78:	ff cd       	rjmp	.-1026   	; 0x778 <__FUSE_REGION_LENGTH__+0x378>
			if (((x_gravity + x_g) < 0.1) && ((x_gravity + x_g) > -0.1))
			{
				x_gravity = x_g;
			}
		}
		if (x_gravity < 0)
     b7a:	b0 90 5b 01 	lds	r11, 0x015B	; 0x80015b <x_gravity>
     b7e:	a0 90 5c 01 	lds	r10, 0x015C	; 0x80015c <x_gravity+0x1>
     b82:	90 90 5d 01 	lds	r9, 0x015D	; 0x80015d <x_gravity+0x2>
     b86:	80 90 5e 01 	lds	r8, 0x015E	; 0x80015e <x_gravity+0x3>
     b8a:	12 cd       	rjmp	.-1500   	; 0x5b0 <__FUSE_REGION_LENGTH__+0x1b0>
			if (((y_gravity + y_g) < 0.1) && ((y_gravity + y_g) > -0.1))
			{
				y_gravity = y_g;
			}
		}
		if (y_gravity < 0)
     b8c:	f0 90 60 01 	lds	r15, 0x0160	; 0x800160 <y_gravity>
     b90:	e0 90 61 01 	lds	r14, 0x0161	; 0x800161 <y_gravity+0x1>
     b94:	d0 90 62 01 	lds	r13, 0x0162	; 0x800162 <y_gravity+0x2>
     b98:	c0 90 63 01 	lds	r12, 0x0163	; 0x800163 <y_gravity+0x3>
     b9c:	1b ce       	rjmp	.-970    	; 0x7d4 <__FUSE_REGION_LENGTH__+0x3d4>
		if (z_g < 0)
		{
			z_acceleration = z_g - z_gravity;
		}
	}
}
     b9e:	df 91       	pop	r29
     ba0:	cf 91       	pop	r28
     ba2:	1f 91       	pop	r17
     ba4:	0f 91       	pop	r16
     ba6:	ff 90       	pop	r15
     ba8:	ef 90       	pop	r14
     baa:	df 90       	pop	r13
     bac:	cf 90       	pop	r12
     bae:	bf 90       	pop	r11
     bb0:	af 90       	pop	r10
     bb2:	9f 90       	pop	r9
     bb4:	8f 90       	pop	r8
     bb6:	7f 90       	pop	r7
     bb8:	6f 90       	pop	r6
     bba:	5f 90       	pop	r5
     bbc:	4f 90       	pop	r4
     bbe:	08 95       	ret

00000bc0 <getPosition>:



void getPosition(void)
{
     bc0:	8f 92       	push	r8
     bc2:	9f 92       	push	r9
     bc4:	af 92       	push	r10
     bc6:	bf 92       	push	r11
     bc8:	cf 92       	push	r12
     bca:	df 92       	push	r13
     bcc:	ef 92       	push	r14
     bce:	ff 92       	push	r15
     bd0:	cf 93       	push	r28
     bd2:	df 93       	push	r29
	//calculating the distance traveled since last data received and changing the coordinate based on that change
	//80ms between data
	X_Coordinate = X_Coordinate + (0.5*x_acceleration*0.0064*981);
     bd4:	20 e0       	ldi	r18, 0x00	; 0
     bd6:	30 e0       	ldi	r19, 0x00	; 0
     bd8:	40 e0       	ldi	r20, 0x00	; 0
     bda:	5f e3       	ldi	r21, 0x3F	; 63
     bdc:	60 91 7f 01 	lds	r22, 0x017F	; 0x80017f <x_acceleration>
     be0:	70 91 80 01 	lds	r23, 0x0180	; 0x800180 <x_acceleration+0x1>
     be4:	80 91 81 01 	lds	r24, 0x0181	; 0x800181 <x_acceleration+0x2>
     be8:	90 91 82 01 	lds	r25, 0x0182	; 0x800182 <x_acceleration+0x3>
     bec:	0e 94 cb 0f 	call	0x1f96	; 0x1f96 <__mulsf3>
     bf0:	27 e1       	ldi	r18, 0x17	; 23
     bf2:	37 eb       	ldi	r19, 0xB7	; 183
     bf4:	41 ed       	ldi	r20, 0xD1	; 209
     bf6:	5b e3       	ldi	r21, 0x3B	; 59
     bf8:	0e 94 cb 0f 	call	0x1f96	; 0x1f96 <__mulsf3>
     bfc:	20 e0       	ldi	r18, 0x00	; 0
     bfe:	30 e4       	ldi	r19, 0x40	; 64
     c00:	45 e7       	ldi	r20, 0x75	; 117
     c02:	54 e4       	ldi	r21, 0x44	; 68
     c04:	0e 94 cb 0f 	call	0x1f96	; 0x1f96 <__mulsf3>
     c08:	20 91 9a 01 	lds	r18, 0x019A	; 0x80019a <X_Coordinate>
     c0c:	30 91 9b 01 	lds	r19, 0x019B	; 0x80019b <X_Coordinate+0x1>
     c10:	40 91 9c 01 	lds	r20, 0x019C	; 0x80019c <X_Coordinate+0x2>
     c14:	50 91 9d 01 	lds	r21, 0x019D	; 0x80019d <X_Coordinate+0x3>
     c18:	0e 94 a4 0d 	call	0x1b48	; 0x1b48 <__addsf3>
     c1c:	4b 01       	movw	r8, r22
     c1e:	5c 01       	movw	r10, r24
     c20:	60 93 9a 01 	sts	0x019A, r22	; 0x80019a <X_Coordinate>
     c24:	70 93 9b 01 	sts	0x019B, r23	; 0x80019b <X_Coordinate+0x1>
     c28:	80 93 9c 01 	sts	0x019C, r24	; 0x80019c <X_Coordinate+0x2>
     c2c:	90 93 9d 01 	sts	0x019D, r25	; 0x80019d <X_Coordinate+0x3>
	Y_Coordinate = Y_Coordinate + (0.5*y_acceleration*0.0064*981);
     c30:	20 e0       	ldi	r18, 0x00	; 0
     c32:	30 e0       	ldi	r19, 0x00	; 0
     c34:	40 e0       	ldi	r20, 0x00	; 0
     c36:	5f e3       	ldi	r21, 0x3F	; 63
     c38:	60 91 91 01 	lds	r22, 0x0191	; 0x800191 <y_acceleration>
     c3c:	70 91 92 01 	lds	r23, 0x0192	; 0x800192 <y_acceleration+0x1>
     c40:	80 91 93 01 	lds	r24, 0x0193	; 0x800193 <y_acceleration+0x2>
     c44:	90 91 94 01 	lds	r25, 0x0194	; 0x800194 <y_acceleration+0x3>
     c48:	0e 94 cb 0f 	call	0x1f96	; 0x1f96 <__mulsf3>
     c4c:	27 e1       	ldi	r18, 0x17	; 23
     c4e:	37 eb       	ldi	r19, 0xB7	; 183
     c50:	41 ed       	ldi	r20, 0xD1	; 209
     c52:	5b e3       	ldi	r21, 0x3B	; 59
     c54:	0e 94 cb 0f 	call	0x1f96	; 0x1f96 <__mulsf3>
     c58:	20 e0       	ldi	r18, 0x00	; 0
     c5a:	30 e4       	ldi	r19, 0x40	; 64
     c5c:	45 e7       	ldi	r20, 0x75	; 117
     c5e:	54 e4       	ldi	r21, 0x44	; 68
     c60:	0e 94 cb 0f 	call	0x1f96	; 0x1f96 <__mulsf3>
     c64:	20 91 6f 01 	lds	r18, 0x016F	; 0x80016f <Y_Coordinate>
     c68:	30 91 70 01 	lds	r19, 0x0170	; 0x800170 <Y_Coordinate+0x1>
     c6c:	40 91 71 01 	lds	r20, 0x0171	; 0x800171 <Y_Coordinate+0x2>
     c70:	50 91 72 01 	lds	r21, 0x0172	; 0x800172 <Y_Coordinate+0x3>
     c74:	0e 94 a4 0d 	call	0x1b48	; 0x1b48 <__addsf3>
     c78:	6b 01       	movw	r12, r22
     c7a:	7c 01       	movw	r14, r24
     c7c:	60 93 6f 01 	sts	0x016F, r22	; 0x80016f <Y_Coordinate>
     c80:	70 93 70 01 	sts	0x0170, r23	; 0x800170 <Y_Coordinate+0x1>
     c84:	80 93 71 01 	sts	0x0171, r24	; 0x800171 <Y_Coordinate+0x2>
     c88:	90 93 72 01 	sts	0x0172, r25	; 0x800172 <Y_Coordinate+0x3>
	if (low_pass_fix == 50)
     c8c:	80 91 84 01 	lds	r24, 0x0184	; 0x800184 <low_pass_fix>
     c90:	82 33       	cpi	r24, 0x32	; 50
     c92:	79 f5       	brne	.+94     	; 0xcf2 <getPosition+0x132>
	{
		Z_Coordinate = Z_Coordinate + (0.5*z_acceleration*0.0064*981);
     c94:	20 e0       	ldi	r18, 0x00	; 0
     c96:	30 e0       	ldi	r19, 0x00	; 0
     c98:	40 e0       	ldi	r20, 0x00	; 0
     c9a:	5f e3       	ldi	r21, 0x3F	; 63
     c9c:	60 91 85 01 	lds	r22, 0x0185	; 0x800185 <z_acceleration>
     ca0:	70 91 86 01 	lds	r23, 0x0186	; 0x800186 <z_acceleration+0x1>
     ca4:	80 91 87 01 	lds	r24, 0x0187	; 0x800187 <z_acceleration+0x2>
     ca8:	90 91 88 01 	lds	r25, 0x0188	; 0x800188 <z_acceleration+0x3>
     cac:	0e 94 cb 0f 	call	0x1f96	; 0x1f96 <__mulsf3>
     cb0:	27 e1       	ldi	r18, 0x17	; 23
     cb2:	37 eb       	ldi	r19, 0xB7	; 183
     cb4:	41 ed       	ldi	r20, 0xD1	; 209
     cb6:	5b e3       	ldi	r21, 0x3B	; 59
     cb8:	0e 94 cb 0f 	call	0x1f96	; 0x1f96 <__mulsf3>
     cbc:	20 e0       	ldi	r18, 0x00	; 0
     cbe:	30 e4       	ldi	r19, 0x40	; 64
     cc0:	45 e7       	ldi	r20, 0x75	; 117
     cc2:	54 e4       	ldi	r21, 0x44	; 68
     cc4:	0e 94 cb 0f 	call	0x1f96	; 0x1f96 <__mulsf3>
     cc8:	9b 01       	movw	r18, r22
     cca:	ac 01       	movw	r20, r24
     ccc:	60 91 4e 01 	lds	r22, 0x014E	; 0x80014e <Z_Coordinate>
     cd0:	70 91 4f 01 	lds	r23, 0x014F	; 0x80014f <Z_Coordinate+0x1>
     cd4:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <Z_Coordinate+0x2>
     cd8:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <Z_Coordinate+0x3>
     cdc:	0e 94 a4 0d 	call	0x1b48	; 0x1b48 <__addsf3>
     ce0:	60 93 4e 01 	sts	0x014E, r22	; 0x80014e <Z_Coordinate>
     ce4:	70 93 4f 01 	sts	0x014F, r23	; 0x80014f <Z_Coordinate+0x1>
     ce8:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <Z_Coordinate+0x2>
     cec:	90 93 51 01 	sts	0x0151, r25	; 0x800151 <Z_Coordinate+0x3>
     cf0:	05 c0       	rjmp	.+10     	; 0xcfc <getPosition+0x13c>
	}
	if (low_pass_fix < 50)
     cf2:	82 33       	cpi	r24, 0x32	; 50
     cf4:	18 f4       	brcc	.+6      	; 0xcfc <getPosition+0x13c>
	{
		low_pass_fix++;
     cf6:	8f 5f       	subi	r24, 0xFF	; 255
     cf8:	80 93 84 01 	sts	0x0184, r24	; 0x800184 <low_pass_fix>
	}
	Ultrasonic_Position[0] = X_Coordinate - 52;
     cfc:	cd e7       	ldi	r28, 0x7D	; 125
     cfe:	d1 e0       	ldi	r29, 0x01	; 1
     d00:	20 e0       	ldi	r18, 0x00	; 0
     d02:	30 e0       	ldi	r19, 0x00	; 0
     d04:	40 e5       	ldi	r20, 0x50	; 80
     d06:	52 e4       	ldi	r21, 0x42	; 66
     d08:	c5 01       	movw	r24, r10
     d0a:	b4 01       	movw	r22, r8
     d0c:	0e 94 a3 0d 	call	0x1b46	; 0x1b46 <__subsf3>
     d10:	0e 94 b6 0e 	call	0x1d6c	; 0x1d6c <__fixunssfsi>
     d14:	68 83       	st	Y, r22
	Ultrasonic_Position[1] = Y_Coordinate;
     d16:	c7 01       	movw	r24, r14
     d18:	b6 01       	movw	r22, r12
     d1a:	0e 94 b6 0e 	call	0x1d6c	; 0x1d6c <__fixunssfsi>
     d1e:	69 83       	std	Y+1, r22	; 0x01
	Ultrasonic_Position[2] = Z_Coordinate;
     d20:	60 91 4e 01 	lds	r22, 0x014E	; 0x80014e <Z_Coordinate>
     d24:	70 91 4f 01 	lds	r23, 0x014F	; 0x80014f <Z_Coordinate+0x1>
     d28:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <Z_Coordinate+0x2>
     d2c:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <Z_Coordinate+0x3>
     d30:	0e 94 b6 0e 	call	0x1d6c	; 0x1d6c <__fixunssfsi>
     d34:	6a 83       	std	Y+2, r22	; 0x02
}
     d36:	df 91       	pop	r29
     d38:	cf 91       	pop	r28
     d3a:	ff 90       	pop	r15
     d3c:	ef 90       	pop	r14
     d3e:	df 90       	pop	r13
     d40:	cf 90       	pop	r12
     d42:	bf 90       	pop	r11
     d44:	af 90       	pop	r10
     d46:	9f 90       	pop	r9
     d48:	8f 90       	pop	r8
     d4a:	08 95       	ret

00000d4c <Ultrasonic_Sensor>:

void Ultrasonic_Sensor(void)
{
     d4c:	0f 93       	push	r16
     d4e:	1f 93       	push	r17
	distance=((double)pulse)*0.0000000625*342.2/2;//pulse*time for one tick (1/16mhz)*speed of sound(20C)/2
     d50:	60 91 4c 01 	lds	r22, 0x014C	; 0x80014c <pulse>
     d54:	70 91 4d 01 	lds	r23, 0x014D	; 0x80014d <pulse+0x1>
     d58:	80 e0       	ldi	r24, 0x00	; 0
     d5a:	90 e0       	ldi	r25, 0x00	; 0
     d5c:	0e 94 e5 0e 	call	0x1dca	; 0x1dca <__floatunsisf>
     d60:	2d eb       	ldi	r18, 0xBD	; 189
     d62:	37 e3       	ldi	r19, 0x37	; 55
     d64:	46 e8       	ldi	r20, 0x86	; 134
     d66:	53 e3       	ldi	r21, 0x33	; 51
     d68:	0e 94 cb 0f 	call	0x1f96	; 0x1f96 <__mulsf3>
     d6c:	2a e9       	ldi	r18, 0x9A	; 154
     d6e:	39 e1       	ldi	r19, 0x19	; 25
     d70:	4b ea       	ldi	r20, 0xAB	; 171
     d72:	53 e4       	ldi	r21, 0x43	; 67
     d74:	0e 94 cb 0f 	call	0x1f96	; 0x1f96 <__mulsf3>
     d78:	20 e0       	ldi	r18, 0x00	; 0
     d7a:	30 e0       	ldi	r19, 0x00	; 0
     d7c:	40 e0       	ldi	r20, 0x00	; 0
     d7e:	5f e3       	ldi	r21, 0x3F	; 63
     d80:	0e 94 cb 0f 	call	0x1f96	; 0x1f96 <__mulsf3>
     d84:	60 93 46 01 	sts	0x0146, r22	; 0x800146 <distance>
     d88:	70 93 47 01 	sts	0x0147, r23	; 0x800147 <distance+0x1>
     d8c:	80 93 48 01 	sts	0x0148, r24	; 0x800148 <distance+0x2>
     d90:	90 93 49 01 	sts	0x0149, r25	; 0x800149 <distance+0x3>
	counter++;//just for printf
     d94:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <counter>
     d98:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <counter+0x1>
     d9c:	a0 91 44 01 	lds	r26, 0x0144	; 0x800144 <counter+0x2>
     da0:	b0 91 45 01 	lds	r27, 0x0145	; 0x800145 <counter+0x3>
     da4:	01 96       	adiw	r24, 0x01	; 1
     da6:	a1 1d       	adc	r26, r1
     da8:	b1 1d       	adc	r27, r1
     daa:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <counter>
     dae:	90 93 43 01 	sts	0x0143, r25	; 0x800143 <counter+0x1>
     db2:	a0 93 44 01 	sts	0x0144, r26	; 0x800144 <counter+0x2>
     db6:	b0 93 45 01 	sts	0x0145, r27	; 0x800145 <counter+0x3>
	
	//do the printfs every half a second or so
	if(counter-lstC>50000)
     dba:	40 91 3e 01 	lds	r20, 0x013E	; 0x80013e <lstC>
     dbe:	50 91 3f 01 	lds	r21, 0x013F	; 0x80013f <lstC+0x1>
     dc2:	60 91 40 01 	lds	r22, 0x0140	; 0x800140 <lstC+0x2>
     dc6:	70 91 41 01 	lds	r23, 0x0141	; 0x800141 <lstC+0x3>
     dca:	8c 01       	movw	r16, r24
     dcc:	9d 01       	movw	r18, r26
     dce:	04 1b       	sub	r16, r20
     dd0:	15 0b       	sbc	r17, r21
     dd2:	26 0b       	sbc	r18, r22
     dd4:	37 0b       	sbc	r19, r23
     dd6:	b9 01       	movw	r22, r18
     dd8:	a8 01       	movw	r20, r16
     dda:	41 35       	cpi	r20, 0x51	; 81
     ddc:	53 4c       	sbci	r21, 0xC3	; 195
     dde:	61 05       	cpc	r22, r1
     de0:	71 05       	cpc	r23, r1
     de2:	40 f0       	brcs	.+16     	; 0xdf4 <Ultrasonic_Sensor+0xa8>
	{
		lstC=counter;
     de4:	80 93 3e 01 	sts	0x013E, r24	; 0x80013e <lstC>
     de8:	90 93 3f 01 	sts	0x013F, r25	; 0x80013f <lstC+0x1>
     dec:	a0 93 40 01 	sts	0x0140, r26	; 0x800140 <lstC+0x2>
     df0:	b0 93 41 01 	sts	0x0141, r27	; 0x800141 <lstC+0x3>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     df4:	2f ef       	ldi	r18, 0xFF	; 255
     df6:	3d ee       	ldi	r19, 0xED	; 237
     df8:	82 e0       	ldi	r24, 0x02	; 2
     dfa:	21 50       	subi	r18, 0x01	; 1
     dfc:	30 40       	sbci	r19, 0x00	; 0
     dfe:	80 40       	sbci	r24, 0x00	; 0
     e00:	e1 f7       	brne	.-8      	; 0xdfa <Ultrasonic_Sensor+0xae>
     e02:	00 c0       	rjmp	.+0      	; 0xe04 <Ultrasonic_Sensor+0xb8>
     e04:	00 00       	nop
	}
	_delay_ms(60);
}
     e06:	1f 91       	pop	r17
     e08:	0f 91       	pop	r16
     e0a:	08 95       	ret

00000e0c <main>:
	char Z_bars[1];
}Bars_t;
Bars_t Bars_position[7];

int main(void)
{
     e0c:	cf 93       	push	r28
     e0e:	df 93       	push	r29
     e10:	00 d0       	rcall	.+0      	; 0xe12 <main+0x6>
     e12:	00 d0       	rcall	.+0      	; 0xe14 <main+0x8>
     e14:	00 d0       	rcall	.+0      	; 0xe16 <main+0xa>
     e16:	cd b7       	in	r28, 0x3d	; 61
     e18:	de b7       	in	r29, 0x3e	; 62
	uart_init(); // Open the communication to the micro controller
     e1a:	0e 94 d3 09 	call	0x13a6	; 0x13a6 <uart_init>
	i2c_init(); // Initialize the i2c communication.
     e1e:	0e 94 3d 09 	call	0x127a	; 0x127a <i2c_init>
	io_redirect(); // Redirect the input/output to the computer.
     e22:	0e 94 e4 09 	call	0x13c8	; 0x13c8 <io_redirect>
	/*
	i2c_init();
	LCD_init();
	MMA8451_init();
	*/
	DDRD=0xFB;//set PD2 input, rest as output
     e26:	8b ef       	ldi	r24, 0xFB	; 251
     e28:	8a b9       	out	0x0a, r24	; 10
	EICRA |= 1<<ISC00;//set INT0(PD2) to trigger on any logic change
     e2a:	e9 e6       	ldi	r30, 0x69	; 105
     e2c:	f0 e0       	ldi	r31, 0x00	; 0
     e2e:	80 81       	ld	r24, Z
     e30:	81 60       	ori	r24, 0x01	; 1
     e32:	80 83       	st	Z, r24
	EIMSK |=1<<INT0;//turn on interrupt
     e34:	e8 9a       	sbi	0x1d, 0	; 29
	sei();//enable global interrups
     e36:	78 94       	sei
	PORTD|=1<<PIND4;//trig pin output to ultrasonic, set PD4 high
     e38:	5c 9a       	sbi	0x0b, 4	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     e3a:	25 e3       	ldi	r18, 0x35	; 53
     e3c:	2a 95       	dec	r18
     e3e:	f1 f7       	brne	.-4      	; 0xe3c <main+0x30>
     e40:	00 00       	nop
	_delay_us(10);//needs 10us pulse to start
	PORTD&=~(1<<PIND4);//set PD4 to low
     e42:	5c 98       	cbi	0x0b, 4	; 11
     e44:	ee e9       	ldi	r30, 0x9E	; 158
     e46:	f1 e0       	ldi	r31, 0x01	; 1
     e48:	43 eb       	ldi	r20, 0xB3	; 179
     e4a:	51 e0       	ldi	r21, 0x01	; 1
	
	for (int i=1;i<=7;i++)
	{
		Bars_position[i].X_bars[0] = -15;
     e4c:	21 ef       	ldi	r18, 0xF1	; 241
		Bars_position[i].Z_bars[0] = 33;
     e4e:	81 e2       	ldi	r24, 0x21	; 33
		Bars_position[i].X_bars[1] = 15;
     e50:	9f e0       	ldi	r25, 0x0F	; 15
	_delay_us(10);//needs 10us pulse to start
	PORTD&=~(1<<PIND4);//set PD4 to low
	
	for (int i=1;i<=7;i++)
	{
		Bars_position[i].X_bars[0] = -15;
     e52:	23 83       	std	Z+3, r18	; 0x03
		Bars_position[i].Z_bars[0] = 33;
     e54:	85 83       	std	Z+5, r24	; 0x05
		Bars_position[i].X_bars[1] = 15;
     e56:	94 83       	std	Z+4, r25	; 0x04
		Bars_position[i].Z_bars[1] = 33;
     e58:	86 83       	std	Z+6, r24	; 0x06
     e5a:	33 96       	adiw	r30, 0x03	; 3
	sei();//enable global interrups
	PORTD|=1<<PIND4;//trig pin output to ultrasonic, set PD4 high
	_delay_us(10);//needs 10us pulse to start
	PORTD&=~(1<<PIND4);//set PD4 to low
	
	for (int i=1;i<=7;i++)
     e5c:	4e 17       	cp	r20, r30
     e5e:	5f 07       	cpc	r21, r31
     e60:	c1 f7       	brne	.-16     	; 0xe52 <main+0x46>
		Bars_position[i].Z_bars[0] = 33;
		Bars_position[i].X_bars[1] = 15;
		Bars_position[i].Z_bars[1] = 33;
	}
	
	Bars_position[0].X_bars[0] = -15;
     e62:	ee e9       	ldi	r30, 0x9E	; 158
     e64:	f1 e0       	ldi	r31, 0x01	; 1
     e66:	81 ef       	ldi	r24, 0xF1	; 241
     e68:	80 83       	st	Z, r24
	Bars_position[0].Y_bars[0] = 0;
	Bars_position[0].Z_bars[0] = 33;
	Bars_position[0].X_bars[1] = 15;
     e6a:	8f e0       	ldi	r24, 0x0F	; 15
     e6c:	81 83       	std	Z+1, r24	; 0x01
	Bars_position[0].Y_bars[1] = 0;
     e6e:	12 82       	std	Z+2, r1	; 0x02
	Bars_position[0].Z_bars[1] = 33;
     e70:	91 e2       	ldi	r25, 0x21	; 33
     e72:	93 83       	std	Z+3, r25	; 0x03

	Bars_position[1].Y_bars[0] = 15;
     e74:	84 83       	std	Z+4, r24	; 0x04
	Bars_position[1].Y_bars[1] = 15;
     e76:	85 83       	std	Z+5, r24	; 0x05

	Bars_position[2].Y_bars[0] = 30;
     e78:	8e e1       	ldi	r24, 0x1E	; 30
     e7a:	87 83       	std	Z+7, r24	; 0x07
	Bars_position[2].Y_bars[1] = 30;
     e7c:	80 87       	std	Z+8, r24	; 0x08

	Bars_position[3].Y_bars[0] = 54;
     e7e:	86 e3       	ldi	r24, 0x36	; 54
     e80:	82 87       	std	Z+10, r24	; 0x0a
	Bars_position[3].Y_bars[1] = 54;
     e82:	83 87       	std	Z+11, r24	; 0x0b

	Bars_position[4].Y_bars[0] = 78;
     e84:	8e e4       	ldi	r24, 0x4E	; 78
     e86:	85 87       	std	Z+13, r24	; 0x0d
	Bars_position[4].Y_bars[1] = 78;
     e88:	86 87       	std	Z+14, r24	; 0x0e

	Bars_position[5].Y_bars[0] = 78+41;
     e8a:	87 e7       	ldi	r24, 0x77	; 119
     e8c:	80 8b       	std	Z+16, r24	; 0x10
	Bars_position[5].Y_bars[1] = 78+41;
     e8e:	81 8b       	std	Z+17, r24	; 0x11

	Bars_position[6].Y_bars[0] = 78+41*2;
     e90:	80 ea       	ldi	r24, 0xA0	; 160
     e92:	83 8b       	std	Z+19, r24	; 0x13
	Bars_position[6].Y_bars[1] = 78+41*2;
     e94:	84 8b       	std	Z+20, r24	; 0x14

	Bars_position[7].Y_bars[0] = 78+41*3;
     e96:	89 ec       	ldi	r24, 0xC9	; 201
     e98:	86 8b       	std	Z+22, r24	; 0x16
	Bars_position[7].Y_bars[1] = 78+41*3;
     e9a:	87 8b       	std	Z+23, r24	; 0x17
	
	while (1)
	 {
		 Ultrasonic_Sensor();
		  //Reading the accelerometer's registers
		 data_array[0] = i2c_read_register8(MMA8451_REG_OUT_X_MSB); 
     e9c:	0f 2e       	mov	r0, r31
     e9e:	f3 e7       	ldi	r31, 0x73	; 115
     ea0:	ef 2e       	mov	r14, r31
     ea2:	f1 e0       	ldi	r31, 0x01	; 1
     ea4:	ff 2e       	mov	r15, r31
     ea6:	f0 2d       	mov	r31, r0
		 //LCD_set_cursor(4,0); printf("%d", data_array[5]);
		 
		 // Printing Coordinates
		 LCD_set_cursor(0,0); printf("X: %.1f", X_Coordinate);
		 LCD_set_cursor(0,1); printf("Y: %.1f", Y_Coordinate);
		 LCD_set_cursor(0,2); printf("Z: %.1f", Z_Coordinate);
     ea8:	0f 2e       	mov	r0, r31
     eaa:	f4 e3       	ldi	r31, 0x34	; 52
     eac:	2f 2e       	mov	r2, r31
     eae:	f1 e0       	ldi	r31, 0x01	; 1
     eb0:	3f 2e       	mov	r3, r31
     eb2:	f0 2d       	mov	r31, r0
	Bars_position[7].Y_bars[1] = 78+41*3;

	
	while (1)
	 {
		 Ultrasonic_Sensor();
     eb4:	0e 94 a6 06 	call	0xd4c	; 0xd4c <Ultrasonic_Sensor>
		  //Reading the accelerometer's registers
		 data_array[0] = i2c_read_register8(MMA8451_REG_OUT_X_MSB); 
     eb8:	81 e0       	ldi	r24, 0x01	; 1
     eba:	0e 94 68 01 	call	0x2d0	; 0x2d0 <i2c_read_register8>
     ebe:	d7 01       	movw	r26, r14
     ec0:	8c 93       	st	X, r24
		 data_array[1] = i2c_read_register8(MMA8451_REG_OUT_X_LSB);
     ec2:	82 e0       	ldi	r24, 0x02	; 2
     ec4:	0e 94 68 01 	call	0x2d0	; 0x2d0 <i2c_read_register8>
     ec8:	f7 01       	movw	r30, r14
     eca:	81 83       	std	Z+1, r24	; 0x01
		 data_array[2] = i2c_read_register8(MMA8451_REG_OUT_Y_MSB);
     ecc:	83 e0       	ldi	r24, 0x03	; 3
     ece:	0e 94 68 01 	call	0x2d0	; 0x2d0 <i2c_read_register8>
     ed2:	d7 01       	movw	r26, r14
     ed4:	12 96       	adiw	r26, 0x02	; 2
     ed6:	8c 93       	st	X, r24
		 data_array[3] = i2c_read_register8(MMA8451_REG_OUT_Y_LSB); 
     ed8:	84 e0       	ldi	r24, 0x04	; 4
     eda:	0e 94 68 01 	call	0x2d0	; 0x2d0 <i2c_read_register8>
     ede:	f7 01       	movw	r30, r14
     ee0:	83 83       	std	Z+3, r24	; 0x03
		 data_array[4] = i2c_read_register8(MMA8451_REG_OUT_Z_MSB);
     ee2:	85 e0       	ldi	r24, 0x05	; 5
     ee4:	0e 94 68 01 	call	0x2d0	; 0x2d0 <i2c_read_register8>
     ee8:	d7 01       	movw	r26, r14
     eea:	14 96       	adiw	r26, 0x04	; 4
     eec:	8c 93       	st	X, r24
		 data_array[5] = i2c_read_register8(MMA8451_REG_OUT_Z_LSB);
     eee:	86 e0       	ldi	r24, 0x06	; 6
     ef0:	0e 94 68 01 	call	0x2d0	; 0x2d0 <i2c_read_register8>
     ef4:	c8 2e       	mov	r12, r24
     ef6:	f7 01       	movw	r30, r14
     ef8:	85 83       	std	Z+5, r24	; 0x05
		 //x-axis acceleration normalization
		 x_val = ((short) (data_array[0]<<8 | data_array[1])) >> 2; // Compute 14-bit X-axis output value
     efa:	f0 81       	ld	r31, Z
     efc:	2f 2f       	mov	r18, r31
     efe:	30 e0       	ldi	r19, 0x00	; 0
     f00:	92 2f       	mov	r25, r18
     f02:	88 27       	eor	r24, r24
     f04:	9a 83       	std	Y+2, r25	; 0x02
     f06:	89 83       	std	Y+1, r24	; 0x01
     f08:	d7 01       	movw	r26, r14
     f0a:	11 96       	adiw	r26, 0x01	; 1
     f0c:	8c 91       	ld	r24, X
     f0e:	e9 81       	ldd	r30, Y+1	; 0x01
     f10:	fa 81       	ldd	r31, Y+2	; 0x02
     f12:	e8 2b       	or	r30, r24
     f14:	f5 95       	asr	r31
     f16:	e7 95       	ror	r30
     f18:	f5 95       	asr	r31
     f1a:	e7 95       	ror	r30
     f1c:	fe 83       	std	Y+6, r31	; 0x06
     f1e:	ed 83       	std	Y+5, r30	; 0x05
		 x_val_float = x_val/16384.0;// +/-2g range -> 1g = 16384/4 = 4096 counts
     f20:	bf 01       	movw	r22, r30
     f22:	ff 0f       	add	r31, r31
     f24:	88 0b       	sbc	r24, r24
     f26:	99 0b       	sbc	r25, r25
     f28:	0e 94 e7 0e 	call	0x1dce	; 0x1dce <__floatsisf>
     f2c:	20 e0       	ldi	r18, 0x00	; 0
     f2e:	30 e0       	ldi	r19, 0x00	; 0
     f30:	40 e8       	ldi	r20, 0x80	; 128
     f32:	58 e3       	ldi	r21, 0x38	; 56
     f34:	0e 94 cb 0f 	call	0x1f96	; 0x1f96 <__mulsf3>
     f38:	4b 01       	movw	r8, r22
     f3a:	5c 01       	movw	r10, r24
     f3c:	60 93 52 01 	sts	0x0152, r22	; 0x800152 <x_val_float>
     f40:	70 93 53 01 	sts	0x0153, r23	; 0x800153 <x_val_float+0x1>
     f44:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <x_val_float+0x2>
     f48:	90 93 55 01 	sts	0x0155, r25	; 0x800155 <x_val_float+0x3>
		 //y-axis acceleration normalization
		 y_val = ((short) (data_array[2]<<8 | data_array[3])) >> 2; // Compute 14-bit Y-axis output value
     f4c:	d7 01       	movw	r26, r14
     f4e:	12 96       	adiw	r26, 0x02	; 2
     f50:	0c 91       	ld	r16, X
     f52:	12 97       	sbiw	r26, 0x02	; 2
     f54:	10 e0       	ldi	r17, 0x00	; 0
     f56:	10 2f       	mov	r17, r16
     f58:	00 27       	eor	r16, r16
     f5a:	13 96       	adiw	r26, 0x03	; 3
     f5c:	8c 91       	ld	r24, X
     f5e:	08 2b       	or	r16, r24
     f60:	15 95       	asr	r17
     f62:	07 95       	ror	r16
     f64:	15 95       	asr	r17
     f66:	07 95       	ror	r16
		 y_val_float = y_val/16384.0;// +/-2g range -> 1g = 16384/4 = 4096 counts
     f68:	b8 01       	movw	r22, r16
     f6a:	01 2e       	mov	r0, r17
     f6c:	00 0c       	add	r0, r0
     f6e:	88 0b       	sbc	r24, r24
     f70:	99 0b       	sbc	r25, r25
     f72:	0e 94 e7 0e 	call	0x1dce	; 0x1dce <__floatsisf>
     f76:	20 e0       	ldi	r18, 0x00	; 0
     f78:	30 e0       	ldi	r19, 0x00	; 0
     f7a:	40 e8       	ldi	r20, 0x80	; 128
     f7c:	58 e3       	ldi	r21, 0x38	; 56
     f7e:	0e 94 cb 0f 	call	0x1f96	; 0x1f96 <__mulsf3>
     f82:	2b 01       	movw	r4, r22
     f84:	3c 01       	movw	r6, r24
     f86:	60 93 89 01 	sts	0x0189, r22	; 0x800189 <y_val_float>
     f8a:	70 93 8a 01 	sts	0x018A, r23	; 0x80018a <y_val_float+0x1>
     f8e:	80 93 8b 01 	sts	0x018B, r24	; 0x80018b <y_val_float+0x2>
     f92:	90 93 8c 01 	sts	0x018C, r25	; 0x80018c <y_val_float+0x3>
		 //z-axis acceleration normalization
		 z_val = ((short) (data_array[4]<<8 | data_array[5])) >> 2; // Compute 14-bit Z-axis output value
     f96:	f7 01       	movw	r30, r14
     f98:	84 81       	ldd	r24, Z+4	; 0x04
     f9a:	d1 2c       	mov	r13, r1
     f9c:	d8 2a       	or	r13, r24
     f9e:	d5 94       	asr	r13
     fa0:	c7 94       	ror	r12
     fa2:	d5 94       	asr	r13
     fa4:	c7 94       	ror	r12
		 z_val_float = z_val/16384.0;// +/-2g range -> 1g = 16384/4 = 4096 counts
     fa6:	b6 01       	movw	r22, r12
     fa8:	0d 2c       	mov	r0, r13
     faa:	00 0c       	add	r0, r0
     fac:	88 0b       	sbc	r24, r24
     fae:	99 0b       	sbc	r25, r25
     fb0:	0e 94 e7 0e 	call	0x1dce	; 0x1dce <__floatsisf>
     fb4:	20 e0       	ldi	r18, 0x00	; 0
     fb6:	30 e0       	ldi	r19, 0x00	; 0
     fb8:	40 e8       	ldi	r20, 0x80	; 128
     fba:	58 e3       	ldi	r21, 0x38	; 56
     fbc:	0e 94 cb 0f 	call	0x1f96	; 0x1f96 <__mulsf3>
     fc0:	69 83       	std	Y+1, r22	; 0x01
     fc2:	7a 83       	std	Y+2, r23	; 0x02
     fc4:	8b 83       	std	Y+3, r24	; 0x03
     fc6:	9c 83       	std	Y+4, r25	; 0x04
     fc8:	60 93 6b 01 	sts	0x016B, r22	; 0x80016b <z_val_float>
     fcc:	70 93 6c 01 	sts	0x016C, r23	; 0x80016c <z_val_float+0x1>
     fd0:	80 93 6d 01 	sts	0x016D, r24	; 0x80016d <z_val_float+0x2>
     fd4:	90 93 6e 01 	sts	0x016E, r25	; 0x80016e <z_val_float+0x3>
		 
		 Xoffset = x_val / 8 * (-1);        // Compute X-axis offset correction value
     fd8:	4d 81       	ldd	r20, Y+5	; 0x05
     fda:	5e 81       	ldd	r21, Y+6	; 0x06
     fdc:	55 23       	and	r21, r21
     fde:	14 f4       	brge	.+4      	; 0xfe4 <main+0x1d8>
     fe0:	49 5f       	subi	r20, 0xF9	; 249
     fe2:	5f 4f       	sbci	r21, 0xFF	; 255
     fe4:	55 95       	asr	r21
     fe6:	47 95       	ror	r20
     fe8:	55 95       	asr	r21
     fea:	47 95       	ror	r20
     fec:	55 95       	asr	r21
     fee:	47 95       	ror	r20
     ff0:	41 95       	neg	r20
     ff2:	40 93 ba 01 	sts	0x01BA, r20	; 0x8001ba <Xoffset>
		 Yoffset = y_val / 8 * (-1);        // Compute Y-axis offset correction value
     ff6:	c8 01       	movw	r24, r16
     ff8:	11 23       	and	r17, r17
     ffa:	0c f4       	brge	.+2      	; 0xffe <main+0x1f2>
     ffc:	07 96       	adiw	r24, 0x07	; 7
     ffe:	95 95       	asr	r25
    1000:	87 95       	ror	r24
    1002:	95 95       	asr	r25
    1004:	87 95       	ror	r24
    1006:	95 95       	asr	r25
    1008:	87 95       	ror	r24
    100a:	58 2f       	mov	r21, r24
    100c:	51 95       	neg	r21
    100e:	50 93 b9 01 	sts	0x01B9, r21	; 0x8001b9 <Yoffset>
		 Zoffset = (x_val - SENSITIVITY_2G) / 8 * (-1);          // Compute Z-axis offset correction value
    1012:	2d 81       	ldd	r18, Y+5	; 0x05
    1014:	3e 81       	ldd	r19, Y+6	; 0x06
    1016:	30 51       	subi	r19, 0x10	; 16
    1018:	c9 01       	movw	r24, r18
    101a:	99 23       	and	r25, r25
    101c:	0c f4       	brge	.+2      	; 0x1020 <main+0x214>
    101e:	07 96       	adiw	r24, 0x07	; 7
    1020:	95 95       	asr	r25
    1022:	87 95       	ror	r24
    1024:	95 95       	asr	r25
    1026:	87 95       	ror	r24
    1028:	95 95       	asr	r25
    102a:	87 95       	ror	r24
    102c:	81 95       	neg	r24
    102e:	80 93 64 01 	sts	0x0164, r24	; 0x800164 <Zoffset>
		 
		 x_val+=Xoffset;
    1032:	2d 81       	ldd	r18, Y+5	; 0x05
    1034:	3e 81       	ldd	r19, Y+6	; 0x06
    1036:	24 0f       	add	r18, r20
    1038:	31 1d       	adc	r19, r1
    103a:	30 93 66 01 	sts	0x0166, r19	; 0x800166 <x_val+0x1>
    103e:	20 93 65 01 	sts	0x0165, r18	; 0x800165 <x_val>
		 y_val+=Yoffset;
    1042:	05 0f       	add	r16, r21
    1044:	11 1d       	adc	r17, r1
    1046:	10 93 bc 01 	sts	0x01BC, r17	; 0x8001bc <y_val+0x1>
    104a:	00 93 bb 01 	sts	0x01BB, r16	; 0x8001bb <y_val>
		 z_val+=Zoffset;
    104e:	c8 0e       	add	r12, r24
    1050:	d1 1c       	adc	r13, r1
    1052:	d0 92 b4 01 	sts	0x01B4, r13	; 0x8001b4 <z_val+0x1>
    1056:	c0 92 b3 01 	sts	0x01B3, r12	; 0x8001b3 <z_val>
		 
		 //Calculating the x-axis angle
		 x_angle = atan(x_val_float/z_val_float); 
    105a:	29 81       	ldd	r18, Y+1	; 0x01
    105c:	3a 81       	ldd	r19, Y+2	; 0x02
    105e:	4b 81       	ldd	r20, Y+3	; 0x03
    1060:	5c 81       	ldd	r21, Y+4	; 0x04
    1062:	c5 01       	movw	r24, r10
    1064:	b4 01       	movw	r22, r8
    1066:	0e 94 44 0e 	call	0x1c88	; 0x1c88 <__divsf3>
    106a:	0e 94 10 0e 	call	0x1c20	; 0x1c20 <atan>
		 x_angle = x_angle*(180.0/3.141592);
    106e:	24 ee       	ldi	r18, 0xE4	; 228
    1070:	3e e2       	ldi	r19, 0x2E	; 46
    1072:	45 e6       	ldi	r20, 0x65	; 101
    1074:	52 e4       	ldi	r21, 0x42	; 66
    1076:	0e 94 cb 0f 	call	0x1f96	; 0x1f96 <__mulsf3>
    107a:	60 93 67 01 	sts	0x0167, r22	; 0x800167 <x_angle>
    107e:	70 93 68 01 	sts	0x0168, r23	; 0x800168 <x_angle+0x1>
    1082:	80 93 69 01 	sts	0x0169, r24	; 0x800169 <x_angle+0x2>
    1086:	90 93 6a 01 	sts	0x016A, r25	; 0x80016a <x_angle+0x3>
		 //Calculating the y-axis angle
		 y_angle = atan(y_val_float/z_val_float); 
    108a:	29 81       	ldd	r18, Y+1	; 0x01
    108c:	3a 81       	ldd	r19, Y+2	; 0x02
    108e:	4b 81       	ldd	r20, Y+3	; 0x03
    1090:	5c 81       	ldd	r21, Y+4	; 0x04
    1092:	c3 01       	movw	r24, r6
    1094:	b2 01       	movw	r22, r4
    1096:	0e 94 44 0e 	call	0x1c88	; 0x1c88 <__divsf3>
    109a:	0e 94 10 0e 	call	0x1c20	; 0x1c20 <atan>
		 y_angle = y_angle*(180.0/3.141592);
    109e:	24 ee       	ldi	r18, 0xE4	; 228
    10a0:	3e e2       	ldi	r19, 0x2E	; 46
    10a2:	45 e6       	ldi	r20, 0x65	; 101
    10a4:	52 e4       	ldi	r21, 0x42	; 66
    10a6:	0e 94 cb 0f 	call	0x1f96	; 0x1f96 <__mulsf3>
    10aa:	60 93 c1 01 	sts	0x01C1, r22	; 0x8001c1 <y_angle>
    10ae:	70 93 c2 01 	sts	0x01C2, r23	; 0x8001c2 <y_angle+0x1>
    10b2:	80 93 c3 01 	sts	0x01C3, r24	; 0x8001c3 <y_angle+0x2>
    10b6:	90 93 c4 01 	sts	0x01C4, r25	; 0x8001c4 <y_angle+0x3>
		 //Calculating the z-axis angle
		 z_angle = atan(x_val_float/y_val_float);
    10ba:	a3 01       	movw	r20, r6
    10bc:	92 01       	movw	r18, r4
    10be:	c5 01       	movw	r24, r10
    10c0:	b4 01       	movw	r22, r8
    10c2:	0e 94 44 0e 	call	0x1c88	; 0x1c88 <__divsf3>
    10c6:	0e 94 10 0e 	call	0x1c20	; 0x1c20 <atan>
		 z_angle = z_angle*(180.0/3.141592);		
    10ca:	24 ee       	ldi	r18, 0xE4	; 228
    10cc:	3e e2       	ldi	r19, 0x2E	; 46
    10ce:	45 e6       	ldi	r20, 0x65	; 101
    10d0:	52 e4       	ldi	r21, 0x42	; 66
    10d2:	0e 94 cb 0f 	call	0x1f96	; 0x1f96 <__mulsf3>
    10d6:	60 93 8d 01 	sts	0x018D, r22	; 0x80018d <z_angle>
    10da:	70 93 8e 01 	sts	0x018E, r23	; 0x80018e <z_angle+0x1>
    10de:	80 93 8f 01 	sts	0x018F, r24	; 0x80018f <z_angle+0x2>
    10e2:	90 93 90 01 	sts	0x0190, r25	; 0x800190 <z_angle+0x3>
		 
		 Gravity();//subtracting gravity
    10e6:	0e 94 80 01 	call	0x300	; 0x300 <Gravity>
		 orientation = getOrientation(); //reading the detected orientation
    10ea:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <getOrientation>
    10ee:	80 93 5f 01 	sts	0x015F, r24	; 0x80015f <orientation>
		 getPosition();
    10f2:	0e 94 e0 05 	call	0xbc0	; 0xbc0 <getPosition>
		 
		 x_g = ((float) x_val) / SENSITIVITY_2G; //Calculating the x-axis acceleration
    10f6:	60 91 65 01 	lds	r22, 0x0165	; 0x800165 <x_val>
    10fa:	70 91 66 01 	lds	r23, 0x0166	; 0x800166 <x_val+0x1>
    10fe:	07 2e       	mov	r0, r23
    1100:	00 0c       	add	r0, r0
    1102:	88 0b       	sbc	r24, r24
    1104:	99 0b       	sbc	r25, r25
    1106:	0e 94 e7 0e 	call	0x1dce	; 0x1dce <__floatsisf>
    110a:	20 e0       	ldi	r18, 0x00	; 0
    110c:	30 e0       	ldi	r19, 0x00	; 0
    110e:	40 e8       	ldi	r20, 0x80	; 128
    1110:	59 e3       	ldi	r21, 0x39	; 57
    1112:	0e 94 cb 0f 	call	0x1f96	; 0x1f96 <__mulsf3>
    1116:	60 93 96 01 	sts	0x0196, r22	; 0x800196 <x_g>
    111a:	70 93 97 01 	sts	0x0197, r23	; 0x800197 <x_g+0x1>
    111e:	80 93 98 01 	sts	0x0198, r24	; 0x800198 <x_g+0x2>
    1122:	90 93 99 01 	sts	0x0199, r25	; 0x800199 <x_g+0x3>
		 y_g = ((float) y_val) / SENSITIVITY_2G; //Calculating the y-axis acceleration
    1126:	60 91 bb 01 	lds	r22, 0x01BB	; 0x8001bb <y_val>
    112a:	70 91 bc 01 	lds	r23, 0x01BC	; 0x8001bc <y_val+0x1>
    112e:	07 2e       	mov	r0, r23
    1130:	00 0c       	add	r0, r0
    1132:	88 0b       	sbc	r24, r24
    1134:	99 0b       	sbc	r25, r25
    1136:	0e 94 e7 0e 	call	0x1dce	; 0x1dce <__floatsisf>
    113a:	20 e0       	ldi	r18, 0x00	; 0
    113c:	30 e0       	ldi	r19, 0x00	; 0
    113e:	40 e8       	ldi	r20, 0x80	; 128
    1140:	59 e3       	ldi	r21, 0x39	; 57
    1142:	0e 94 cb 0f 	call	0x1f96	; 0x1f96 <__mulsf3>
    1146:	60 93 bd 01 	sts	0x01BD, r22	; 0x8001bd <y_g>
    114a:	70 93 be 01 	sts	0x01BE, r23	; 0x8001be <y_g+0x1>
    114e:	80 93 bf 01 	sts	0x01BF, r24	; 0x8001bf <y_g+0x2>
    1152:	90 93 c0 01 	sts	0x01C0, r25	; 0x8001c0 <y_g+0x3>
		 z_g = ((float) z_val) / SENSITIVITY_2G; //Calculating the z-axis acceleration
    1156:	60 91 b3 01 	lds	r22, 0x01B3	; 0x8001b3 <z_val>
    115a:	70 91 b4 01 	lds	r23, 0x01B4	; 0x8001b4 <z_val+0x1>
    115e:	07 2e       	mov	r0, r23
    1160:	00 0c       	add	r0, r0
    1162:	88 0b       	sbc	r24, r24
    1164:	99 0b       	sbc	r25, r25
    1166:	0e 94 e7 0e 	call	0x1dce	; 0x1dce <__floatsisf>
    116a:	20 e0       	ldi	r18, 0x00	; 0
    116c:	30 e0       	ldi	r19, 0x00	; 0
    116e:	40 e8       	ldi	r20, 0x80	; 128
    1170:	59 e3       	ldi	r21, 0x39	; 57
    1172:	0e 94 cb 0f 	call	0x1f96	; 0x1f96 <__mulsf3>
    1176:	60 93 b5 01 	sts	0x01B5, r22	; 0x8001b5 <z_g>
    117a:	70 93 b6 01 	sts	0x01B6, r23	; 0x8001b6 <z_g+0x1>
    117e:	80 93 b7 01 	sts	0x01B7, r24	; 0x8001b7 <z_g+0x2>
    1182:	90 93 b8 01 	sts	0x01B8, r25	; 0x8001b8 <z_g+0x3>
		 //LCD_set_cursor(2,0); printf("%d", data_array[1]);
		 //LCD_set_cursor(3,0); printf("%d", data_array[4]);
		 //LCD_set_cursor(4,0); printf("%d", data_array[5]);
		 
		 // Printing Coordinates
		 LCD_set_cursor(0,0); printf("X: %.1f", X_Coordinate);
    1186:	60 e0       	ldi	r22, 0x00	; 0
    1188:	80 e0       	ldi	r24, 0x00	; 0
    118a:	0e 94 3a 01 	call	0x274	; 0x274 <LCD_set_cursor>
    118e:	80 91 9d 01 	lds	r24, 0x019D	; 0x80019d <X_Coordinate+0x3>
    1192:	8f 93       	push	r24
    1194:	80 91 9c 01 	lds	r24, 0x019C	; 0x80019c <X_Coordinate+0x2>
    1198:	8f 93       	push	r24
    119a:	80 91 9b 01 	lds	r24, 0x019B	; 0x80019b <X_Coordinate+0x1>
    119e:	8f 93       	push	r24
    11a0:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <X_Coordinate>
    11a4:	8f 93       	push	r24
    11a6:	84 e2       	ldi	r24, 0x24	; 36
    11a8:	91 e0       	ldi	r25, 0x01	; 1
    11aa:	9f 93       	push	r25
    11ac:	8f 93       	push	r24
    11ae:	0e 94 cf 11 	call	0x239e	; 0x239e <printf>
		 LCD_set_cursor(0,1); printf("Y: %.1f", Y_Coordinate);
    11b2:	61 e0       	ldi	r22, 0x01	; 1
    11b4:	80 e0       	ldi	r24, 0x00	; 0
    11b6:	0e 94 3a 01 	call	0x274	; 0x274 <LCD_set_cursor>
    11ba:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <Y_Coordinate+0x3>
    11be:	8f 93       	push	r24
    11c0:	80 91 71 01 	lds	r24, 0x0171	; 0x800171 <Y_Coordinate+0x2>
    11c4:	8f 93       	push	r24
    11c6:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <Y_Coordinate+0x1>
    11ca:	8f 93       	push	r24
    11cc:	80 91 6f 01 	lds	r24, 0x016F	; 0x80016f <Y_Coordinate>
    11d0:	8f 93       	push	r24
    11d2:	ec e2       	ldi	r30, 0x2C	; 44
    11d4:	f1 e0       	ldi	r31, 0x01	; 1
    11d6:	ff 93       	push	r31
    11d8:	ef 93       	push	r30
    11da:	0e 94 cf 11 	call	0x239e	; 0x239e <printf>
		 LCD_set_cursor(0,2); printf("Z: %.1f", Z_Coordinate);
    11de:	62 e0       	ldi	r22, 0x02	; 2
    11e0:	80 e0       	ldi	r24, 0x00	; 0
    11e2:	0e 94 3a 01 	call	0x274	; 0x274 <LCD_set_cursor>
    11e6:	80 91 51 01 	lds	r24, 0x0151	; 0x800151 <Z_Coordinate+0x3>
    11ea:	8f 93       	push	r24
    11ec:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <Z_Coordinate+0x2>
    11f0:	8f 93       	push	r24
    11f2:	80 91 4f 01 	lds	r24, 0x014F	; 0x80014f <Z_Coordinate+0x1>
    11f6:	8f 93       	push	r24
    11f8:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <Z_Coordinate>
    11fc:	8f 93       	push	r24
    11fe:	3f 92       	push	r3
    1200:	2f 92       	push	r2
    1202:	0e 94 cf 11 	call	0x239e	; 0x239e <printf>
    1206:	0f b6       	in	r0, 0x3f	; 63
    1208:	f8 94       	cli
    120a:	de bf       	out	0x3e, r29	; 62
    120c:	0f be       	out	0x3f, r0	; 63
    120e:	cd bf       	out	0x3d, r28	; 61
    1210:	51 ce       	rjmp	.-862    	; 0xeb4 <main+0xa8>

00001212 <__vector_1>:
		lstC=counter;
	}
	_delay_ms(60);
}

ISR(INT0_vect){//interrupt routine
    1212:	1f 92       	push	r1
    1214:	0f 92       	push	r0
    1216:	0f b6       	in	r0, 0x3f	; 63
    1218:	0f 92       	push	r0
    121a:	11 24       	eor	r1, r1
    121c:	8f 93       	push	r24
    121e:	9f 93       	push	r25
    1220:	ef 93       	push	r30
    1222:	ff 93       	push	r31
	if(i==0)// low to high
    1224:	80 91 4a 01 	lds	r24, 0x014A	; 0x80014a <i>
    1228:	90 91 4b 01 	lds	r25, 0x014B	; 0x80014b <i+0x1>
    122c:	89 2b       	or	r24, r25
    122e:	61 f4       	brne	.+24     	; 0x1248 <__vector_1+0x36>
	{
		
		TCCR1B |= (1<<CS10);//start timer 1 (16bits) with no prescaler
    1230:	e1 e8       	ldi	r30, 0x81	; 129
    1232:	f0 e0       	ldi	r31, 0x00	; 0
    1234:	80 81       	ld	r24, Z
    1236:	81 60       	ori	r24, 0x01	; 1
    1238:	80 83       	st	Z, r24
		i = 1;
    123a:	81 e0       	ldi	r24, 0x01	; 1
    123c:	90 e0       	ldi	r25, 0x00	; 0
    123e:	90 93 4b 01 	sts	0x014B, r25	; 0x80014b <i+0x1>
    1242:	80 93 4a 01 	sts	0x014A, r24	; 0x80014a <i>
    1246:	10 c0       	rjmp	.+32     	; 0x1268 <__vector_1+0x56>
	}
	else//high to low
	{
		TCCR1B = 0;//stop timer1
    1248:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__DATA_REGION_ORIGIN__+0x21>
		pulse = TCNT1;//value from timer1
    124c:	e4 e8       	ldi	r30, 0x84	; 132
    124e:	f0 e0       	ldi	r31, 0x00	; 0
    1250:	80 81       	ld	r24, Z
    1252:	91 81       	ldd	r25, Z+1	; 0x01
    1254:	90 93 4d 01 	sts	0x014D, r25	; 0x80014d <pulse+0x1>
    1258:	80 93 4c 01 	sts	0x014C, r24	; 0x80014c <pulse>
		TCNT1 = 0;//reset
    125c:	11 82       	std	Z+1, r1	; 0x01
    125e:	10 82       	st	Z, r1
		i = 0;
    1260:	10 92 4b 01 	sts	0x014B, r1	; 0x80014b <i+0x1>
    1264:	10 92 4a 01 	sts	0x014A, r1	; 0x80014a <i>
	}
}
    1268:	ff 91       	pop	r31
    126a:	ef 91       	pop	r30
    126c:	9f 91       	pop	r25
    126e:	8f 91       	pop	r24
    1270:	0f 90       	pop	r0
    1272:	0f be       	out	0x3f, r0	; 63
    1274:	0f 90       	pop	r0
    1276:	1f 90       	pop	r1
    1278:	18 95       	reti

0000127a <i2c_init>:
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
	while(!(TWCR & (1<<TWINT)));    

    return TWDR;

}/* i2c_readAck */
    127a:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
    127e:	88 e4       	ldi	r24, 0x48	; 72
    1280:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__DATA_REGION_ORIGIN__+0x58>
    1284:	08 95       	ret

00001286 <i2c_start>:
    1286:	94 ea       	ldi	r25, 0xA4	; 164
    1288:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
    128c:	ec eb       	ldi	r30, 0xBC	; 188
    128e:	f0 e0       	ldi	r31, 0x00	; 0
    1290:	90 81       	ld	r25, Z
    1292:	99 23       	and	r25, r25
    1294:	ec f7       	brge	.-6      	; 0x1290 <i2c_start+0xa>
    1296:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
    129a:	98 7f       	andi	r25, 0xF8	; 248
    129c:	98 30       	cpi	r25, 0x08	; 8
    129e:	11 f0       	breq	.+4      	; 0x12a4 <i2c_start+0x1e>
    12a0:	90 31       	cpi	r25, 0x10	; 16
    12a2:	a1 f4       	brne	.+40     	; 0x12cc <i2c_start+0x46>
    12a4:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
    12a8:	84 e8       	ldi	r24, 0x84	; 132
    12aa:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
    12ae:	ec eb       	ldi	r30, 0xBC	; 188
    12b0:	f0 e0       	ldi	r31, 0x00	; 0
    12b2:	80 81       	ld	r24, Z
    12b4:	88 23       	and	r24, r24
    12b6:	ec f7       	brge	.-6      	; 0x12b2 <i2c_start+0x2c>
    12b8:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
    12bc:	98 7f       	andi	r25, 0xF8	; 248
    12be:	98 31       	cpi	r25, 0x18	; 24
    12c0:	39 f0       	breq	.+14     	; 0x12d0 <i2c_start+0x4a>
    12c2:	81 e0       	ldi	r24, 0x01	; 1
    12c4:	90 34       	cpi	r25, 0x40	; 64
    12c6:	29 f4       	brne	.+10     	; 0x12d2 <i2c_start+0x4c>
    12c8:	80 e0       	ldi	r24, 0x00	; 0
    12ca:	08 95       	ret
    12cc:	81 e0       	ldi	r24, 0x01	; 1
    12ce:	08 95       	ret
    12d0:	80 e0       	ldi	r24, 0x00	; 0
    12d2:	08 95       	ret

000012d4 <i2c_start_wait>:
    12d4:	cf 93       	push	r28
    12d6:	df 93       	push	r29
    12d8:	ec eb       	ldi	r30, 0xBC	; 188
    12da:	f0 e0       	ldi	r31, 0x00	; 0
    12dc:	24 ea       	ldi	r18, 0xA4	; 164
    12de:	a9 eb       	ldi	r26, 0xB9	; 185
    12e0:	b0 e0       	ldi	r27, 0x00	; 0
    12e2:	cb eb       	ldi	r28, 0xBB	; 187
    12e4:	d0 e0       	ldi	r29, 0x00	; 0
    12e6:	34 e8       	ldi	r19, 0x84	; 132
    12e8:	44 e9       	ldi	r20, 0x94	; 148
    12ea:	20 83       	st	Z, r18
    12ec:	90 81       	ld	r25, Z
    12ee:	99 23       	and	r25, r25
    12f0:	ec f7       	brge	.-6      	; 0x12ec <i2c_start_wait+0x18>
    12f2:	9c 91       	ld	r25, X
    12f4:	98 7f       	andi	r25, 0xF8	; 248
    12f6:	98 30       	cpi	r25, 0x08	; 8
    12f8:	11 f0       	breq	.+4      	; 0x12fe <i2c_start_wait+0x2a>
    12fa:	90 31       	cpi	r25, 0x10	; 16
    12fc:	b1 f7       	brne	.-20     	; 0x12ea <i2c_start_wait+0x16>
    12fe:	88 83       	st	Y, r24
    1300:	30 83       	st	Z, r19
    1302:	90 81       	ld	r25, Z
    1304:	99 23       	and	r25, r25
    1306:	ec f7       	brge	.-6      	; 0x1302 <i2c_start_wait+0x2e>
    1308:	9c 91       	ld	r25, X
    130a:	98 7f       	andi	r25, 0xF8	; 248
    130c:	90 32       	cpi	r25, 0x20	; 32
    130e:	11 f0       	breq	.+4      	; 0x1314 <i2c_start_wait+0x40>
    1310:	98 35       	cpi	r25, 0x58	; 88
    1312:	29 f4       	brne	.+10     	; 0x131e <i2c_start_wait+0x4a>
    1314:	40 83       	st	Z, r20
    1316:	90 81       	ld	r25, Z
    1318:	94 fd       	sbrc	r25, 4
    131a:	fd cf       	rjmp	.-6      	; 0x1316 <i2c_start_wait+0x42>
    131c:	e6 cf       	rjmp	.-52     	; 0x12ea <i2c_start_wait+0x16>
    131e:	df 91       	pop	r29
    1320:	cf 91       	pop	r28
    1322:	08 95       	ret

00001324 <i2c_rep_start>:
    1324:	0e 94 43 09 	call	0x1286	; 0x1286 <i2c_start>
    1328:	08 95       	ret

0000132a <i2c_stop>:
    132a:	84 e9       	ldi	r24, 0x94	; 148
    132c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
    1330:	ec eb       	ldi	r30, 0xBC	; 188
    1332:	f0 e0       	ldi	r31, 0x00	; 0
    1334:	80 81       	ld	r24, Z
    1336:	84 fd       	sbrc	r24, 4
    1338:	fd cf       	rjmp	.-6      	; 0x1334 <i2c_stop+0xa>
    133a:	08 95       	ret

0000133c <i2c_write>:
    133c:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
    1340:	84 e8       	ldi	r24, 0x84	; 132
    1342:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
    1346:	ec eb       	ldi	r30, 0xBC	; 188
    1348:	f0 e0       	ldi	r31, 0x00	; 0
    134a:	80 81       	ld	r24, Z
    134c:	88 23       	and	r24, r24
    134e:	ec f7       	brge	.-6      	; 0x134a <i2c_write+0xe>
    1350:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
    1354:	98 7f       	andi	r25, 0xF8	; 248
    1356:	81 e0       	ldi	r24, 0x01	; 1
    1358:	98 32       	cpi	r25, 0x28	; 40
    135a:	09 f4       	brne	.+2      	; 0x135e <i2c_write+0x22>
    135c:	80 e0       	ldi	r24, 0x00	; 0
    135e:	08 95       	ret

00001360 <i2c_readNak>:
 
 Return:  byte read from I2C device
*************************************************************************/
unsigned char i2c_readNak(void)
{
	TWCR = (1<<TWINT) | (1<<TWEN);
    1360:	84 e8       	ldi	r24, 0x84	; 132
    1362:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while(!(TWCR & (1<<TWINT)));
    1366:	ec eb       	ldi	r30, 0xBC	; 188
    1368:	f0 e0       	ldi	r31, 0x00	; 0
    136a:	80 81       	ld	r24, Z
    136c:	88 23       	and	r24, r24
    136e:	ec f7       	brge	.-6      	; 0x136a <i2c_readNak+0xa>
	
    return TWDR;
    1370:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>

}/* i2c_readNak */
    1374:	08 95       	ret

00001376 <uart_putchar>:
		stdout = &uart_output;	//redirect standard output to uart
		stdin  = &uart_input;  //redirect standard input to uart
}
	

void uart_putchar(char c, FILE *stream) {
    1376:	cf 93       	push	r28
    1378:	c8 2f       	mov	r28, r24
	if (c == '\n') {
    137a:	8a 30       	cpi	r24, 0x0A	; 10
    137c:	19 f4       	brne	.+6      	; 0x1384 <uart_putchar+0xe>
		uart_putchar('\r', stream);
    137e:	8d e0       	ldi	r24, 0x0D	; 13
    1380:	0e 94 bb 09 	call	0x1376	; 0x1376 <uart_putchar>
	}
	loop_until_bit_is_set(UCSR0A, UDRE0);
    1384:	e0 ec       	ldi	r30, 0xC0	; 192
    1386:	f0 e0       	ldi	r31, 0x00	; 0
    1388:	80 81       	ld	r24, Z
    138a:	85 ff       	sbrs	r24, 5
    138c:	fd cf       	rjmp	.-6      	; 0x1388 <uart_putchar+0x12>
	UDR0 = c;
    138e:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
}
    1392:	cf 91       	pop	r28
    1394:	08 95       	ret

00001396 <uart_getchar>:

char uart_getchar(FILE *stream) {
	loop_until_bit_is_set(UCSR0A, RXC0);
    1396:	e0 ec       	ldi	r30, 0xC0	; 192
    1398:	f0 e0       	ldi	r31, 0x00	; 0
    139a:	80 81       	ld	r24, Z
    139c:	88 23       	and	r24, r24
    139e:	ec f7       	brge	.-6      	; 0x139a <uart_getchar+0x4>
	return UDR0;
    13a0:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
    13a4:	08 95       	ret

000013a6 <uart_init>:
FILE uart_input = FDEV_SETUP_STREAM(NULL, uart_getchar, _FDEV_SETUP_READ);


void uart_init(void) {
	
	UBRR0H = UBRRH_VALUE;
    13a6:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
	UBRR0L = UBRRL_VALUE;
    13aa:	87 e6       	ldi	r24, 0x67	; 103
    13ac:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
	
	#if USE_2X
	UCSR0A |= _BV(U2X0);
	#else
	UCSR0A &= ~(_BV(U2X0));
    13b0:	e0 ec       	ldi	r30, 0xC0	; 192
    13b2:	f0 e0       	ldi	r31, 0x00	; 0
    13b4:	80 81       	ld	r24, Z
    13b6:	8d 7f       	andi	r24, 0xFD	; 253
    13b8:	80 83       	st	Z, r24
	#endif

	UCSR0C = _BV(UCSZ01) | _BV(UCSZ00); /* 8-bit data */
    13ba:	86 e0       	ldi	r24, 0x06	; 6
    13bc:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
	UCSR0B = _BV(RXEN0) | _BV(TXEN0);   /* Enable RX and TX */
    13c0:	88 e1       	ldi	r24, 0x18	; 24
    13c2:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
    13c6:	08 95       	ret

000013c8 <io_redirect>:
}

void io_redirect(void ){
		
		
		stdout = &uart_output;	//redirect standard output to uart
    13c8:	e5 ec       	ldi	r30, 0xC5	; 197
    13ca:	f1 e0       	ldi	r31, 0x01	; 1
    13cc:	8e e0       	ldi	r24, 0x0E	; 14
    13ce:	91 e0       	ldi	r25, 0x01	; 1
    13d0:	93 83       	std	Z+3, r25	; 0x03
    13d2:	82 83       	std	Z+2, r24	; 0x02
		stdin  = &uart_input;  //redirect standard input to uart
    13d4:	80 e0       	ldi	r24, 0x00	; 0
    13d6:	91 e0       	ldi	r25, 0x01	; 1
    13d8:	91 83       	std	Z+1, r25	; 0x01
    13da:	80 83       	st	Z, r24
    13dc:	08 95       	ret

000013de <vfprintf>:
    13de:	a0 e1       	ldi	r26, 0x10	; 16
    13e0:	b0 e0       	ldi	r27, 0x00	; 0
    13e2:	e5 ef       	ldi	r30, 0xF5	; 245
    13e4:	f9 e0       	ldi	r31, 0x09	; 9
    13e6:	0c 94 6c 0d 	jmp	0x1ad8	; 0x1ad8 <__prologue_saves__>
    13ea:	7c 01       	movw	r14, r24
    13ec:	1b 01       	movw	r2, r22
    13ee:	6a 01       	movw	r12, r20
    13f0:	fc 01       	movw	r30, r24
    13f2:	17 82       	std	Z+7, r1	; 0x07
    13f4:	16 82       	std	Z+6, r1	; 0x06
    13f6:	83 81       	ldd	r24, Z+3	; 0x03
    13f8:	81 ff       	sbrs	r24, 1
    13fa:	44 c3       	rjmp	.+1672   	; 0x1a84 <vfprintf+0x6a6>
    13fc:	9e 01       	movw	r18, r28
    13fe:	2f 5f       	subi	r18, 0xFF	; 255
    1400:	3f 4f       	sbci	r19, 0xFF	; 255
    1402:	39 01       	movw	r6, r18
    1404:	f7 01       	movw	r30, r14
    1406:	93 81       	ldd	r25, Z+3	; 0x03
    1408:	f1 01       	movw	r30, r2
    140a:	93 fd       	sbrc	r25, 3
    140c:	85 91       	lpm	r24, Z+
    140e:	93 ff       	sbrs	r25, 3
    1410:	81 91       	ld	r24, Z+
    1412:	1f 01       	movw	r2, r30
    1414:	88 23       	and	r24, r24
    1416:	09 f4       	brne	.+2      	; 0x141a <vfprintf+0x3c>
    1418:	31 c3       	rjmp	.+1634   	; 0x1a7c <vfprintf+0x69e>
    141a:	85 32       	cpi	r24, 0x25	; 37
    141c:	39 f4       	brne	.+14     	; 0x142c <vfprintf+0x4e>
    141e:	93 fd       	sbrc	r25, 3
    1420:	85 91       	lpm	r24, Z+
    1422:	93 ff       	sbrs	r25, 3
    1424:	81 91       	ld	r24, Z+
    1426:	1f 01       	movw	r2, r30
    1428:	85 32       	cpi	r24, 0x25	; 37
    142a:	39 f4       	brne	.+14     	; 0x143a <vfprintf+0x5c>
    142c:	b7 01       	movw	r22, r14
    142e:	90 e0       	ldi	r25, 0x00	; 0
    1430:	0e 94 93 11 	call	0x2326	; 0x2326 <fputc>
    1434:	56 01       	movw	r10, r12
    1436:	65 01       	movw	r12, r10
    1438:	e5 cf       	rjmp	.-54     	; 0x1404 <vfprintf+0x26>
    143a:	10 e0       	ldi	r17, 0x00	; 0
    143c:	51 2c       	mov	r5, r1
    143e:	91 2c       	mov	r9, r1
    1440:	ff e1       	ldi	r31, 0x1F	; 31
    1442:	f9 15       	cp	r31, r9
    1444:	d8 f0       	brcs	.+54     	; 0x147c <vfprintf+0x9e>
    1446:	8b 32       	cpi	r24, 0x2B	; 43
    1448:	79 f0       	breq	.+30     	; 0x1468 <vfprintf+0x8a>
    144a:	38 f4       	brcc	.+14     	; 0x145a <vfprintf+0x7c>
    144c:	80 32       	cpi	r24, 0x20	; 32
    144e:	79 f0       	breq	.+30     	; 0x146e <vfprintf+0x90>
    1450:	83 32       	cpi	r24, 0x23	; 35
    1452:	a1 f4       	brne	.+40     	; 0x147c <vfprintf+0x9e>
    1454:	f9 2d       	mov	r31, r9
    1456:	f0 61       	ori	r31, 0x10	; 16
    1458:	2e c0       	rjmp	.+92     	; 0x14b6 <vfprintf+0xd8>
    145a:	8d 32       	cpi	r24, 0x2D	; 45
    145c:	61 f0       	breq	.+24     	; 0x1476 <vfprintf+0x98>
    145e:	80 33       	cpi	r24, 0x30	; 48
    1460:	69 f4       	brne	.+26     	; 0x147c <vfprintf+0x9e>
    1462:	29 2d       	mov	r18, r9
    1464:	21 60       	ori	r18, 0x01	; 1
    1466:	2d c0       	rjmp	.+90     	; 0x14c2 <vfprintf+0xe4>
    1468:	39 2d       	mov	r19, r9
    146a:	32 60       	ori	r19, 0x02	; 2
    146c:	93 2e       	mov	r9, r19
    146e:	89 2d       	mov	r24, r9
    1470:	84 60       	ori	r24, 0x04	; 4
    1472:	98 2e       	mov	r9, r24
    1474:	2a c0       	rjmp	.+84     	; 0x14ca <vfprintf+0xec>
    1476:	e9 2d       	mov	r30, r9
    1478:	e8 60       	ori	r30, 0x08	; 8
    147a:	15 c0       	rjmp	.+42     	; 0x14a6 <vfprintf+0xc8>
    147c:	97 fc       	sbrc	r9, 7
    147e:	2d c0       	rjmp	.+90     	; 0x14da <vfprintf+0xfc>
    1480:	20 ed       	ldi	r18, 0xD0	; 208
    1482:	28 0f       	add	r18, r24
    1484:	2a 30       	cpi	r18, 0x0A	; 10
    1486:	88 f4       	brcc	.+34     	; 0x14aa <vfprintf+0xcc>
    1488:	96 fe       	sbrs	r9, 6
    148a:	06 c0       	rjmp	.+12     	; 0x1498 <vfprintf+0xba>
    148c:	3a e0       	ldi	r19, 0x0A	; 10
    148e:	13 9f       	mul	r17, r19
    1490:	20 0d       	add	r18, r0
    1492:	11 24       	eor	r1, r1
    1494:	12 2f       	mov	r17, r18
    1496:	19 c0       	rjmp	.+50     	; 0x14ca <vfprintf+0xec>
    1498:	8a e0       	ldi	r24, 0x0A	; 10
    149a:	58 9e       	mul	r5, r24
    149c:	20 0d       	add	r18, r0
    149e:	11 24       	eor	r1, r1
    14a0:	52 2e       	mov	r5, r18
    14a2:	e9 2d       	mov	r30, r9
    14a4:	e0 62       	ori	r30, 0x20	; 32
    14a6:	9e 2e       	mov	r9, r30
    14a8:	10 c0       	rjmp	.+32     	; 0x14ca <vfprintf+0xec>
    14aa:	8e 32       	cpi	r24, 0x2E	; 46
    14ac:	31 f4       	brne	.+12     	; 0x14ba <vfprintf+0xdc>
    14ae:	96 fc       	sbrc	r9, 6
    14b0:	e5 c2       	rjmp	.+1482   	; 0x1a7c <vfprintf+0x69e>
    14b2:	f9 2d       	mov	r31, r9
    14b4:	f0 64       	ori	r31, 0x40	; 64
    14b6:	9f 2e       	mov	r9, r31
    14b8:	08 c0       	rjmp	.+16     	; 0x14ca <vfprintf+0xec>
    14ba:	8c 36       	cpi	r24, 0x6C	; 108
    14bc:	21 f4       	brne	.+8      	; 0x14c6 <vfprintf+0xe8>
    14be:	29 2d       	mov	r18, r9
    14c0:	20 68       	ori	r18, 0x80	; 128
    14c2:	92 2e       	mov	r9, r18
    14c4:	02 c0       	rjmp	.+4      	; 0x14ca <vfprintf+0xec>
    14c6:	88 36       	cpi	r24, 0x68	; 104
    14c8:	41 f4       	brne	.+16     	; 0x14da <vfprintf+0xfc>
    14ca:	f1 01       	movw	r30, r2
    14cc:	93 fd       	sbrc	r25, 3
    14ce:	85 91       	lpm	r24, Z+
    14d0:	93 ff       	sbrs	r25, 3
    14d2:	81 91       	ld	r24, Z+
    14d4:	1f 01       	movw	r2, r30
    14d6:	81 11       	cpse	r24, r1
    14d8:	b3 cf       	rjmp	.-154    	; 0x1440 <vfprintf+0x62>
    14da:	9b eb       	ldi	r25, 0xBB	; 187
    14dc:	98 0f       	add	r25, r24
    14de:	93 30       	cpi	r25, 0x03	; 3
    14e0:	20 f4       	brcc	.+8      	; 0x14ea <vfprintf+0x10c>
    14e2:	99 2d       	mov	r25, r9
    14e4:	90 61       	ori	r25, 0x10	; 16
    14e6:	80 5e       	subi	r24, 0xE0	; 224
    14e8:	07 c0       	rjmp	.+14     	; 0x14f8 <vfprintf+0x11a>
    14ea:	9b e9       	ldi	r25, 0x9B	; 155
    14ec:	98 0f       	add	r25, r24
    14ee:	93 30       	cpi	r25, 0x03	; 3
    14f0:	08 f0       	brcs	.+2      	; 0x14f4 <vfprintf+0x116>
    14f2:	66 c1       	rjmp	.+716    	; 0x17c0 <vfprintf+0x3e2>
    14f4:	99 2d       	mov	r25, r9
    14f6:	9f 7e       	andi	r25, 0xEF	; 239
    14f8:	96 ff       	sbrs	r25, 6
    14fa:	16 e0       	ldi	r17, 0x06	; 6
    14fc:	9f 73       	andi	r25, 0x3F	; 63
    14fe:	99 2e       	mov	r9, r25
    1500:	85 36       	cpi	r24, 0x65	; 101
    1502:	19 f4       	brne	.+6      	; 0x150a <vfprintf+0x12c>
    1504:	90 64       	ori	r25, 0x40	; 64
    1506:	99 2e       	mov	r9, r25
    1508:	08 c0       	rjmp	.+16     	; 0x151a <vfprintf+0x13c>
    150a:	86 36       	cpi	r24, 0x66	; 102
    150c:	21 f4       	brne	.+8      	; 0x1516 <vfprintf+0x138>
    150e:	39 2f       	mov	r19, r25
    1510:	30 68       	ori	r19, 0x80	; 128
    1512:	93 2e       	mov	r9, r19
    1514:	02 c0       	rjmp	.+4      	; 0x151a <vfprintf+0x13c>
    1516:	11 11       	cpse	r17, r1
    1518:	11 50       	subi	r17, 0x01	; 1
    151a:	97 fe       	sbrs	r9, 7
    151c:	07 c0       	rjmp	.+14     	; 0x152c <vfprintf+0x14e>
    151e:	1c 33       	cpi	r17, 0x3C	; 60
    1520:	50 f4       	brcc	.+20     	; 0x1536 <vfprintf+0x158>
    1522:	44 24       	eor	r4, r4
    1524:	43 94       	inc	r4
    1526:	41 0e       	add	r4, r17
    1528:	27 e0       	ldi	r18, 0x07	; 7
    152a:	0b c0       	rjmp	.+22     	; 0x1542 <vfprintf+0x164>
    152c:	18 30       	cpi	r17, 0x08	; 8
    152e:	38 f0       	brcs	.+14     	; 0x153e <vfprintf+0x160>
    1530:	27 e0       	ldi	r18, 0x07	; 7
    1532:	17 e0       	ldi	r17, 0x07	; 7
    1534:	05 c0       	rjmp	.+10     	; 0x1540 <vfprintf+0x162>
    1536:	27 e0       	ldi	r18, 0x07	; 7
    1538:	9c e3       	ldi	r25, 0x3C	; 60
    153a:	49 2e       	mov	r4, r25
    153c:	02 c0       	rjmp	.+4      	; 0x1542 <vfprintf+0x164>
    153e:	21 2f       	mov	r18, r17
    1540:	41 2c       	mov	r4, r1
    1542:	56 01       	movw	r10, r12
    1544:	84 e0       	ldi	r24, 0x04	; 4
    1546:	a8 0e       	add	r10, r24
    1548:	b1 1c       	adc	r11, r1
    154a:	f6 01       	movw	r30, r12
    154c:	60 81       	ld	r22, Z
    154e:	71 81       	ldd	r23, Z+1	; 0x01
    1550:	82 81       	ldd	r24, Z+2	; 0x02
    1552:	93 81       	ldd	r25, Z+3	; 0x03
    1554:	04 2d       	mov	r16, r4
    1556:	a3 01       	movw	r20, r6
    1558:	0e 94 a5 10 	call	0x214a	; 0x214a <__ftoa_engine>
    155c:	6c 01       	movw	r12, r24
    155e:	f9 81       	ldd	r31, Y+1	; 0x01
    1560:	fc 87       	std	Y+12, r31	; 0x0c
    1562:	f0 ff       	sbrs	r31, 0
    1564:	02 c0       	rjmp	.+4      	; 0x156a <vfprintf+0x18c>
    1566:	f3 ff       	sbrs	r31, 3
    1568:	06 c0       	rjmp	.+12     	; 0x1576 <vfprintf+0x198>
    156a:	91 fc       	sbrc	r9, 1
    156c:	06 c0       	rjmp	.+12     	; 0x157a <vfprintf+0x19c>
    156e:	92 fe       	sbrs	r9, 2
    1570:	06 c0       	rjmp	.+12     	; 0x157e <vfprintf+0x1a0>
    1572:	00 e2       	ldi	r16, 0x20	; 32
    1574:	05 c0       	rjmp	.+10     	; 0x1580 <vfprintf+0x1a2>
    1576:	0d e2       	ldi	r16, 0x2D	; 45
    1578:	03 c0       	rjmp	.+6      	; 0x1580 <vfprintf+0x1a2>
    157a:	0b e2       	ldi	r16, 0x2B	; 43
    157c:	01 c0       	rjmp	.+2      	; 0x1580 <vfprintf+0x1a2>
    157e:	00 e0       	ldi	r16, 0x00	; 0
    1580:	8c 85       	ldd	r24, Y+12	; 0x0c
    1582:	8c 70       	andi	r24, 0x0C	; 12
    1584:	19 f0       	breq	.+6      	; 0x158c <vfprintf+0x1ae>
    1586:	01 11       	cpse	r16, r1
    1588:	5a c2       	rjmp	.+1204   	; 0x1a3e <vfprintf+0x660>
    158a:	9b c2       	rjmp	.+1334   	; 0x1ac2 <vfprintf+0x6e4>
    158c:	97 fe       	sbrs	r9, 7
    158e:	10 c0       	rjmp	.+32     	; 0x15b0 <vfprintf+0x1d2>
    1590:	4c 0c       	add	r4, r12
    1592:	fc 85       	ldd	r31, Y+12	; 0x0c
    1594:	f4 ff       	sbrs	r31, 4
    1596:	04 c0       	rjmp	.+8      	; 0x15a0 <vfprintf+0x1c2>
    1598:	8a 81       	ldd	r24, Y+2	; 0x02
    159a:	81 33       	cpi	r24, 0x31	; 49
    159c:	09 f4       	brne	.+2      	; 0x15a0 <vfprintf+0x1c2>
    159e:	4a 94       	dec	r4
    15a0:	14 14       	cp	r1, r4
    15a2:	74 f5       	brge	.+92     	; 0x1600 <vfprintf+0x222>
    15a4:	28 e0       	ldi	r18, 0x08	; 8
    15a6:	24 15       	cp	r18, r4
    15a8:	78 f5       	brcc	.+94     	; 0x1608 <vfprintf+0x22a>
    15aa:	88 e0       	ldi	r24, 0x08	; 8
    15ac:	48 2e       	mov	r4, r24
    15ae:	2c c0       	rjmp	.+88     	; 0x1608 <vfprintf+0x22a>
    15b0:	96 fc       	sbrc	r9, 6
    15b2:	2a c0       	rjmp	.+84     	; 0x1608 <vfprintf+0x22a>
    15b4:	81 2f       	mov	r24, r17
    15b6:	90 e0       	ldi	r25, 0x00	; 0
    15b8:	8c 15       	cp	r24, r12
    15ba:	9d 05       	cpc	r25, r13
    15bc:	9c f0       	brlt	.+38     	; 0x15e4 <vfprintf+0x206>
    15be:	3c ef       	ldi	r19, 0xFC	; 252
    15c0:	c3 16       	cp	r12, r19
    15c2:	3f ef       	ldi	r19, 0xFF	; 255
    15c4:	d3 06       	cpc	r13, r19
    15c6:	74 f0       	brlt	.+28     	; 0x15e4 <vfprintf+0x206>
    15c8:	89 2d       	mov	r24, r9
    15ca:	80 68       	ori	r24, 0x80	; 128
    15cc:	98 2e       	mov	r9, r24
    15ce:	0a c0       	rjmp	.+20     	; 0x15e4 <vfprintf+0x206>
    15d0:	e2 e0       	ldi	r30, 0x02	; 2
    15d2:	f0 e0       	ldi	r31, 0x00	; 0
    15d4:	ec 0f       	add	r30, r28
    15d6:	fd 1f       	adc	r31, r29
    15d8:	e1 0f       	add	r30, r17
    15da:	f1 1d       	adc	r31, r1
    15dc:	80 81       	ld	r24, Z
    15de:	80 33       	cpi	r24, 0x30	; 48
    15e0:	19 f4       	brne	.+6      	; 0x15e8 <vfprintf+0x20a>
    15e2:	11 50       	subi	r17, 0x01	; 1
    15e4:	11 11       	cpse	r17, r1
    15e6:	f4 cf       	rjmp	.-24     	; 0x15d0 <vfprintf+0x1f2>
    15e8:	97 fe       	sbrs	r9, 7
    15ea:	0e c0       	rjmp	.+28     	; 0x1608 <vfprintf+0x22a>
    15ec:	44 24       	eor	r4, r4
    15ee:	43 94       	inc	r4
    15f0:	41 0e       	add	r4, r17
    15f2:	81 2f       	mov	r24, r17
    15f4:	90 e0       	ldi	r25, 0x00	; 0
    15f6:	c8 16       	cp	r12, r24
    15f8:	d9 06       	cpc	r13, r25
    15fa:	2c f4       	brge	.+10     	; 0x1606 <vfprintf+0x228>
    15fc:	1c 19       	sub	r17, r12
    15fe:	04 c0       	rjmp	.+8      	; 0x1608 <vfprintf+0x22a>
    1600:	44 24       	eor	r4, r4
    1602:	43 94       	inc	r4
    1604:	01 c0       	rjmp	.+2      	; 0x1608 <vfprintf+0x22a>
    1606:	10 e0       	ldi	r17, 0x00	; 0
    1608:	97 fe       	sbrs	r9, 7
    160a:	06 c0       	rjmp	.+12     	; 0x1618 <vfprintf+0x23a>
    160c:	1c 14       	cp	r1, r12
    160e:	1d 04       	cpc	r1, r13
    1610:	34 f4       	brge	.+12     	; 0x161e <vfprintf+0x240>
    1612:	c6 01       	movw	r24, r12
    1614:	01 96       	adiw	r24, 0x01	; 1
    1616:	05 c0       	rjmp	.+10     	; 0x1622 <vfprintf+0x244>
    1618:	85 e0       	ldi	r24, 0x05	; 5
    161a:	90 e0       	ldi	r25, 0x00	; 0
    161c:	02 c0       	rjmp	.+4      	; 0x1622 <vfprintf+0x244>
    161e:	81 e0       	ldi	r24, 0x01	; 1
    1620:	90 e0       	ldi	r25, 0x00	; 0
    1622:	01 11       	cpse	r16, r1
    1624:	01 96       	adiw	r24, 0x01	; 1
    1626:	11 23       	and	r17, r17
    1628:	31 f0       	breq	.+12     	; 0x1636 <vfprintf+0x258>
    162a:	21 2f       	mov	r18, r17
    162c:	30 e0       	ldi	r19, 0x00	; 0
    162e:	2f 5f       	subi	r18, 0xFF	; 255
    1630:	3f 4f       	sbci	r19, 0xFF	; 255
    1632:	82 0f       	add	r24, r18
    1634:	93 1f       	adc	r25, r19
    1636:	25 2d       	mov	r18, r5
    1638:	30 e0       	ldi	r19, 0x00	; 0
    163a:	82 17       	cp	r24, r18
    163c:	93 07       	cpc	r25, r19
    163e:	14 f4       	brge	.+4      	; 0x1644 <vfprintf+0x266>
    1640:	58 1a       	sub	r5, r24
    1642:	01 c0       	rjmp	.+2      	; 0x1646 <vfprintf+0x268>
    1644:	51 2c       	mov	r5, r1
    1646:	89 2d       	mov	r24, r9
    1648:	89 70       	andi	r24, 0x09	; 9
    164a:	49 f4       	brne	.+18     	; 0x165e <vfprintf+0x280>
    164c:	55 20       	and	r5, r5
    164e:	39 f0       	breq	.+14     	; 0x165e <vfprintf+0x280>
    1650:	b7 01       	movw	r22, r14
    1652:	80 e2       	ldi	r24, 0x20	; 32
    1654:	90 e0       	ldi	r25, 0x00	; 0
    1656:	0e 94 93 11 	call	0x2326	; 0x2326 <fputc>
    165a:	5a 94       	dec	r5
    165c:	f7 cf       	rjmp	.-18     	; 0x164c <vfprintf+0x26e>
    165e:	00 23       	and	r16, r16
    1660:	29 f0       	breq	.+10     	; 0x166c <vfprintf+0x28e>
    1662:	b7 01       	movw	r22, r14
    1664:	80 2f       	mov	r24, r16
    1666:	90 e0       	ldi	r25, 0x00	; 0
    1668:	0e 94 93 11 	call	0x2326	; 0x2326 <fputc>
    166c:	93 fc       	sbrc	r9, 3
    166e:	09 c0       	rjmp	.+18     	; 0x1682 <vfprintf+0x2a4>
    1670:	55 20       	and	r5, r5
    1672:	39 f0       	breq	.+14     	; 0x1682 <vfprintf+0x2a4>
    1674:	b7 01       	movw	r22, r14
    1676:	80 e3       	ldi	r24, 0x30	; 48
    1678:	90 e0       	ldi	r25, 0x00	; 0
    167a:	0e 94 93 11 	call	0x2326	; 0x2326 <fputc>
    167e:	5a 94       	dec	r5
    1680:	f7 cf       	rjmp	.-18     	; 0x1670 <vfprintf+0x292>
    1682:	97 fe       	sbrs	r9, 7
    1684:	4c c0       	rjmp	.+152    	; 0x171e <vfprintf+0x340>
    1686:	46 01       	movw	r8, r12
    1688:	d7 fe       	sbrs	r13, 7
    168a:	02 c0       	rjmp	.+4      	; 0x1690 <vfprintf+0x2b2>
    168c:	81 2c       	mov	r8, r1
    168e:	91 2c       	mov	r9, r1
    1690:	c6 01       	movw	r24, r12
    1692:	88 19       	sub	r24, r8
    1694:	99 09       	sbc	r25, r9
    1696:	f3 01       	movw	r30, r6
    1698:	e8 0f       	add	r30, r24
    169a:	f9 1f       	adc	r31, r25
    169c:	fe 87       	std	Y+14, r31	; 0x0e
    169e:	ed 87       	std	Y+13, r30	; 0x0d
    16a0:	96 01       	movw	r18, r12
    16a2:	24 19       	sub	r18, r4
    16a4:	31 09       	sbc	r19, r1
    16a6:	38 8b       	std	Y+16, r19	; 0x10
    16a8:	2f 87       	std	Y+15, r18	; 0x0f
    16aa:	01 2f       	mov	r16, r17
    16ac:	10 e0       	ldi	r17, 0x00	; 0
    16ae:	11 95       	neg	r17
    16b0:	01 95       	neg	r16
    16b2:	11 09       	sbc	r17, r1
    16b4:	3f ef       	ldi	r19, 0xFF	; 255
    16b6:	83 16       	cp	r8, r19
    16b8:	93 06       	cpc	r9, r19
    16ba:	29 f4       	brne	.+10     	; 0x16c6 <vfprintf+0x2e8>
    16bc:	b7 01       	movw	r22, r14
    16be:	8e e2       	ldi	r24, 0x2E	; 46
    16c0:	90 e0       	ldi	r25, 0x00	; 0
    16c2:	0e 94 93 11 	call	0x2326	; 0x2326 <fputc>
    16c6:	c8 14       	cp	r12, r8
    16c8:	d9 04       	cpc	r13, r9
    16ca:	4c f0       	brlt	.+18     	; 0x16de <vfprintf+0x300>
    16cc:	8f 85       	ldd	r24, Y+15	; 0x0f
    16ce:	98 89       	ldd	r25, Y+16	; 0x10
    16d0:	88 15       	cp	r24, r8
    16d2:	99 05       	cpc	r25, r9
    16d4:	24 f4       	brge	.+8      	; 0x16de <vfprintf+0x300>
    16d6:	ed 85       	ldd	r30, Y+13	; 0x0d
    16d8:	fe 85       	ldd	r31, Y+14	; 0x0e
    16da:	81 81       	ldd	r24, Z+1	; 0x01
    16dc:	01 c0       	rjmp	.+2      	; 0x16e0 <vfprintf+0x302>
    16de:	80 e3       	ldi	r24, 0x30	; 48
    16e0:	f1 e0       	ldi	r31, 0x01	; 1
    16e2:	8f 1a       	sub	r8, r31
    16e4:	91 08       	sbc	r9, r1
    16e6:	2d 85       	ldd	r18, Y+13	; 0x0d
    16e8:	3e 85       	ldd	r19, Y+14	; 0x0e
    16ea:	2f 5f       	subi	r18, 0xFF	; 255
    16ec:	3f 4f       	sbci	r19, 0xFF	; 255
    16ee:	3e 87       	std	Y+14, r19	; 0x0e
    16f0:	2d 87       	std	Y+13, r18	; 0x0d
    16f2:	80 16       	cp	r8, r16
    16f4:	91 06       	cpc	r9, r17
    16f6:	2c f0       	brlt	.+10     	; 0x1702 <vfprintf+0x324>
    16f8:	b7 01       	movw	r22, r14
    16fa:	90 e0       	ldi	r25, 0x00	; 0
    16fc:	0e 94 93 11 	call	0x2326	; 0x2326 <fputc>
    1700:	d9 cf       	rjmp	.-78     	; 0x16b4 <vfprintf+0x2d6>
    1702:	c8 14       	cp	r12, r8
    1704:	d9 04       	cpc	r13, r9
    1706:	41 f4       	brne	.+16     	; 0x1718 <vfprintf+0x33a>
    1708:	9a 81       	ldd	r25, Y+2	; 0x02
    170a:	96 33       	cpi	r25, 0x36	; 54
    170c:	20 f4       	brcc	.+8      	; 0x1716 <vfprintf+0x338>
    170e:	95 33       	cpi	r25, 0x35	; 53
    1710:	19 f4       	brne	.+6      	; 0x1718 <vfprintf+0x33a>
    1712:	3c 85       	ldd	r19, Y+12	; 0x0c
    1714:	34 ff       	sbrs	r19, 4
    1716:	81 e3       	ldi	r24, 0x31	; 49
    1718:	b7 01       	movw	r22, r14
    171a:	90 e0       	ldi	r25, 0x00	; 0
    171c:	4e c0       	rjmp	.+156    	; 0x17ba <vfprintf+0x3dc>
    171e:	8a 81       	ldd	r24, Y+2	; 0x02
    1720:	81 33       	cpi	r24, 0x31	; 49
    1722:	19 f0       	breq	.+6      	; 0x172a <vfprintf+0x34c>
    1724:	9c 85       	ldd	r25, Y+12	; 0x0c
    1726:	9f 7e       	andi	r25, 0xEF	; 239
    1728:	9c 87       	std	Y+12, r25	; 0x0c
    172a:	b7 01       	movw	r22, r14
    172c:	90 e0       	ldi	r25, 0x00	; 0
    172e:	0e 94 93 11 	call	0x2326	; 0x2326 <fputc>
    1732:	11 11       	cpse	r17, r1
    1734:	05 c0       	rjmp	.+10     	; 0x1740 <vfprintf+0x362>
    1736:	94 fc       	sbrc	r9, 4
    1738:	18 c0       	rjmp	.+48     	; 0x176a <vfprintf+0x38c>
    173a:	85 e6       	ldi	r24, 0x65	; 101
    173c:	90 e0       	ldi	r25, 0x00	; 0
    173e:	17 c0       	rjmp	.+46     	; 0x176e <vfprintf+0x390>
    1740:	b7 01       	movw	r22, r14
    1742:	8e e2       	ldi	r24, 0x2E	; 46
    1744:	90 e0       	ldi	r25, 0x00	; 0
    1746:	0e 94 93 11 	call	0x2326	; 0x2326 <fputc>
    174a:	1e 5f       	subi	r17, 0xFE	; 254
    174c:	82 e0       	ldi	r24, 0x02	; 2
    174e:	01 e0       	ldi	r16, 0x01	; 1
    1750:	08 0f       	add	r16, r24
    1752:	f3 01       	movw	r30, r6
    1754:	e8 0f       	add	r30, r24
    1756:	f1 1d       	adc	r31, r1
    1758:	80 81       	ld	r24, Z
    175a:	b7 01       	movw	r22, r14
    175c:	90 e0       	ldi	r25, 0x00	; 0
    175e:	0e 94 93 11 	call	0x2326	; 0x2326 <fputc>
    1762:	80 2f       	mov	r24, r16
    1764:	01 13       	cpse	r16, r17
    1766:	f3 cf       	rjmp	.-26     	; 0x174e <vfprintf+0x370>
    1768:	e6 cf       	rjmp	.-52     	; 0x1736 <vfprintf+0x358>
    176a:	85 e4       	ldi	r24, 0x45	; 69
    176c:	90 e0       	ldi	r25, 0x00	; 0
    176e:	b7 01       	movw	r22, r14
    1770:	0e 94 93 11 	call	0x2326	; 0x2326 <fputc>
    1774:	d7 fc       	sbrc	r13, 7
    1776:	06 c0       	rjmp	.+12     	; 0x1784 <vfprintf+0x3a6>
    1778:	c1 14       	cp	r12, r1
    177a:	d1 04       	cpc	r13, r1
    177c:	41 f4       	brne	.+16     	; 0x178e <vfprintf+0x3b0>
    177e:	ec 85       	ldd	r30, Y+12	; 0x0c
    1780:	e4 ff       	sbrs	r30, 4
    1782:	05 c0       	rjmp	.+10     	; 0x178e <vfprintf+0x3b0>
    1784:	d1 94       	neg	r13
    1786:	c1 94       	neg	r12
    1788:	d1 08       	sbc	r13, r1
    178a:	8d e2       	ldi	r24, 0x2D	; 45
    178c:	01 c0       	rjmp	.+2      	; 0x1790 <vfprintf+0x3b2>
    178e:	8b e2       	ldi	r24, 0x2B	; 43
    1790:	b7 01       	movw	r22, r14
    1792:	90 e0       	ldi	r25, 0x00	; 0
    1794:	0e 94 93 11 	call	0x2326	; 0x2326 <fputc>
    1798:	80 e3       	ldi	r24, 0x30	; 48
    179a:	2a e0       	ldi	r18, 0x0A	; 10
    179c:	c2 16       	cp	r12, r18
    179e:	d1 04       	cpc	r13, r1
    17a0:	2c f0       	brlt	.+10     	; 0x17ac <vfprintf+0x3ce>
    17a2:	8f 5f       	subi	r24, 0xFF	; 255
    17a4:	fa e0       	ldi	r31, 0x0A	; 10
    17a6:	cf 1a       	sub	r12, r31
    17a8:	d1 08       	sbc	r13, r1
    17aa:	f7 cf       	rjmp	.-18     	; 0x179a <vfprintf+0x3bc>
    17ac:	b7 01       	movw	r22, r14
    17ae:	90 e0       	ldi	r25, 0x00	; 0
    17b0:	0e 94 93 11 	call	0x2326	; 0x2326 <fputc>
    17b4:	b7 01       	movw	r22, r14
    17b6:	c6 01       	movw	r24, r12
    17b8:	c0 96       	adiw	r24, 0x30	; 48
    17ba:	0e 94 93 11 	call	0x2326	; 0x2326 <fputc>
    17be:	54 c1       	rjmp	.+680    	; 0x1a68 <vfprintf+0x68a>
    17c0:	83 36       	cpi	r24, 0x63	; 99
    17c2:	31 f0       	breq	.+12     	; 0x17d0 <vfprintf+0x3f2>
    17c4:	83 37       	cpi	r24, 0x73	; 115
    17c6:	79 f0       	breq	.+30     	; 0x17e6 <vfprintf+0x408>
    17c8:	83 35       	cpi	r24, 0x53	; 83
    17ca:	09 f0       	breq	.+2      	; 0x17ce <vfprintf+0x3f0>
    17cc:	56 c0       	rjmp	.+172    	; 0x187a <vfprintf+0x49c>
    17ce:	20 c0       	rjmp	.+64     	; 0x1810 <vfprintf+0x432>
    17d0:	56 01       	movw	r10, r12
    17d2:	32 e0       	ldi	r19, 0x02	; 2
    17d4:	a3 0e       	add	r10, r19
    17d6:	b1 1c       	adc	r11, r1
    17d8:	f6 01       	movw	r30, r12
    17da:	80 81       	ld	r24, Z
    17dc:	89 83       	std	Y+1, r24	; 0x01
    17de:	01 e0       	ldi	r16, 0x01	; 1
    17e0:	10 e0       	ldi	r17, 0x00	; 0
    17e2:	63 01       	movw	r12, r6
    17e4:	12 c0       	rjmp	.+36     	; 0x180a <vfprintf+0x42c>
    17e6:	56 01       	movw	r10, r12
    17e8:	f2 e0       	ldi	r31, 0x02	; 2
    17ea:	af 0e       	add	r10, r31
    17ec:	b1 1c       	adc	r11, r1
    17ee:	f6 01       	movw	r30, r12
    17f0:	c0 80       	ld	r12, Z
    17f2:	d1 80       	ldd	r13, Z+1	; 0x01
    17f4:	96 fe       	sbrs	r9, 6
    17f6:	03 c0       	rjmp	.+6      	; 0x17fe <vfprintf+0x420>
    17f8:	61 2f       	mov	r22, r17
    17fa:	70 e0       	ldi	r23, 0x00	; 0
    17fc:	02 c0       	rjmp	.+4      	; 0x1802 <vfprintf+0x424>
    17fe:	6f ef       	ldi	r22, 0xFF	; 255
    1800:	7f ef       	ldi	r23, 0xFF	; 255
    1802:	c6 01       	movw	r24, r12
    1804:	0e 94 88 11 	call	0x2310	; 0x2310 <strnlen>
    1808:	8c 01       	movw	r16, r24
    180a:	f9 2d       	mov	r31, r9
    180c:	ff 77       	andi	r31, 0x7F	; 127
    180e:	14 c0       	rjmp	.+40     	; 0x1838 <vfprintf+0x45a>
    1810:	56 01       	movw	r10, r12
    1812:	22 e0       	ldi	r18, 0x02	; 2
    1814:	a2 0e       	add	r10, r18
    1816:	b1 1c       	adc	r11, r1
    1818:	f6 01       	movw	r30, r12
    181a:	c0 80       	ld	r12, Z
    181c:	d1 80       	ldd	r13, Z+1	; 0x01
    181e:	96 fe       	sbrs	r9, 6
    1820:	03 c0       	rjmp	.+6      	; 0x1828 <vfprintf+0x44a>
    1822:	61 2f       	mov	r22, r17
    1824:	70 e0       	ldi	r23, 0x00	; 0
    1826:	02 c0       	rjmp	.+4      	; 0x182c <vfprintf+0x44e>
    1828:	6f ef       	ldi	r22, 0xFF	; 255
    182a:	7f ef       	ldi	r23, 0xFF	; 255
    182c:	c6 01       	movw	r24, r12
    182e:	0e 94 7d 11 	call	0x22fa	; 0x22fa <strnlen_P>
    1832:	8c 01       	movw	r16, r24
    1834:	f9 2d       	mov	r31, r9
    1836:	f0 68       	ori	r31, 0x80	; 128
    1838:	9f 2e       	mov	r9, r31
    183a:	f3 fd       	sbrc	r31, 3
    183c:	1a c0       	rjmp	.+52     	; 0x1872 <vfprintf+0x494>
    183e:	85 2d       	mov	r24, r5
    1840:	90 e0       	ldi	r25, 0x00	; 0
    1842:	08 17       	cp	r16, r24
    1844:	19 07       	cpc	r17, r25
    1846:	a8 f4       	brcc	.+42     	; 0x1872 <vfprintf+0x494>
    1848:	b7 01       	movw	r22, r14
    184a:	80 e2       	ldi	r24, 0x20	; 32
    184c:	90 e0       	ldi	r25, 0x00	; 0
    184e:	0e 94 93 11 	call	0x2326	; 0x2326 <fputc>
    1852:	5a 94       	dec	r5
    1854:	f4 cf       	rjmp	.-24     	; 0x183e <vfprintf+0x460>
    1856:	f6 01       	movw	r30, r12
    1858:	97 fc       	sbrc	r9, 7
    185a:	85 91       	lpm	r24, Z+
    185c:	97 fe       	sbrs	r9, 7
    185e:	81 91       	ld	r24, Z+
    1860:	6f 01       	movw	r12, r30
    1862:	b7 01       	movw	r22, r14
    1864:	90 e0       	ldi	r25, 0x00	; 0
    1866:	0e 94 93 11 	call	0x2326	; 0x2326 <fputc>
    186a:	51 10       	cpse	r5, r1
    186c:	5a 94       	dec	r5
    186e:	01 50       	subi	r16, 0x01	; 1
    1870:	11 09       	sbc	r17, r1
    1872:	01 15       	cp	r16, r1
    1874:	11 05       	cpc	r17, r1
    1876:	79 f7       	brne	.-34     	; 0x1856 <vfprintf+0x478>
    1878:	f7 c0       	rjmp	.+494    	; 0x1a68 <vfprintf+0x68a>
    187a:	84 36       	cpi	r24, 0x64	; 100
    187c:	11 f0       	breq	.+4      	; 0x1882 <vfprintf+0x4a4>
    187e:	89 36       	cpi	r24, 0x69	; 105
    1880:	61 f5       	brne	.+88     	; 0x18da <vfprintf+0x4fc>
    1882:	56 01       	movw	r10, r12
    1884:	97 fe       	sbrs	r9, 7
    1886:	09 c0       	rjmp	.+18     	; 0x189a <vfprintf+0x4bc>
    1888:	24 e0       	ldi	r18, 0x04	; 4
    188a:	a2 0e       	add	r10, r18
    188c:	b1 1c       	adc	r11, r1
    188e:	f6 01       	movw	r30, r12
    1890:	60 81       	ld	r22, Z
    1892:	71 81       	ldd	r23, Z+1	; 0x01
    1894:	82 81       	ldd	r24, Z+2	; 0x02
    1896:	93 81       	ldd	r25, Z+3	; 0x03
    1898:	0a c0       	rjmp	.+20     	; 0x18ae <vfprintf+0x4d0>
    189a:	f2 e0       	ldi	r31, 0x02	; 2
    189c:	af 0e       	add	r10, r31
    189e:	b1 1c       	adc	r11, r1
    18a0:	f6 01       	movw	r30, r12
    18a2:	60 81       	ld	r22, Z
    18a4:	71 81       	ldd	r23, Z+1	; 0x01
    18a6:	07 2e       	mov	r0, r23
    18a8:	00 0c       	add	r0, r0
    18aa:	88 0b       	sbc	r24, r24
    18ac:	99 0b       	sbc	r25, r25
    18ae:	f9 2d       	mov	r31, r9
    18b0:	ff 76       	andi	r31, 0x6F	; 111
    18b2:	9f 2e       	mov	r9, r31
    18b4:	97 ff       	sbrs	r25, 7
    18b6:	09 c0       	rjmp	.+18     	; 0x18ca <vfprintf+0x4ec>
    18b8:	90 95       	com	r25
    18ba:	80 95       	com	r24
    18bc:	70 95       	com	r23
    18be:	61 95       	neg	r22
    18c0:	7f 4f       	sbci	r23, 0xFF	; 255
    18c2:	8f 4f       	sbci	r24, 0xFF	; 255
    18c4:	9f 4f       	sbci	r25, 0xFF	; 255
    18c6:	f0 68       	ori	r31, 0x80	; 128
    18c8:	9f 2e       	mov	r9, r31
    18ca:	2a e0       	ldi	r18, 0x0A	; 10
    18cc:	30 e0       	ldi	r19, 0x00	; 0
    18ce:	a3 01       	movw	r20, r6
    18d0:	0e 94 e5 11 	call	0x23ca	; 0x23ca <__ultoa_invert>
    18d4:	c8 2e       	mov	r12, r24
    18d6:	c6 18       	sub	r12, r6
    18d8:	3f c0       	rjmp	.+126    	; 0x1958 <vfprintf+0x57a>
    18da:	09 2d       	mov	r16, r9
    18dc:	85 37       	cpi	r24, 0x75	; 117
    18de:	21 f4       	brne	.+8      	; 0x18e8 <vfprintf+0x50a>
    18e0:	0f 7e       	andi	r16, 0xEF	; 239
    18e2:	2a e0       	ldi	r18, 0x0A	; 10
    18e4:	30 e0       	ldi	r19, 0x00	; 0
    18e6:	1d c0       	rjmp	.+58     	; 0x1922 <vfprintf+0x544>
    18e8:	09 7f       	andi	r16, 0xF9	; 249
    18ea:	8f 36       	cpi	r24, 0x6F	; 111
    18ec:	91 f0       	breq	.+36     	; 0x1912 <vfprintf+0x534>
    18ee:	18 f4       	brcc	.+6      	; 0x18f6 <vfprintf+0x518>
    18f0:	88 35       	cpi	r24, 0x58	; 88
    18f2:	59 f0       	breq	.+22     	; 0x190a <vfprintf+0x52c>
    18f4:	c3 c0       	rjmp	.+390    	; 0x1a7c <vfprintf+0x69e>
    18f6:	80 37       	cpi	r24, 0x70	; 112
    18f8:	19 f0       	breq	.+6      	; 0x1900 <vfprintf+0x522>
    18fa:	88 37       	cpi	r24, 0x78	; 120
    18fc:	11 f0       	breq	.+4      	; 0x1902 <vfprintf+0x524>
    18fe:	be c0       	rjmp	.+380    	; 0x1a7c <vfprintf+0x69e>
    1900:	00 61       	ori	r16, 0x10	; 16
    1902:	04 ff       	sbrs	r16, 4
    1904:	09 c0       	rjmp	.+18     	; 0x1918 <vfprintf+0x53a>
    1906:	04 60       	ori	r16, 0x04	; 4
    1908:	07 c0       	rjmp	.+14     	; 0x1918 <vfprintf+0x53a>
    190a:	94 fe       	sbrs	r9, 4
    190c:	08 c0       	rjmp	.+16     	; 0x191e <vfprintf+0x540>
    190e:	06 60       	ori	r16, 0x06	; 6
    1910:	06 c0       	rjmp	.+12     	; 0x191e <vfprintf+0x540>
    1912:	28 e0       	ldi	r18, 0x08	; 8
    1914:	30 e0       	ldi	r19, 0x00	; 0
    1916:	05 c0       	rjmp	.+10     	; 0x1922 <vfprintf+0x544>
    1918:	20 e1       	ldi	r18, 0x10	; 16
    191a:	30 e0       	ldi	r19, 0x00	; 0
    191c:	02 c0       	rjmp	.+4      	; 0x1922 <vfprintf+0x544>
    191e:	20 e1       	ldi	r18, 0x10	; 16
    1920:	32 e0       	ldi	r19, 0x02	; 2
    1922:	56 01       	movw	r10, r12
    1924:	07 ff       	sbrs	r16, 7
    1926:	09 c0       	rjmp	.+18     	; 0x193a <vfprintf+0x55c>
    1928:	84 e0       	ldi	r24, 0x04	; 4
    192a:	a8 0e       	add	r10, r24
    192c:	b1 1c       	adc	r11, r1
    192e:	f6 01       	movw	r30, r12
    1930:	60 81       	ld	r22, Z
    1932:	71 81       	ldd	r23, Z+1	; 0x01
    1934:	82 81       	ldd	r24, Z+2	; 0x02
    1936:	93 81       	ldd	r25, Z+3	; 0x03
    1938:	08 c0       	rjmp	.+16     	; 0x194a <vfprintf+0x56c>
    193a:	f2 e0       	ldi	r31, 0x02	; 2
    193c:	af 0e       	add	r10, r31
    193e:	b1 1c       	adc	r11, r1
    1940:	f6 01       	movw	r30, r12
    1942:	60 81       	ld	r22, Z
    1944:	71 81       	ldd	r23, Z+1	; 0x01
    1946:	80 e0       	ldi	r24, 0x00	; 0
    1948:	90 e0       	ldi	r25, 0x00	; 0
    194a:	a3 01       	movw	r20, r6
    194c:	0e 94 e5 11 	call	0x23ca	; 0x23ca <__ultoa_invert>
    1950:	c8 2e       	mov	r12, r24
    1952:	c6 18       	sub	r12, r6
    1954:	0f 77       	andi	r16, 0x7F	; 127
    1956:	90 2e       	mov	r9, r16
    1958:	96 fe       	sbrs	r9, 6
    195a:	0b c0       	rjmp	.+22     	; 0x1972 <vfprintf+0x594>
    195c:	09 2d       	mov	r16, r9
    195e:	0e 7f       	andi	r16, 0xFE	; 254
    1960:	c1 16       	cp	r12, r17
    1962:	50 f4       	brcc	.+20     	; 0x1978 <vfprintf+0x59a>
    1964:	94 fe       	sbrs	r9, 4
    1966:	0a c0       	rjmp	.+20     	; 0x197c <vfprintf+0x59e>
    1968:	92 fc       	sbrc	r9, 2
    196a:	08 c0       	rjmp	.+16     	; 0x197c <vfprintf+0x59e>
    196c:	09 2d       	mov	r16, r9
    196e:	0e 7e       	andi	r16, 0xEE	; 238
    1970:	05 c0       	rjmp	.+10     	; 0x197c <vfprintf+0x59e>
    1972:	dc 2c       	mov	r13, r12
    1974:	09 2d       	mov	r16, r9
    1976:	03 c0       	rjmp	.+6      	; 0x197e <vfprintf+0x5a0>
    1978:	dc 2c       	mov	r13, r12
    197a:	01 c0       	rjmp	.+2      	; 0x197e <vfprintf+0x5a0>
    197c:	d1 2e       	mov	r13, r17
    197e:	04 ff       	sbrs	r16, 4
    1980:	0d c0       	rjmp	.+26     	; 0x199c <vfprintf+0x5be>
    1982:	fe 01       	movw	r30, r28
    1984:	ec 0d       	add	r30, r12
    1986:	f1 1d       	adc	r31, r1
    1988:	80 81       	ld	r24, Z
    198a:	80 33       	cpi	r24, 0x30	; 48
    198c:	11 f4       	brne	.+4      	; 0x1992 <vfprintf+0x5b4>
    198e:	09 7e       	andi	r16, 0xE9	; 233
    1990:	09 c0       	rjmp	.+18     	; 0x19a4 <vfprintf+0x5c6>
    1992:	02 ff       	sbrs	r16, 2
    1994:	06 c0       	rjmp	.+12     	; 0x19a2 <vfprintf+0x5c4>
    1996:	d3 94       	inc	r13
    1998:	d3 94       	inc	r13
    199a:	04 c0       	rjmp	.+8      	; 0x19a4 <vfprintf+0x5c6>
    199c:	80 2f       	mov	r24, r16
    199e:	86 78       	andi	r24, 0x86	; 134
    19a0:	09 f0       	breq	.+2      	; 0x19a4 <vfprintf+0x5c6>
    19a2:	d3 94       	inc	r13
    19a4:	03 fd       	sbrc	r16, 3
    19a6:	11 c0       	rjmp	.+34     	; 0x19ca <vfprintf+0x5ec>
    19a8:	00 ff       	sbrs	r16, 0
    19aa:	06 c0       	rjmp	.+12     	; 0x19b8 <vfprintf+0x5da>
    19ac:	1c 2d       	mov	r17, r12
    19ae:	d5 14       	cp	r13, r5
    19b0:	80 f4       	brcc	.+32     	; 0x19d2 <vfprintf+0x5f4>
    19b2:	15 0d       	add	r17, r5
    19b4:	1d 19       	sub	r17, r13
    19b6:	0d c0       	rjmp	.+26     	; 0x19d2 <vfprintf+0x5f4>
    19b8:	d5 14       	cp	r13, r5
    19ba:	58 f4       	brcc	.+22     	; 0x19d2 <vfprintf+0x5f4>
    19bc:	b7 01       	movw	r22, r14
    19be:	80 e2       	ldi	r24, 0x20	; 32
    19c0:	90 e0       	ldi	r25, 0x00	; 0
    19c2:	0e 94 93 11 	call	0x2326	; 0x2326 <fputc>
    19c6:	d3 94       	inc	r13
    19c8:	f7 cf       	rjmp	.-18     	; 0x19b8 <vfprintf+0x5da>
    19ca:	d5 14       	cp	r13, r5
    19cc:	10 f4       	brcc	.+4      	; 0x19d2 <vfprintf+0x5f4>
    19ce:	5d 18       	sub	r5, r13
    19d0:	01 c0       	rjmp	.+2      	; 0x19d4 <vfprintf+0x5f6>
    19d2:	51 2c       	mov	r5, r1
    19d4:	04 ff       	sbrs	r16, 4
    19d6:	10 c0       	rjmp	.+32     	; 0x19f8 <vfprintf+0x61a>
    19d8:	b7 01       	movw	r22, r14
    19da:	80 e3       	ldi	r24, 0x30	; 48
    19dc:	90 e0       	ldi	r25, 0x00	; 0
    19de:	0e 94 93 11 	call	0x2326	; 0x2326 <fputc>
    19e2:	02 ff       	sbrs	r16, 2
    19e4:	17 c0       	rjmp	.+46     	; 0x1a14 <vfprintf+0x636>
    19e6:	01 fd       	sbrc	r16, 1
    19e8:	03 c0       	rjmp	.+6      	; 0x19f0 <vfprintf+0x612>
    19ea:	88 e7       	ldi	r24, 0x78	; 120
    19ec:	90 e0       	ldi	r25, 0x00	; 0
    19ee:	02 c0       	rjmp	.+4      	; 0x19f4 <vfprintf+0x616>
    19f0:	88 e5       	ldi	r24, 0x58	; 88
    19f2:	90 e0       	ldi	r25, 0x00	; 0
    19f4:	b7 01       	movw	r22, r14
    19f6:	0c c0       	rjmp	.+24     	; 0x1a10 <vfprintf+0x632>
    19f8:	80 2f       	mov	r24, r16
    19fa:	86 78       	andi	r24, 0x86	; 134
    19fc:	59 f0       	breq	.+22     	; 0x1a14 <vfprintf+0x636>
    19fe:	01 ff       	sbrs	r16, 1
    1a00:	02 c0       	rjmp	.+4      	; 0x1a06 <vfprintf+0x628>
    1a02:	8b e2       	ldi	r24, 0x2B	; 43
    1a04:	01 c0       	rjmp	.+2      	; 0x1a08 <vfprintf+0x62a>
    1a06:	80 e2       	ldi	r24, 0x20	; 32
    1a08:	07 fd       	sbrc	r16, 7
    1a0a:	8d e2       	ldi	r24, 0x2D	; 45
    1a0c:	b7 01       	movw	r22, r14
    1a0e:	90 e0       	ldi	r25, 0x00	; 0
    1a10:	0e 94 93 11 	call	0x2326	; 0x2326 <fputc>
    1a14:	c1 16       	cp	r12, r17
    1a16:	38 f4       	brcc	.+14     	; 0x1a26 <vfprintf+0x648>
    1a18:	b7 01       	movw	r22, r14
    1a1a:	80 e3       	ldi	r24, 0x30	; 48
    1a1c:	90 e0       	ldi	r25, 0x00	; 0
    1a1e:	0e 94 93 11 	call	0x2326	; 0x2326 <fputc>
    1a22:	11 50       	subi	r17, 0x01	; 1
    1a24:	f7 cf       	rjmp	.-18     	; 0x1a14 <vfprintf+0x636>
    1a26:	ca 94       	dec	r12
    1a28:	f3 01       	movw	r30, r6
    1a2a:	ec 0d       	add	r30, r12
    1a2c:	f1 1d       	adc	r31, r1
    1a2e:	80 81       	ld	r24, Z
    1a30:	b7 01       	movw	r22, r14
    1a32:	90 e0       	ldi	r25, 0x00	; 0
    1a34:	0e 94 93 11 	call	0x2326	; 0x2326 <fputc>
    1a38:	c1 10       	cpse	r12, r1
    1a3a:	f5 cf       	rjmp	.-22     	; 0x1a26 <vfprintf+0x648>
    1a3c:	15 c0       	rjmp	.+42     	; 0x1a68 <vfprintf+0x68a>
    1a3e:	f4 e0       	ldi	r31, 0x04	; 4
    1a40:	f5 15       	cp	r31, r5
    1a42:	60 f5       	brcc	.+88     	; 0x1a9c <vfprintf+0x6be>
    1a44:	84 e0       	ldi	r24, 0x04	; 4
    1a46:	58 1a       	sub	r5, r24
    1a48:	93 fe       	sbrs	r9, 3
    1a4a:	1f c0       	rjmp	.+62     	; 0x1a8a <vfprintf+0x6ac>
    1a4c:	01 11       	cpse	r16, r1
    1a4e:	27 c0       	rjmp	.+78     	; 0x1a9e <vfprintf+0x6c0>
    1a50:	2c 85       	ldd	r18, Y+12	; 0x0c
    1a52:	23 ff       	sbrs	r18, 3
    1a54:	2a c0       	rjmp	.+84     	; 0x1aaa <vfprintf+0x6cc>
    1a56:	04 eb       	ldi	r16, 0xB4	; 180
    1a58:	10 e0       	ldi	r17, 0x00	; 0
    1a5a:	39 2d       	mov	r19, r9
    1a5c:	30 71       	andi	r19, 0x10	; 16
    1a5e:	93 2e       	mov	r9, r19
    1a60:	f8 01       	movw	r30, r16
    1a62:	84 91       	lpm	r24, Z
    1a64:	81 11       	cpse	r24, r1
    1a66:	24 c0       	rjmp	.+72     	; 0x1ab0 <vfprintf+0x6d2>
    1a68:	55 20       	and	r5, r5
    1a6a:	09 f4       	brne	.+2      	; 0x1a6e <vfprintf+0x690>
    1a6c:	e4 cc       	rjmp	.-1592   	; 0x1436 <vfprintf+0x58>
    1a6e:	b7 01       	movw	r22, r14
    1a70:	80 e2       	ldi	r24, 0x20	; 32
    1a72:	90 e0       	ldi	r25, 0x00	; 0
    1a74:	0e 94 93 11 	call	0x2326	; 0x2326 <fputc>
    1a78:	5a 94       	dec	r5
    1a7a:	f6 cf       	rjmp	.-20     	; 0x1a68 <vfprintf+0x68a>
    1a7c:	f7 01       	movw	r30, r14
    1a7e:	86 81       	ldd	r24, Z+6	; 0x06
    1a80:	97 81       	ldd	r25, Z+7	; 0x07
    1a82:	26 c0       	rjmp	.+76     	; 0x1ad0 <vfprintf+0x6f2>
    1a84:	8f ef       	ldi	r24, 0xFF	; 255
    1a86:	9f ef       	ldi	r25, 0xFF	; 255
    1a88:	23 c0       	rjmp	.+70     	; 0x1ad0 <vfprintf+0x6f2>
    1a8a:	b7 01       	movw	r22, r14
    1a8c:	80 e2       	ldi	r24, 0x20	; 32
    1a8e:	90 e0       	ldi	r25, 0x00	; 0
    1a90:	0e 94 93 11 	call	0x2326	; 0x2326 <fputc>
    1a94:	5a 94       	dec	r5
    1a96:	51 10       	cpse	r5, r1
    1a98:	f8 cf       	rjmp	.-16     	; 0x1a8a <vfprintf+0x6ac>
    1a9a:	d8 cf       	rjmp	.-80     	; 0x1a4c <vfprintf+0x66e>
    1a9c:	51 2c       	mov	r5, r1
    1a9e:	b7 01       	movw	r22, r14
    1aa0:	80 2f       	mov	r24, r16
    1aa2:	90 e0       	ldi	r25, 0x00	; 0
    1aa4:	0e 94 93 11 	call	0x2326	; 0x2326 <fputc>
    1aa8:	d3 cf       	rjmp	.-90     	; 0x1a50 <vfprintf+0x672>
    1aaa:	08 eb       	ldi	r16, 0xB8	; 184
    1aac:	10 e0       	ldi	r17, 0x00	; 0
    1aae:	d5 cf       	rjmp	.-86     	; 0x1a5a <vfprintf+0x67c>
    1ab0:	91 10       	cpse	r9, r1
    1ab2:	80 52       	subi	r24, 0x20	; 32
    1ab4:	b7 01       	movw	r22, r14
    1ab6:	90 e0       	ldi	r25, 0x00	; 0
    1ab8:	0e 94 93 11 	call	0x2326	; 0x2326 <fputc>
    1abc:	0f 5f       	subi	r16, 0xFF	; 255
    1abe:	1f 4f       	sbci	r17, 0xFF	; 255
    1ac0:	cf cf       	rjmp	.-98     	; 0x1a60 <vfprintf+0x682>
    1ac2:	23 e0       	ldi	r18, 0x03	; 3
    1ac4:	25 15       	cp	r18, r5
    1ac6:	10 f4       	brcc	.+4      	; 0x1acc <vfprintf+0x6ee>
    1ac8:	83 e0       	ldi	r24, 0x03	; 3
    1aca:	bd cf       	rjmp	.-134    	; 0x1a46 <vfprintf+0x668>
    1acc:	51 2c       	mov	r5, r1
    1ace:	c0 cf       	rjmp	.-128    	; 0x1a50 <vfprintf+0x672>
    1ad0:	60 96       	adiw	r28, 0x10	; 16
    1ad2:	e2 e1       	ldi	r30, 0x12	; 18
    1ad4:	0c 94 88 0d 	jmp	0x1b10	; 0x1b10 <__epilogue_restores__>

00001ad8 <__prologue_saves__>:
    1ad8:	2f 92       	push	r2
    1ada:	3f 92       	push	r3
    1adc:	4f 92       	push	r4
    1ade:	5f 92       	push	r5
    1ae0:	6f 92       	push	r6
    1ae2:	7f 92       	push	r7
    1ae4:	8f 92       	push	r8
    1ae6:	9f 92       	push	r9
    1ae8:	af 92       	push	r10
    1aea:	bf 92       	push	r11
    1aec:	cf 92       	push	r12
    1aee:	df 92       	push	r13
    1af0:	ef 92       	push	r14
    1af2:	ff 92       	push	r15
    1af4:	0f 93       	push	r16
    1af6:	1f 93       	push	r17
    1af8:	cf 93       	push	r28
    1afa:	df 93       	push	r29
    1afc:	cd b7       	in	r28, 0x3d	; 61
    1afe:	de b7       	in	r29, 0x3e	; 62
    1b00:	ca 1b       	sub	r28, r26
    1b02:	db 0b       	sbc	r29, r27
    1b04:	0f b6       	in	r0, 0x3f	; 63
    1b06:	f8 94       	cli
    1b08:	de bf       	out	0x3e, r29	; 62
    1b0a:	0f be       	out	0x3f, r0	; 63
    1b0c:	cd bf       	out	0x3d, r28	; 61
    1b0e:	09 94       	ijmp

00001b10 <__epilogue_restores__>:
    1b10:	2a 88       	ldd	r2, Y+18	; 0x12
    1b12:	39 88       	ldd	r3, Y+17	; 0x11
    1b14:	48 88       	ldd	r4, Y+16	; 0x10
    1b16:	5f 84       	ldd	r5, Y+15	; 0x0f
    1b18:	6e 84       	ldd	r6, Y+14	; 0x0e
    1b1a:	7d 84       	ldd	r7, Y+13	; 0x0d
    1b1c:	8c 84       	ldd	r8, Y+12	; 0x0c
    1b1e:	9b 84       	ldd	r9, Y+11	; 0x0b
    1b20:	aa 84       	ldd	r10, Y+10	; 0x0a
    1b22:	b9 84       	ldd	r11, Y+9	; 0x09
    1b24:	c8 84       	ldd	r12, Y+8	; 0x08
    1b26:	df 80       	ldd	r13, Y+7	; 0x07
    1b28:	ee 80       	ldd	r14, Y+6	; 0x06
    1b2a:	fd 80       	ldd	r15, Y+5	; 0x05
    1b2c:	0c 81       	ldd	r16, Y+4	; 0x04
    1b2e:	1b 81       	ldd	r17, Y+3	; 0x03
    1b30:	aa 81       	ldd	r26, Y+2	; 0x02
    1b32:	b9 81       	ldd	r27, Y+1	; 0x01
    1b34:	ce 0f       	add	r28, r30
    1b36:	d1 1d       	adc	r29, r1
    1b38:	0f b6       	in	r0, 0x3f	; 63
    1b3a:	f8 94       	cli
    1b3c:	de bf       	out	0x3e, r29	; 62
    1b3e:	0f be       	out	0x3f, r0	; 63
    1b40:	cd bf       	out	0x3d, r28	; 61
    1b42:	ed 01       	movw	r28, r26
    1b44:	08 95       	ret

00001b46 <__subsf3>:
    1b46:	50 58       	subi	r21, 0x80	; 128

00001b48 <__addsf3>:
    1b48:	bb 27       	eor	r27, r27
    1b4a:	aa 27       	eor	r26, r26
    1b4c:	0e 94 bb 0d 	call	0x1b76	; 0x1b76 <__addsf3x>
    1b50:	0c 94 84 0f 	jmp	0x1f08	; 0x1f08 <__fp_round>
    1b54:	0e 94 76 0f 	call	0x1eec	; 0x1eec <__fp_pscA>
    1b58:	38 f0       	brcs	.+14     	; 0x1b68 <__addsf3+0x20>
    1b5a:	0e 94 7d 0f 	call	0x1efa	; 0x1efa <__fp_pscB>
    1b5e:	20 f0       	brcs	.+8      	; 0x1b68 <__addsf3+0x20>
    1b60:	39 f4       	brne	.+14     	; 0x1b70 <__addsf3+0x28>
    1b62:	9f 3f       	cpi	r25, 0xFF	; 255
    1b64:	19 f4       	brne	.+6      	; 0x1b6c <__addsf3+0x24>
    1b66:	26 f4       	brtc	.+8      	; 0x1b70 <__addsf3+0x28>
    1b68:	0c 94 4c 0f 	jmp	0x1e98	; 0x1e98 <__fp_nan>
    1b6c:	0e f4       	brtc	.+2      	; 0x1b70 <__addsf3+0x28>
    1b6e:	e0 95       	com	r30
    1b70:	e7 fb       	bst	r30, 7
    1b72:	0c 94 46 0f 	jmp	0x1e8c	; 0x1e8c <__fp_inf>

00001b76 <__addsf3x>:
    1b76:	e9 2f       	mov	r30, r25
    1b78:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <__fp_split3>
    1b7c:	58 f3       	brcs	.-42     	; 0x1b54 <__addsf3+0xc>
    1b7e:	ba 17       	cp	r27, r26
    1b80:	62 07       	cpc	r22, r18
    1b82:	73 07       	cpc	r23, r19
    1b84:	84 07       	cpc	r24, r20
    1b86:	95 07       	cpc	r25, r21
    1b88:	20 f0       	brcs	.+8      	; 0x1b92 <__addsf3x+0x1c>
    1b8a:	79 f4       	brne	.+30     	; 0x1baa <__addsf3x+0x34>
    1b8c:	a6 f5       	brtc	.+104    	; 0x1bf6 <__addsf3x+0x80>
    1b8e:	0c 94 b7 0f 	jmp	0x1f6e	; 0x1f6e <__fp_zero>
    1b92:	0e f4       	brtc	.+2      	; 0x1b96 <__addsf3x+0x20>
    1b94:	e0 95       	com	r30
    1b96:	0b 2e       	mov	r0, r27
    1b98:	ba 2f       	mov	r27, r26
    1b9a:	a0 2d       	mov	r26, r0
    1b9c:	0b 01       	movw	r0, r22
    1b9e:	b9 01       	movw	r22, r18
    1ba0:	90 01       	movw	r18, r0
    1ba2:	0c 01       	movw	r0, r24
    1ba4:	ca 01       	movw	r24, r20
    1ba6:	a0 01       	movw	r20, r0
    1ba8:	11 24       	eor	r1, r1
    1baa:	ff 27       	eor	r31, r31
    1bac:	59 1b       	sub	r21, r25
    1bae:	99 f0       	breq	.+38     	; 0x1bd6 <__addsf3x+0x60>
    1bb0:	59 3f       	cpi	r21, 0xF9	; 249
    1bb2:	50 f4       	brcc	.+20     	; 0x1bc8 <__addsf3x+0x52>
    1bb4:	50 3e       	cpi	r21, 0xE0	; 224
    1bb6:	68 f1       	brcs	.+90     	; 0x1c12 <__addsf3x+0x9c>
    1bb8:	1a 16       	cp	r1, r26
    1bba:	f0 40       	sbci	r31, 0x00	; 0
    1bbc:	a2 2f       	mov	r26, r18
    1bbe:	23 2f       	mov	r18, r19
    1bc0:	34 2f       	mov	r19, r20
    1bc2:	44 27       	eor	r20, r20
    1bc4:	58 5f       	subi	r21, 0xF8	; 248
    1bc6:	f3 cf       	rjmp	.-26     	; 0x1bae <__addsf3x+0x38>
    1bc8:	46 95       	lsr	r20
    1bca:	37 95       	ror	r19
    1bcc:	27 95       	ror	r18
    1bce:	a7 95       	ror	r26
    1bd0:	f0 40       	sbci	r31, 0x00	; 0
    1bd2:	53 95       	inc	r21
    1bd4:	c9 f7       	brne	.-14     	; 0x1bc8 <__addsf3x+0x52>
    1bd6:	7e f4       	brtc	.+30     	; 0x1bf6 <__addsf3x+0x80>
    1bd8:	1f 16       	cp	r1, r31
    1bda:	ba 0b       	sbc	r27, r26
    1bdc:	62 0b       	sbc	r22, r18
    1bde:	73 0b       	sbc	r23, r19
    1be0:	84 0b       	sbc	r24, r20
    1be2:	ba f0       	brmi	.+46     	; 0x1c12 <__addsf3x+0x9c>
    1be4:	91 50       	subi	r25, 0x01	; 1
    1be6:	a1 f0       	breq	.+40     	; 0x1c10 <__addsf3x+0x9a>
    1be8:	ff 0f       	add	r31, r31
    1bea:	bb 1f       	adc	r27, r27
    1bec:	66 1f       	adc	r22, r22
    1bee:	77 1f       	adc	r23, r23
    1bf0:	88 1f       	adc	r24, r24
    1bf2:	c2 f7       	brpl	.-16     	; 0x1be4 <__addsf3x+0x6e>
    1bf4:	0e c0       	rjmp	.+28     	; 0x1c12 <__addsf3x+0x9c>
    1bf6:	ba 0f       	add	r27, r26
    1bf8:	62 1f       	adc	r22, r18
    1bfa:	73 1f       	adc	r23, r19
    1bfc:	84 1f       	adc	r24, r20
    1bfe:	48 f4       	brcc	.+18     	; 0x1c12 <__addsf3x+0x9c>
    1c00:	87 95       	ror	r24
    1c02:	77 95       	ror	r23
    1c04:	67 95       	ror	r22
    1c06:	b7 95       	ror	r27
    1c08:	f7 95       	ror	r31
    1c0a:	9e 3f       	cpi	r25, 0xFE	; 254
    1c0c:	08 f0       	brcs	.+2      	; 0x1c10 <__addsf3x+0x9a>
    1c0e:	b0 cf       	rjmp	.-160    	; 0x1b70 <__addsf3+0x28>
    1c10:	93 95       	inc	r25
    1c12:	88 0f       	add	r24, r24
    1c14:	08 f0       	brcs	.+2      	; 0x1c18 <__addsf3x+0xa2>
    1c16:	99 27       	eor	r25, r25
    1c18:	ee 0f       	add	r30, r30
    1c1a:	97 95       	ror	r25
    1c1c:	87 95       	ror	r24
    1c1e:	08 95       	ret

00001c20 <atan>:
    1c20:	df 93       	push	r29
    1c22:	dd 27       	eor	r29, r29
    1c24:	b9 2f       	mov	r27, r25
    1c26:	bf 77       	andi	r27, 0x7F	; 127
    1c28:	40 e8       	ldi	r20, 0x80	; 128
    1c2a:	5f e3       	ldi	r21, 0x3F	; 63
    1c2c:	16 16       	cp	r1, r22
    1c2e:	17 06       	cpc	r1, r23
    1c30:	48 07       	cpc	r20, r24
    1c32:	5b 07       	cpc	r21, r27
    1c34:	18 f4       	brcc	.+6      	; 0x1c3c <atan+0x1c>
    1c36:	d9 2f       	mov	r29, r25
    1c38:	0e 94 c3 0f 	call	0x1f86	; 0x1f86 <inverse>
    1c3c:	9f 93       	push	r25
    1c3e:	8f 93       	push	r24
    1c40:	7f 93       	push	r23
    1c42:	6f 93       	push	r22
    1c44:	0e 94 40 10 	call	0x2080	; 0x2080 <square>
    1c48:	e8 e6       	ldi	r30, 0x68	; 104
    1c4a:	f0 e0       	ldi	r31, 0x00	; 0
    1c4c:	0e 94 4f 0f 	call	0x1e9e	; 0x1e9e <__fp_powser>
    1c50:	0e 94 84 0f 	call	0x1f08	; 0x1f08 <__fp_round>
    1c54:	2f 91       	pop	r18
    1c56:	3f 91       	pop	r19
    1c58:	4f 91       	pop	r20
    1c5a:	5f 91       	pop	r21
    1c5c:	0e 94 de 0f 	call	0x1fbc	; 0x1fbc <__mulsf3x>
    1c60:	dd 23       	and	r29, r29
    1c62:	51 f0       	breq	.+20     	; 0x1c78 <atan+0x58>
    1c64:	90 58       	subi	r25, 0x80	; 128
    1c66:	a2 ea       	ldi	r26, 0xA2	; 162
    1c68:	2a ed       	ldi	r18, 0xDA	; 218
    1c6a:	3f e0       	ldi	r19, 0x0F	; 15
    1c6c:	49 ec       	ldi	r20, 0xC9	; 201
    1c6e:	5f e3       	ldi	r21, 0x3F	; 63
    1c70:	d0 78       	andi	r29, 0x80	; 128
    1c72:	5d 27       	eor	r21, r29
    1c74:	0e 94 bb 0d 	call	0x1b76	; 0x1b76 <__addsf3x>
    1c78:	df 91       	pop	r29
    1c7a:	0c 94 84 0f 	jmp	0x1f08	; 0x1f08 <__fp_round>

00001c7e <__cmpsf2>:
    1c7e:	0e 94 22 0f 	call	0x1e44	; 0x1e44 <__fp_cmp>
    1c82:	08 f4       	brcc	.+2      	; 0x1c86 <__cmpsf2+0x8>
    1c84:	81 e0       	ldi	r24, 0x01	; 1
    1c86:	08 95       	ret

00001c88 <__divsf3>:
    1c88:	0e 94 58 0e 	call	0x1cb0	; 0x1cb0 <__divsf3x>
    1c8c:	0c 94 84 0f 	jmp	0x1f08	; 0x1f08 <__fp_round>
    1c90:	0e 94 7d 0f 	call	0x1efa	; 0x1efa <__fp_pscB>
    1c94:	58 f0       	brcs	.+22     	; 0x1cac <__divsf3+0x24>
    1c96:	0e 94 76 0f 	call	0x1eec	; 0x1eec <__fp_pscA>
    1c9a:	40 f0       	brcs	.+16     	; 0x1cac <__divsf3+0x24>
    1c9c:	29 f4       	brne	.+10     	; 0x1ca8 <__divsf3+0x20>
    1c9e:	5f 3f       	cpi	r21, 0xFF	; 255
    1ca0:	29 f0       	breq	.+10     	; 0x1cac <__divsf3+0x24>
    1ca2:	0c 94 46 0f 	jmp	0x1e8c	; 0x1e8c <__fp_inf>
    1ca6:	51 11       	cpse	r21, r1
    1ca8:	0c 94 b8 0f 	jmp	0x1f70	; 0x1f70 <__fp_szero>
    1cac:	0c 94 4c 0f 	jmp	0x1e98	; 0x1e98 <__fp_nan>

00001cb0 <__divsf3x>:
    1cb0:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <__fp_split3>
    1cb4:	68 f3       	brcs	.-38     	; 0x1c90 <__divsf3+0x8>

00001cb6 <__divsf3_pse>:
    1cb6:	99 23       	and	r25, r25
    1cb8:	b1 f3       	breq	.-20     	; 0x1ca6 <__divsf3+0x1e>
    1cba:	55 23       	and	r21, r21
    1cbc:	91 f3       	breq	.-28     	; 0x1ca2 <__divsf3+0x1a>
    1cbe:	95 1b       	sub	r25, r21
    1cc0:	55 0b       	sbc	r21, r21
    1cc2:	bb 27       	eor	r27, r27
    1cc4:	aa 27       	eor	r26, r26
    1cc6:	62 17       	cp	r22, r18
    1cc8:	73 07       	cpc	r23, r19
    1cca:	84 07       	cpc	r24, r20
    1ccc:	38 f0       	brcs	.+14     	; 0x1cdc <__divsf3_pse+0x26>
    1cce:	9f 5f       	subi	r25, 0xFF	; 255
    1cd0:	5f 4f       	sbci	r21, 0xFF	; 255
    1cd2:	22 0f       	add	r18, r18
    1cd4:	33 1f       	adc	r19, r19
    1cd6:	44 1f       	adc	r20, r20
    1cd8:	aa 1f       	adc	r26, r26
    1cda:	a9 f3       	breq	.-22     	; 0x1cc6 <__divsf3_pse+0x10>
    1cdc:	35 d0       	rcall	.+106    	; 0x1d48 <__divsf3_pse+0x92>
    1cde:	0e 2e       	mov	r0, r30
    1ce0:	3a f0       	brmi	.+14     	; 0x1cf0 <__divsf3_pse+0x3a>
    1ce2:	e0 e8       	ldi	r30, 0x80	; 128
    1ce4:	32 d0       	rcall	.+100    	; 0x1d4a <__divsf3_pse+0x94>
    1ce6:	91 50       	subi	r25, 0x01	; 1
    1ce8:	50 40       	sbci	r21, 0x00	; 0
    1cea:	e6 95       	lsr	r30
    1cec:	00 1c       	adc	r0, r0
    1cee:	ca f7       	brpl	.-14     	; 0x1ce2 <__divsf3_pse+0x2c>
    1cf0:	2b d0       	rcall	.+86     	; 0x1d48 <__divsf3_pse+0x92>
    1cf2:	fe 2f       	mov	r31, r30
    1cf4:	29 d0       	rcall	.+82     	; 0x1d48 <__divsf3_pse+0x92>
    1cf6:	66 0f       	add	r22, r22
    1cf8:	77 1f       	adc	r23, r23
    1cfa:	88 1f       	adc	r24, r24
    1cfc:	bb 1f       	adc	r27, r27
    1cfe:	26 17       	cp	r18, r22
    1d00:	37 07       	cpc	r19, r23
    1d02:	48 07       	cpc	r20, r24
    1d04:	ab 07       	cpc	r26, r27
    1d06:	b0 e8       	ldi	r27, 0x80	; 128
    1d08:	09 f0       	breq	.+2      	; 0x1d0c <__divsf3_pse+0x56>
    1d0a:	bb 0b       	sbc	r27, r27
    1d0c:	80 2d       	mov	r24, r0
    1d0e:	bf 01       	movw	r22, r30
    1d10:	ff 27       	eor	r31, r31
    1d12:	93 58       	subi	r25, 0x83	; 131
    1d14:	5f 4f       	sbci	r21, 0xFF	; 255
    1d16:	3a f0       	brmi	.+14     	; 0x1d26 <__divsf3_pse+0x70>
    1d18:	9e 3f       	cpi	r25, 0xFE	; 254
    1d1a:	51 05       	cpc	r21, r1
    1d1c:	78 f0       	brcs	.+30     	; 0x1d3c <__divsf3_pse+0x86>
    1d1e:	0c 94 46 0f 	jmp	0x1e8c	; 0x1e8c <__fp_inf>
    1d22:	0c 94 b8 0f 	jmp	0x1f70	; 0x1f70 <__fp_szero>
    1d26:	5f 3f       	cpi	r21, 0xFF	; 255
    1d28:	e4 f3       	brlt	.-8      	; 0x1d22 <__divsf3_pse+0x6c>
    1d2a:	98 3e       	cpi	r25, 0xE8	; 232
    1d2c:	d4 f3       	brlt	.-12     	; 0x1d22 <__divsf3_pse+0x6c>
    1d2e:	86 95       	lsr	r24
    1d30:	77 95       	ror	r23
    1d32:	67 95       	ror	r22
    1d34:	b7 95       	ror	r27
    1d36:	f7 95       	ror	r31
    1d38:	9f 5f       	subi	r25, 0xFF	; 255
    1d3a:	c9 f7       	brne	.-14     	; 0x1d2e <__divsf3_pse+0x78>
    1d3c:	88 0f       	add	r24, r24
    1d3e:	91 1d       	adc	r25, r1
    1d40:	96 95       	lsr	r25
    1d42:	87 95       	ror	r24
    1d44:	97 f9       	bld	r25, 7
    1d46:	08 95       	ret
    1d48:	e1 e0       	ldi	r30, 0x01	; 1
    1d4a:	66 0f       	add	r22, r22
    1d4c:	77 1f       	adc	r23, r23
    1d4e:	88 1f       	adc	r24, r24
    1d50:	bb 1f       	adc	r27, r27
    1d52:	62 17       	cp	r22, r18
    1d54:	73 07       	cpc	r23, r19
    1d56:	84 07       	cpc	r24, r20
    1d58:	ba 07       	cpc	r27, r26
    1d5a:	20 f0       	brcs	.+8      	; 0x1d64 <__divsf3_pse+0xae>
    1d5c:	62 1b       	sub	r22, r18
    1d5e:	73 0b       	sbc	r23, r19
    1d60:	84 0b       	sbc	r24, r20
    1d62:	ba 0b       	sbc	r27, r26
    1d64:	ee 1f       	adc	r30, r30
    1d66:	88 f7       	brcc	.-30     	; 0x1d4a <__divsf3_pse+0x94>
    1d68:	e0 95       	com	r30
    1d6a:	08 95       	ret

00001d6c <__fixunssfsi>:
    1d6c:	0e 94 9d 0f 	call	0x1f3a	; 0x1f3a <__fp_splitA>
    1d70:	88 f0       	brcs	.+34     	; 0x1d94 <__fixunssfsi+0x28>
    1d72:	9f 57       	subi	r25, 0x7F	; 127
    1d74:	98 f0       	brcs	.+38     	; 0x1d9c <__fixunssfsi+0x30>
    1d76:	b9 2f       	mov	r27, r25
    1d78:	99 27       	eor	r25, r25
    1d7a:	b7 51       	subi	r27, 0x17	; 23
    1d7c:	b0 f0       	brcs	.+44     	; 0x1daa <__fixunssfsi+0x3e>
    1d7e:	e1 f0       	breq	.+56     	; 0x1db8 <__fixunssfsi+0x4c>
    1d80:	66 0f       	add	r22, r22
    1d82:	77 1f       	adc	r23, r23
    1d84:	88 1f       	adc	r24, r24
    1d86:	99 1f       	adc	r25, r25
    1d88:	1a f0       	brmi	.+6      	; 0x1d90 <__fixunssfsi+0x24>
    1d8a:	ba 95       	dec	r27
    1d8c:	c9 f7       	brne	.-14     	; 0x1d80 <__fixunssfsi+0x14>
    1d8e:	14 c0       	rjmp	.+40     	; 0x1db8 <__fixunssfsi+0x4c>
    1d90:	b1 30       	cpi	r27, 0x01	; 1
    1d92:	91 f0       	breq	.+36     	; 0x1db8 <__fixunssfsi+0x4c>
    1d94:	0e 94 b7 0f 	call	0x1f6e	; 0x1f6e <__fp_zero>
    1d98:	b1 e0       	ldi	r27, 0x01	; 1
    1d9a:	08 95       	ret
    1d9c:	0c 94 b7 0f 	jmp	0x1f6e	; 0x1f6e <__fp_zero>
    1da0:	67 2f       	mov	r22, r23
    1da2:	78 2f       	mov	r23, r24
    1da4:	88 27       	eor	r24, r24
    1da6:	b8 5f       	subi	r27, 0xF8	; 248
    1da8:	39 f0       	breq	.+14     	; 0x1db8 <__fixunssfsi+0x4c>
    1daa:	b9 3f       	cpi	r27, 0xF9	; 249
    1dac:	cc f3       	brlt	.-14     	; 0x1da0 <__fixunssfsi+0x34>
    1dae:	86 95       	lsr	r24
    1db0:	77 95       	ror	r23
    1db2:	67 95       	ror	r22
    1db4:	b3 95       	inc	r27
    1db6:	d9 f7       	brne	.-10     	; 0x1dae <__fixunssfsi+0x42>
    1db8:	3e f4       	brtc	.+14     	; 0x1dc8 <__fixunssfsi+0x5c>
    1dba:	90 95       	com	r25
    1dbc:	80 95       	com	r24
    1dbe:	70 95       	com	r23
    1dc0:	61 95       	neg	r22
    1dc2:	7f 4f       	sbci	r23, 0xFF	; 255
    1dc4:	8f 4f       	sbci	r24, 0xFF	; 255
    1dc6:	9f 4f       	sbci	r25, 0xFF	; 255
    1dc8:	08 95       	ret

00001dca <__floatunsisf>:
    1dca:	e8 94       	clt
    1dcc:	09 c0       	rjmp	.+18     	; 0x1de0 <__floatsisf+0x12>

00001dce <__floatsisf>:
    1dce:	97 fb       	bst	r25, 7
    1dd0:	3e f4       	brtc	.+14     	; 0x1de0 <__floatsisf+0x12>
    1dd2:	90 95       	com	r25
    1dd4:	80 95       	com	r24
    1dd6:	70 95       	com	r23
    1dd8:	61 95       	neg	r22
    1dda:	7f 4f       	sbci	r23, 0xFF	; 255
    1ddc:	8f 4f       	sbci	r24, 0xFF	; 255
    1dde:	9f 4f       	sbci	r25, 0xFF	; 255
    1de0:	99 23       	and	r25, r25
    1de2:	a9 f0       	breq	.+42     	; 0x1e0e <__floatsisf+0x40>
    1de4:	f9 2f       	mov	r31, r25
    1de6:	96 e9       	ldi	r25, 0x96	; 150
    1de8:	bb 27       	eor	r27, r27
    1dea:	93 95       	inc	r25
    1dec:	f6 95       	lsr	r31
    1dee:	87 95       	ror	r24
    1df0:	77 95       	ror	r23
    1df2:	67 95       	ror	r22
    1df4:	b7 95       	ror	r27
    1df6:	f1 11       	cpse	r31, r1
    1df8:	f8 cf       	rjmp	.-16     	; 0x1dea <__floatsisf+0x1c>
    1dfa:	fa f4       	brpl	.+62     	; 0x1e3a <__floatsisf+0x6c>
    1dfc:	bb 0f       	add	r27, r27
    1dfe:	11 f4       	brne	.+4      	; 0x1e04 <__floatsisf+0x36>
    1e00:	60 ff       	sbrs	r22, 0
    1e02:	1b c0       	rjmp	.+54     	; 0x1e3a <__floatsisf+0x6c>
    1e04:	6f 5f       	subi	r22, 0xFF	; 255
    1e06:	7f 4f       	sbci	r23, 0xFF	; 255
    1e08:	8f 4f       	sbci	r24, 0xFF	; 255
    1e0a:	9f 4f       	sbci	r25, 0xFF	; 255
    1e0c:	16 c0       	rjmp	.+44     	; 0x1e3a <__floatsisf+0x6c>
    1e0e:	88 23       	and	r24, r24
    1e10:	11 f0       	breq	.+4      	; 0x1e16 <__floatsisf+0x48>
    1e12:	96 e9       	ldi	r25, 0x96	; 150
    1e14:	11 c0       	rjmp	.+34     	; 0x1e38 <__floatsisf+0x6a>
    1e16:	77 23       	and	r23, r23
    1e18:	21 f0       	breq	.+8      	; 0x1e22 <__floatsisf+0x54>
    1e1a:	9e e8       	ldi	r25, 0x8E	; 142
    1e1c:	87 2f       	mov	r24, r23
    1e1e:	76 2f       	mov	r23, r22
    1e20:	05 c0       	rjmp	.+10     	; 0x1e2c <__floatsisf+0x5e>
    1e22:	66 23       	and	r22, r22
    1e24:	71 f0       	breq	.+28     	; 0x1e42 <__floatsisf+0x74>
    1e26:	96 e8       	ldi	r25, 0x86	; 134
    1e28:	86 2f       	mov	r24, r22
    1e2a:	70 e0       	ldi	r23, 0x00	; 0
    1e2c:	60 e0       	ldi	r22, 0x00	; 0
    1e2e:	2a f0       	brmi	.+10     	; 0x1e3a <__floatsisf+0x6c>
    1e30:	9a 95       	dec	r25
    1e32:	66 0f       	add	r22, r22
    1e34:	77 1f       	adc	r23, r23
    1e36:	88 1f       	adc	r24, r24
    1e38:	da f7       	brpl	.-10     	; 0x1e30 <__floatsisf+0x62>
    1e3a:	88 0f       	add	r24, r24
    1e3c:	96 95       	lsr	r25
    1e3e:	87 95       	ror	r24
    1e40:	97 f9       	bld	r25, 7
    1e42:	08 95       	ret

00001e44 <__fp_cmp>:
    1e44:	99 0f       	add	r25, r25
    1e46:	00 08       	sbc	r0, r0
    1e48:	55 0f       	add	r21, r21
    1e4a:	aa 0b       	sbc	r26, r26
    1e4c:	e0 e8       	ldi	r30, 0x80	; 128
    1e4e:	fe ef       	ldi	r31, 0xFE	; 254
    1e50:	16 16       	cp	r1, r22
    1e52:	17 06       	cpc	r1, r23
    1e54:	e8 07       	cpc	r30, r24
    1e56:	f9 07       	cpc	r31, r25
    1e58:	c0 f0       	brcs	.+48     	; 0x1e8a <__fp_cmp+0x46>
    1e5a:	12 16       	cp	r1, r18
    1e5c:	13 06       	cpc	r1, r19
    1e5e:	e4 07       	cpc	r30, r20
    1e60:	f5 07       	cpc	r31, r21
    1e62:	98 f0       	brcs	.+38     	; 0x1e8a <__fp_cmp+0x46>
    1e64:	62 1b       	sub	r22, r18
    1e66:	73 0b       	sbc	r23, r19
    1e68:	84 0b       	sbc	r24, r20
    1e6a:	95 0b       	sbc	r25, r21
    1e6c:	39 f4       	brne	.+14     	; 0x1e7c <__fp_cmp+0x38>
    1e6e:	0a 26       	eor	r0, r26
    1e70:	61 f0       	breq	.+24     	; 0x1e8a <__fp_cmp+0x46>
    1e72:	23 2b       	or	r18, r19
    1e74:	24 2b       	or	r18, r20
    1e76:	25 2b       	or	r18, r21
    1e78:	21 f4       	brne	.+8      	; 0x1e82 <__fp_cmp+0x3e>
    1e7a:	08 95       	ret
    1e7c:	0a 26       	eor	r0, r26
    1e7e:	09 f4       	brne	.+2      	; 0x1e82 <__fp_cmp+0x3e>
    1e80:	a1 40       	sbci	r26, 0x01	; 1
    1e82:	a6 95       	lsr	r26
    1e84:	8f ef       	ldi	r24, 0xFF	; 255
    1e86:	81 1d       	adc	r24, r1
    1e88:	81 1d       	adc	r24, r1
    1e8a:	08 95       	ret

00001e8c <__fp_inf>:
    1e8c:	97 f9       	bld	r25, 7
    1e8e:	9f 67       	ori	r25, 0x7F	; 127
    1e90:	80 e8       	ldi	r24, 0x80	; 128
    1e92:	70 e0       	ldi	r23, 0x00	; 0
    1e94:	60 e0       	ldi	r22, 0x00	; 0
    1e96:	08 95       	ret

00001e98 <__fp_nan>:
    1e98:	9f ef       	ldi	r25, 0xFF	; 255
    1e9a:	80 ec       	ldi	r24, 0xC0	; 192
    1e9c:	08 95       	ret

00001e9e <__fp_powser>:
    1e9e:	df 93       	push	r29
    1ea0:	cf 93       	push	r28
    1ea2:	1f 93       	push	r17
    1ea4:	0f 93       	push	r16
    1ea6:	ff 92       	push	r15
    1ea8:	ef 92       	push	r14
    1eaa:	df 92       	push	r13
    1eac:	7b 01       	movw	r14, r22
    1eae:	8c 01       	movw	r16, r24
    1eb0:	68 94       	set
    1eb2:	06 c0       	rjmp	.+12     	; 0x1ec0 <__fp_powser+0x22>
    1eb4:	da 2e       	mov	r13, r26
    1eb6:	ef 01       	movw	r28, r30
    1eb8:	0e 94 de 0f 	call	0x1fbc	; 0x1fbc <__mulsf3x>
    1ebc:	fe 01       	movw	r30, r28
    1ebe:	e8 94       	clt
    1ec0:	a5 91       	lpm	r26, Z+
    1ec2:	25 91       	lpm	r18, Z+
    1ec4:	35 91       	lpm	r19, Z+
    1ec6:	45 91       	lpm	r20, Z+
    1ec8:	55 91       	lpm	r21, Z+
    1eca:	a6 f3       	brts	.-24     	; 0x1eb4 <__fp_powser+0x16>
    1ecc:	ef 01       	movw	r28, r30
    1ece:	0e 94 bb 0d 	call	0x1b76	; 0x1b76 <__addsf3x>
    1ed2:	fe 01       	movw	r30, r28
    1ed4:	97 01       	movw	r18, r14
    1ed6:	a8 01       	movw	r20, r16
    1ed8:	da 94       	dec	r13
    1eda:	69 f7       	brne	.-38     	; 0x1eb6 <__fp_powser+0x18>
    1edc:	df 90       	pop	r13
    1ede:	ef 90       	pop	r14
    1ee0:	ff 90       	pop	r15
    1ee2:	0f 91       	pop	r16
    1ee4:	1f 91       	pop	r17
    1ee6:	cf 91       	pop	r28
    1ee8:	df 91       	pop	r29
    1eea:	08 95       	ret

00001eec <__fp_pscA>:
    1eec:	00 24       	eor	r0, r0
    1eee:	0a 94       	dec	r0
    1ef0:	16 16       	cp	r1, r22
    1ef2:	17 06       	cpc	r1, r23
    1ef4:	18 06       	cpc	r1, r24
    1ef6:	09 06       	cpc	r0, r25
    1ef8:	08 95       	ret

00001efa <__fp_pscB>:
    1efa:	00 24       	eor	r0, r0
    1efc:	0a 94       	dec	r0
    1efe:	12 16       	cp	r1, r18
    1f00:	13 06       	cpc	r1, r19
    1f02:	14 06       	cpc	r1, r20
    1f04:	05 06       	cpc	r0, r21
    1f06:	08 95       	ret

00001f08 <__fp_round>:
    1f08:	09 2e       	mov	r0, r25
    1f0a:	03 94       	inc	r0
    1f0c:	00 0c       	add	r0, r0
    1f0e:	11 f4       	brne	.+4      	; 0x1f14 <__fp_round+0xc>
    1f10:	88 23       	and	r24, r24
    1f12:	52 f0       	brmi	.+20     	; 0x1f28 <__fp_round+0x20>
    1f14:	bb 0f       	add	r27, r27
    1f16:	40 f4       	brcc	.+16     	; 0x1f28 <__fp_round+0x20>
    1f18:	bf 2b       	or	r27, r31
    1f1a:	11 f4       	brne	.+4      	; 0x1f20 <__fp_round+0x18>
    1f1c:	60 ff       	sbrs	r22, 0
    1f1e:	04 c0       	rjmp	.+8      	; 0x1f28 <__fp_round+0x20>
    1f20:	6f 5f       	subi	r22, 0xFF	; 255
    1f22:	7f 4f       	sbci	r23, 0xFF	; 255
    1f24:	8f 4f       	sbci	r24, 0xFF	; 255
    1f26:	9f 4f       	sbci	r25, 0xFF	; 255
    1f28:	08 95       	ret

00001f2a <__fp_split3>:
    1f2a:	57 fd       	sbrc	r21, 7
    1f2c:	90 58       	subi	r25, 0x80	; 128
    1f2e:	44 0f       	add	r20, r20
    1f30:	55 1f       	adc	r21, r21
    1f32:	59 f0       	breq	.+22     	; 0x1f4a <__fp_splitA+0x10>
    1f34:	5f 3f       	cpi	r21, 0xFF	; 255
    1f36:	71 f0       	breq	.+28     	; 0x1f54 <__fp_splitA+0x1a>
    1f38:	47 95       	ror	r20

00001f3a <__fp_splitA>:
    1f3a:	88 0f       	add	r24, r24
    1f3c:	97 fb       	bst	r25, 7
    1f3e:	99 1f       	adc	r25, r25
    1f40:	61 f0       	breq	.+24     	; 0x1f5a <__fp_splitA+0x20>
    1f42:	9f 3f       	cpi	r25, 0xFF	; 255
    1f44:	79 f0       	breq	.+30     	; 0x1f64 <__fp_splitA+0x2a>
    1f46:	87 95       	ror	r24
    1f48:	08 95       	ret
    1f4a:	12 16       	cp	r1, r18
    1f4c:	13 06       	cpc	r1, r19
    1f4e:	14 06       	cpc	r1, r20
    1f50:	55 1f       	adc	r21, r21
    1f52:	f2 cf       	rjmp	.-28     	; 0x1f38 <__fp_split3+0xe>
    1f54:	46 95       	lsr	r20
    1f56:	f1 df       	rcall	.-30     	; 0x1f3a <__fp_splitA>
    1f58:	08 c0       	rjmp	.+16     	; 0x1f6a <__fp_splitA+0x30>
    1f5a:	16 16       	cp	r1, r22
    1f5c:	17 06       	cpc	r1, r23
    1f5e:	18 06       	cpc	r1, r24
    1f60:	99 1f       	adc	r25, r25
    1f62:	f1 cf       	rjmp	.-30     	; 0x1f46 <__fp_splitA+0xc>
    1f64:	86 95       	lsr	r24
    1f66:	71 05       	cpc	r23, r1
    1f68:	61 05       	cpc	r22, r1
    1f6a:	08 94       	sec
    1f6c:	08 95       	ret

00001f6e <__fp_zero>:
    1f6e:	e8 94       	clt

00001f70 <__fp_szero>:
    1f70:	bb 27       	eor	r27, r27
    1f72:	66 27       	eor	r22, r22
    1f74:	77 27       	eor	r23, r23
    1f76:	cb 01       	movw	r24, r22
    1f78:	97 f9       	bld	r25, 7
    1f7a:	08 95       	ret

00001f7c <__gesf2>:
    1f7c:	0e 94 22 0f 	call	0x1e44	; 0x1e44 <__fp_cmp>
    1f80:	08 f4       	brcc	.+2      	; 0x1f84 <__gesf2+0x8>
    1f82:	8f ef       	ldi	r24, 0xFF	; 255
    1f84:	08 95       	ret

00001f86 <inverse>:
    1f86:	9b 01       	movw	r18, r22
    1f88:	ac 01       	movw	r20, r24
    1f8a:	60 e0       	ldi	r22, 0x00	; 0
    1f8c:	70 e0       	ldi	r23, 0x00	; 0
    1f8e:	80 e8       	ldi	r24, 0x80	; 128
    1f90:	9f e3       	ldi	r25, 0x3F	; 63
    1f92:	0c 94 44 0e 	jmp	0x1c88	; 0x1c88 <__divsf3>

00001f96 <__mulsf3>:
    1f96:	0e 94 de 0f 	call	0x1fbc	; 0x1fbc <__mulsf3x>
    1f9a:	0c 94 84 0f 	jmp	0x1f08	; 0x1f08 <__fp_round>
    1f9e:	0e 94 76 0f 	call	0x1eec	; 0x1eec <__fp_pscA>
    1fa2:	38 f0       	brcs	.+14     	; 0x1fb2 <__mulsf3+0x1c>
    1fa4:	0e 94 7d 0f 	call	0x1efa	; 0x1efa <__fp_pscB>
    1fa8:	20 f0       	brcs	.+8      	; 0x1fb2 <__mulsf3+0x1c>
    1faa:	95 23       	and	r25, r21
    1fac:	11 f0       	breq	.+4      	; 0x1fb2 <__mulsf3+0x1c>
    1fae:	0c 94 46 0f 	jmp	0x1e8c	; 0x1e8c <__fp_inf>
    1fb2:	0c 94 4c 0f 	jmp	0x1e98	; 0x1e98 <__fp_nan>
    1fb6:	11 24       	eor	r1, r1
    1fb8:	0c 94 b8 0f 	jmp	0x1f70	; 0x1f70 <__fp_szero>

00001fbc <__mulsf3x>:
    1fbc:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <__fp_split3>
    1fc0:	70 f3       	brcs	.-36     	; 0x1f9e <__mulsf3+0x8>

00001fc2 <__mulsf3_pse>:
    1fc2:	95 9f       	mul	r25, r21
    1fc4:	c1 f3       	breq	.-16     	; 0x1fb6 <__mulsf3+0x20>
    1fc6:	95 0f       	add	r25, r21
    1fc8:	50 e0       	ldi	r21, 0x00	; 0
    1fca:	55 1f       	adc	r21, r21
    1fcc:	62 9f       	mul	r22, r18
    1fce:	f0 01       	movw	r30, r0
    1fd0:	72 9f       	mul	r23, r18
    1fd2:	bb 27       	eor	r27, r27
    1fd4:	f0 0d       	add	r31, r0
    1fd6:	b1 1d       	adc	r27, r1
    1fd8:	63 9f       	mul	r22, r19
    1fda:	aa 27       	eor	r26, r26
    1fdc:	f0 0d       	add	r31, r0
    1fde:	b1 1d       	adc	r27, r1
    1fe0:	aa 1f       	adc	r26, r26
    1fe2:	64 9f       	mul	r22, r20
    1fe4:	66 27       	eor	r22, r22
    1fe6:	b0 0d       	add	r27, r0
    1fe8:	a1 1d       	adc	r26, r1
    1fea:	66 1f       	adc	r22, r22
    1fec:	82 9f       	mul	r24, r18
    1fee:	22 27       	eor	r18, r18
    1ff0:	b0 0d       	add	r27, r0
    1ff2:	a1 1d       	adc	r26, r1
    1ff4:	62 1f       	adc	r22, r18
    1ff6:	73 9f       	mul	r23, r19
    1ff8:	b0 0d       	add	r27, r0
    1ffa:	a1 1d       	adc	r26, r1
    1ffc:	62 1f       	adc	r22, r18
    1ffe:	83 9f       	mul	r24, r19
    2000:	a0 0d       	add	r26, r0
    2002:	61 1d       	adc	r22, r1
    2004:	22 1f       	adc	r18, r18
    2006:	74 9f       	mul	r23, r20
    2008:	33 27       	eor	r19, r19
    200a:	a0 0d       	add	r26, r0
    200c:	61 1d       	adc	r22, r1
    200e:	23 1f       	adc	r18, r19
    2010:	84 9f       	mul	r24, r20
    2012:	60 0d       	add	r22, r0
    2014:	21 1d       	adc	r18, r1
    2016:	82 2f       	mov	r24, r18
    2018:	76 2f       	mov	r23, r22
    201a:	6a 2f       	mov	r22, r26
    201c:	11 24       	eor	r1, r1
    201e:	9f 57       	subi	r25, 0x7F	; 127
    2020:	50 40       	sbci	r21, 0x00	; 0
    2022:	9a f0       	brmi	.+38     	; 0x204a <__mulsf3_pse+0x88>
    2024:	f1 f0       	breq	.+60     	; 0x2062 <__mulsf3_pse+0xa0>
    2026:	88 23       	and	r24, r24
    2028:	4a f0       	brmi	.+18     	; 0x203c <__mulsf3_pse+0x7a>
    202a:	ee 0f       	add	r30, r30
    202c:	ff 1f       	adc	r31, r31
    202e:	bb 1f       	adc	r27, r27
    2030:	66 1f       	adc	r22, r22
    2032:	77 1f       	adc	r23, r23
    2034:	88 1f       	adc	r24, r24
    2036:	91 50       	subi	r25, 0x01	; 1
    2038:	50 40       	sbci	r21, 0x00	; 0
    203a:	a9 f7       	brne	.-22     	; 0x2026 <__mulsf3_pse+0x64>
    203c:	9e 3f       	cpi	r25, 0xFE	; 254
    203e:	51 05       	cpc	r21, r1
    2040:	80 f0       	brcs	.+32     	; 0x2062 <__mulsf3_pse+0xa0>
    2042:	0c 94 46 0f 	jmp	0x1e8c	; 0x1e8c <__fp_inf>
    2046:	0c 94 b8 0f 	jmp	0x1f70	; 0x1f70 <__fp_szero>
    204a:	5f 3f       	cpi	r21, 0xFF	; 255
    204c:	e4 f3       	brlt	.-8      	; 0x2046 <__mulsf3_pse+0x84>
    204e:	98 3e       	cpi	r25, 0xE8	; 232
    2050:	d4 f3       	brlt	.-12     	; 0x2046 <__mulsf3_pse+0x84>
    2052:	86 95       	lsr	r24
    2054:	77 95       	ror	r23
    2056:	67 95       	ror	r22
    2058:	b7 95       	ror	r27
    205a:	f7 95       	ror	r31
    205c:	e7 95       	ror	r30
    205e:	9f 5f       	subi	r25, 0xFF	; 255
    2060:	c1 f7       	brne	.-16     	; 0x2052 <__mulsf3_pse+0x90>
    2062:	fe 2b       	or	r31, r30
    2064:	88 0f       	add	r24, r24
    2066:	91 1d       	adc	r25, r1
    2068:	96 95       	lsr	r25
    206a:	87 95       	ror	r24
    206c:	97 f9       	bld	r25, 7
    206e:	08 95       	ret

00002070 <sin>:
    2070:	9f 93       	push	r25
    2072:	0e 94 46 10 	call	0x208c	; 0x208c <__fp_rempio2>
    2076:	0f 90       	pop	r0
    2078:	07 fc       	sbrc	r0, 7
    207a:	ee 5f       	subi	r30, 0xFE	; 254
    207c:	0c 94 6f 10 	jmp	0x20de	; 0x20de <__fp_sinus>

00002080 <square>:
    2080:	9b 01       	movw	r18, r22
    2082:	ac 01       	movw	r20, r24
    2084:	0c 94 cb 0f 	jmp	0x1f96	; 0x1f96 <__mulsf3>
    2088:	0c 94 4c 0f 	jmp	0x1e98	; 0x1e98 <__fp_nan>

0000208c <__fp_rempio2>:
    208c:	0e 94 9d 0f 	call	0x1f3a	; 0x1f3a <__fp_splitA>
    2090:	d8 f3       	brcs	.-10     	; 0x2088 <square+0x8>
    2092:	e8 94       	clt
    2094:	e0 e0       	ldi	r30, 0x00	; 0
    2096:	bb 27       	eor	r27, r27
    2098:	9f 57       	subi	r25, 0x7F	; 127
    209a:	f0 f0       	brcs	.+60     	; 0x20d8 <__fp_rempio2+0x4c>
    209c:	2a ed       	ldi	r18, 0xDA	; 218
    209e:	3f e0       	ldi	r19, 0x0F	; 15
    20a0:	49 ec       	ldi	r20, 0xC9	; 201
    20a2:	06 c0       	rjmp	.+12     	; 0x20b0 <__fp_rempio2+0x24>
    20a4:	ee 0f       	add	r30, r30
    20a6:	bb 0f       	add	r27, r27
    20a8:	66 1f       	adc	r22, r22
    20aa:	77 1f       	adc	r23, r23
    20ac:	88 1f       	adc	r24, r24
    20ae:	28 f0       	brcs	.+10     	; 0x20ba <__fp_rempio2+0x2e>
    20b0:	b2 3a       	cpi	r27, 0xA2	; 162
    20b2:	62 07       	cpc	r22, r18
    20b4:	73 07       	cpc	r23, r19
    20b6:	84 07       	cpc	r24, r20
    20b8:	28 f0       	brcs	.+10     	; 0x20c4 <__fp_rempio2+0x38>
    20ba:	b2 5a       	subi	r27, 0xA2	; 162
    20bc:	62 0b       	sbc	r22, r18
    20be:	73 0b       	sbc	r23, r19
    20c0:	84 0b       	sbc	r24, r20
    20c2:	e3 95       	inc	r30
    20c4:	9a 95       	dec	r25
    20c6:	72 f7       	brpl	.-36     	; 0x20a4 <__fp_rempio2+0x18>
    20c8:	80 38       	cpi	r24, 0x80	; 128
    20ca:	30 f4       	brcc	.+12     	; 0x20d8 <__fp_rempio2+0x4c>
    20cc:	9a 95       	dec	r25
    20ce:	bb 0f       	add	r27, r27
    20d0:	66 1f       	adc	r22, r22
    20d2:	77 1f       	adc	r23, r23
    20d4:	88 1f       	adc	r24, r24
    20d6:	d2 f7       	brpl	.-12     	; 0x20cc <__fp_rempio2+0x40>
    20d8:	90 48       	sbci	r25, 0x80	; 128
    20da:	0c 94 85 10 	jmp	0x210a	; 0x210a <__fp_mpack_finite>

000020de <__fp_sinus>:
    20de:	ef 93       	push	r30
    20e0:	e0 ff       	sbrs	r30, 0
    20e2:	07 c0       	rjmp	.+14     	; 0x20f2 <__fp_sinus+0x14>
    20e4:	a2 ea       	ldi	r26, 0xA2	; 162
    20e6:	2a ed       	ldi	r18, 0xDA	; 218
    20e8:	3f e0       	ldi	r19, 0x0F	; 15
    20ea:	49 ec       	ldi	r20, 0xC9	; 201
    20ec:	5f eb       	ldi	r21, 0xBF	; 191
    20ee:	0e 94 bb 0d 	call	0x1b76	; 0x1b76 <__addsf3x>
    20f2:	0e 94 84 0f 	call	0x1f08	; 0x1f08 <__fp_round>
    20f6:	0f 90       	pop	r0
    20f8:	03 94       	inc	r0
    20fa:	01 fc       	sbrc	r0, 1
    20fc:	90 58       	subi	r25, 0x80	; 128
    20fe:	e5 e9       	ldi	r30, 0x95	; 149
    2100:	f0 e0       	ldi	r31, 0x00	; 0
    2102:	0c 94 91 10 	jmp	0x2122	; 0x2122 <__fp_powsodd>

00002106 <__fp_mpack>:
    2106:	9f 3f       	cpi	r25, 0xFF	; 255
    2108:	31 f0       	breq	.+12     	; 0x2116 <__fp_mpack_finite+0xc>

0000210a <__fp_mpack_finite>:
    210a:	91 50       	subi	r25, 0x01	; 1
    210c:	20 f4       	brcc	.+8      	; 0x2116 <__fp_mpack_finite+0xc>
    210e:	87 95       	ror	r24
    2110:	77 95       	ror	r23
    2112:	67 95       	ror	r22
    2114:	b7 95       	ror	r27
    2116:	88 0f       	add	r24, r24
    2118:	91 1d       	adc	r25, r1
    211a:	96 95       	lsr	r25
    211c:	87 95       	ror	r24
    211e:	97 f9       	bld	r25, 7
    2120:	08 95       	ret

00002122 <__fp_powsodd>:
    2122:	9f 93       	push	r25
    2124:	8f 93       	push	r24
    2126:	7f 93       	push	r23
    2128:	6f 93       	push	r22
    212a:	ff 93       	push	r31
    212c:	ef 93       	push	r30
    212e:	9b 01       	movw	r18, r22
    2130:	ac 01       	movw	r20, r24
    2132:	0e 94 cb 0f 	call	0x1f96	; 0x1f96 <__mulsf3>
    2136:	ef 91       	pop	r30
    2138:	ff 91       	pop	r31
    213a:	0e 94 4f 0f 	call	0x1e9e	; 0x1e9e <__fp_powser>
    213e:	2f 91       	pop	r18
    2140:	3f 91       	pop	r19
    2142:	4f 91       	pop	r20
    2144:	5f 91       	pop	r21
    2146:	0c 94 cb 0f 	jmp	0x1f96	; 0x1f96 <__mulsf3>

0000214a <__ftoa_engine>:
    214a:	28 30       	cpi	r18, 0x08	; 8
    214c:	08 f0       	brcs	.+2      	; 0x2150 <__ftoa_engine+0x6>
    214e:	27 e0       	ldi	r18, 0x07	; 7
    2150:	33 27       	eor	r19, r19
    2152:	da 01       	movw	r26, r20
    2154:	99 0f       	add	r25, r25
    2156:	31 1d       	adc	r19, r1
    2158:	87 fd       	sbrc	r24, 7
    215a:	91 60       	ori	r25, 0x01	; 1
    215c:	00 96       	adiw	r24, 0x00	; 0
    215e:	61 05       	cpc	r22, r1
    2160:	71 05       	cpc	r23, r1
    2162:	39 f4       	brne	.+14     	; 0x2172 <__ftoa_engine+0x28>
    2164:	32 60       	ori	r19, 0x02	; 2
    2166:	2e 5f       	subi	r18, 0xFE	; 254
    2168:	3d 93       	st	X+, r19
    216a:	30 e3       	ldi	r19, 0x30	; 48
    216c:	2a 95       	dec	r18
    216e:	e1 f7       	brne	.-8      	; 0x2168 <__ftoa_engine+0x1e>
    2170:	08 95       	ret
    2172:	9f 3f       	cpi	r25, 0xFF	; 255
    2174:	30 f0       	brcs	.+12     	; 0x2182 <__ftoa_engine+0x38>
    2176:	80 38       	cpi	r24, 0x80	; 128
    2178:	71 05       	cpc	r23, r1
    217a:	61 05       	cpc	r22, r1
    217c:	09 f0       	breq	.+2      	; 0x2180 <__ftoa_engine+0x36>
    217e:	3c 5f       	subi	r19, 0xFC	; 252
    2180:	3c 5f       	subi	r19, 0xFC	; 252
    2182:	3d 93       	st	X+, r19
    2184:	91 30       	cpi	r25, 0x01	; 1
    2186:	08 f0       	brcs	.+2      	; 0x218a <__ftoa_engine+0x40>
    2188:	80 68       	ori	r24, 0x80	; 128
    218a:	91 1d       	adc	r25, r1
    218c:	df 93       	push	r29
    218e:	cf 93       	push	r28
    2190:	1f 93       	push	r17
    2192:	0f 93       	push	r16
    2194:	ff 92       	push	r15
    2196:	ef 92       	push	r14
    2198:	19 2f       	mov	r17, r25
    219a:	98 7f       	andi	r25, 0xF8	; 248
    219c:	96 95       	lsr	r25
    219e:	e9 2f       	mov	r30, r25
    21a0:	96 95       	lsr	r25
    21a2:	96 95       	lsr	r25
    21a4:	e9 0f       	add	r30, r25
    21a6:	ff 27       	eor	r31, r31
    21a8:	ea 5e       	subi	r30, 0xEA	; 234
    21aa:	fe 4f       	sbci	r31, 0xFE	; 254
    21ac:	99 27       	eor	r25, r25
    21ae:	33 27       	eor	r19, r19
    21b0:	ee 24       	eor	r14, r14
    21b2:	ff 24       	eor	r15, r15
    21b4:	a7 01       	movw	r20, r14
    21b6:	e7 01       	movw	r28, r14
    21b8:	05 90       	lpm	r0, Z+
    21ba:	08 94       	sec
    21bc:	07 94       	ror	r0
    21be:	28 f4       	brcc	.+10     	; 0x21ca <__ftoa_engine+0x80>
    21c0:	36 0f       	add	r19, r22
    21c2:	e7 1e       	adc	r14, r23
    21c4:	f8 1e       	adc	r15, r24
    21c6:	49 1f       	adc	r20, r25
    21c8:	51 1d       	adc	r21, r1
    21ca:	66 0f       	add	r22, r22
    21cc:	77 1f       	adc	r23, r23
    21ce:	88 1f       	adc	r24, r24
    21d0:	99 1f       	adc	r25, r25
    21d2:	06 94       	lsr	r0
    21d4:	a1 f7       	brne	.-24     	; 0x21be <__ftoa_engine+0x74>
    21d6:	05 90       	lpm	r0, Z+
    21d8:	07 94       	ror	r0
    21da:	28 f4       	brcc	.+10     	; 0x21e6 <__ftoa_engine+0x9c>
    21dc:	e7 0e       	add	r14, r23
    21de:	f8 1e       	adc	r15, r24
    21e0:	49 1f       	adc	r20, r25
    21e2:	56 1f       	adc	r21, r22
    21e4:	c1 1d       	adc	r28, r1
    21e6:	77 0f       	add	r23, r23
    21e8:	88 1f       	adc	r24, r24
    21ea:	99 1f       	adc	r25, r25
    21ec:	66 1f       	adc	r22, r22
    21ee:	06 94       	lsr	r0
    21f0:	a1 f7       	brne	.-24     	; 0x21da <__ftoa_engine+0x90>
    21f2:	05 90       	lpm	r0, Z+
    21f4:	07 94       	ror	r0
    21f6:	28 f4       	brcc	.+10     	; 0x2202 <__ftoa_engine+0xb8>
    21f8:	f8 0e       	add	r15, r24
    21fa:	49 1f       	adc	r20, r25
    21fc:	56 1f       	adc	r21, r22
    21fe:	c7 1f       	adc	r28, r23
    2200:	d1 1d       	adc	r29, r1
    2202:	88 0f       	add	r24, r24
    2204:	99 1f       	adc	r25, r25
    2206:	66 1f       	adc	r22, r22
    2208:	77 1f       	adc	r23, r23
    220a:	06 94       	lsr	r0
    220c:	a1 f7       	brne	.-24     	; 0x21f6 <__ftoa_engine+0xac>
    220e:	05 90       	lpm	r0, Z+
    2210:	07 94       	ror	r0
    2212:	20 f4       	brcc	.+8      	; 0x221c <__ftoa_engine+0xd2>
    2214:	49 0f       	add	r20, r25
    2216:	56 1f       	adc	r21, r22
    2218:	c7 1f       	adc	r28, r23
    221a:	d8 1f       	adc	r29, r24
    221c:	99 0f       	add	r25, r25
    221e:	66 1f       	adc	r22, r22
    2220:	77 1f       	adc	r23, r23
    2222:	88 1f       	adc	r24, r24
    2224:	06 94       	lsr	r0
    2226:	a9 f7       	brne	.-22     	; 0x2212 <__ftoa_engine+0xc8>
    2228:	84 91       	lpm	r24, Z
    222a:	10 95       	com	r17
    222c:	17 70       	andi	r17, 0x07	; 7
    222e:	41 f0       	breq	.+16     	; 0x2240 <__ftoa_engine+0xf6>
    2230:	d6 95       	lsr	r29
    2232:	c7 95       	ror	r28
    2234:	57 95       	ror	r21
    2236:	47 95       	ror	r20
    2238:	f7 94       	ror	r15
    223a:	e7 94       	ror	r14
    223c:	1a 95       	dec	r17
    223e:	c1 f7       	brne	.-16     	; 0x2230 <__ftoa_engine+0xe6>
    2240:	ec eb       	ldi	r30, 0xBC	; 188
    2242:	f0 e0       	ldi	r31, 0x00	; 0
    2244:	68 94       	set
    2246:	15 90       	lpm	r1, Z+
    2248:	15 91       	lpm	r17, Z+
    224a:	35 91       	lpm	r19, Z+
    224c:	65 91       	lpm	r22, Z+
    224e:	95 91       	lpm	r25, Z+
    2250:	05 90       	lpm	r0, Z+
    2252:	7f e2       	ldi	r23, 0x2F	; 47
    2254:	73 95       	inc	r23
    2256:	e1 18       	sub	r14, r1
    2258:	f1 0a       	sbc	r15, r17
    225a:	43 0b       	sbc	r20, r19
    225c:	56 0b       	sbc	r21, r22
    225e:	c9 0b       	sbc	r28, r25
    2260:	d0 09       	sbc	r29, r0
    2262:	c0 f7       	brcc	.-16     	; 0x2254 <__ftoa_engine+0x10a>
    2264:	e1 0c       	add	r14, r1
    2266:	f1 1e       	adc	r15, r17
    2268:	43 1f       	adc	r20, r19
    226a:	56 1f       	adc	r21, r22
    226c:	c9 1f       	adc	r28, r25
    226e:	d0 1d       	adc	r29, r0
    2270:	7e f4       	brtc	.+30     	; 0x2290 <__ftoa_engine+0x146>
    2272:	70 33       	cpi	r23, 0x30	; 48
    2274:	11 f4       	brne	.+4      	; 0x227a <__ftoa_engine+0x130>
    2276:	8a 95       	dec	r24
    2278:	e6 cf       	rjmp	.-52     	; 0x2246 <__ftoa_engine+0xfc>
    227a:	e8 94       	clt
    227c:	01 50       	subi	r16, 0x01	; 1
    227e:	30 f0       	brcs	.+12     	; 0x228c <__ftoa_engine+0x142>
    2280:	08 0f       	add	r16, r24
    2282:	0a f4       	brpl	.+2      	; 0x2286 <__ftoa_engine+0x13c>
    2284:	00 27       	eor	r16, r16
    2286:	02 17       	cp	r16, r18
    2288:	08 f4       	brcc	.+2      	; 0x228c <__ftoa_engine+0x142>
    228a:	20 2f       	mov	r18, r16
    228c:	23 95       	inc	r18
    228e:	02 2f       	mov	r16, r18
    2290:	7a 33       	cpi	r23, 0x3A	; 58
    2292:	28 f0       	brcs	.+10     	; 0x229e <__ftoa_engine+0x154>
    2294:	79 e3       	ldi	r23, 0x39	; 57
    2296:	7d 93       	st	X+, r23
    2298:	2a 95       	dec	r18
    229a:	e9 f7       	brne	.-6      	; 0x2296 <__ftoa_engine+0x14c>
    229c:	10 c0       	rjmp	.+32     	; 0x22be <__ftoa_engine+0x174>
    229e:	7d 93       	st	X+, r23
    22a0:	2a 95       	dec	r18
    22a2:	89 f6       	brne	.-94     	; 0x2246 <__ftoa_engine+0xfc>
    22a4:	06 94       	lsr	r0
    22a6:	97 95       	ror	r25
    22a8:	67 95       	ror	r22
    22aa:	37 95       	ror	r19
    22ac:	17 95       	ror	r17
    22ae:	17 94       	ror	r1
    22b0:	e1 18       	sub	r14, r1
    22b2:	f1 0a       	sbc	r15, r17
    22b4:	43 0b       	sbc	r20, r19
    22b6:	56 0b       	sbc	r21, r22
    22b8:	c9 0b       	sbc	r28, r25
    22ba:	d0 09       	sbc	r29, r0
    22bc:	98 f0       	brcs	.+38     	; 0x22e4 <__ftoa_engine+0x19a>
    22be:	23 95       	inc	r18
    22c0:	7e 91       	ld	r23, -X
    22c2:	73 95       	inc	r23
    22c4:	7a 33       	cpi	r23, 0x3A	; 58
    22c6:	08 f0       	brcs	.+2      	; 0x22ca <__ftoa_engine+0x180>
    22c8:	70 e3       	ldi	r23, 0x30	; 48
    22ca:	7c 93       	st	X, r23
    22cc:	20 13       	cpse	r18, r16
    22ce:	b8 f7       	brcc	.-18     	; 0x22be <__ftoa_engine+0x174>
    22d0:	7e 91       	ld	r23, -X
    22d2:	70 61       	ori	r23, 0x10	; 16
    22d4:	7d 93       	st	X+, r23
    22d6:	30 f0       	brcs	.+12     	; 0x22e4 <__ftoa_engine+0x19a>
    22d8:	83 95       	inc	r24
    22da:	71 e3       	ldi	r23, 0x31	; 49
    22dc:	7d 93       	st	X+, r23
    22de:	70 e3       	ldi	r23, 0x30	; 48
    22e0:	2a 95       	dec	r18
    22e2:	e1 f7       	brne	.-8      	; 0x22dc <__ftoa_engine+0x192>
    22e4:	11 24       	eor	r1, r1
    22e6:	ef 90       	pop	r14
    22e8:	ff 90       	pop	r15
    22ea:	0f 91       	pop	r16
    22ec:	1f 91       	pop	r17
    22ee:	cf 91       	pop	r28
    22f0:	df 91       	pop	r29
    22f2:	99 27       	eor	r25, r25
    22f4:	87 fd       	sbrc	r24, 7
    22f6:	90 95       	com	r25
    22f8:	08 95       	ret

000022fa <strnlen_P>:
    22fa:	fc 01       	movw	r30, r24
    22fc:	05 90       	lpm	r0, Z+
    22fe:	61 50       	subi	r22, 0x01	; 1
    2300:	70 40       	sbci	r23, 0x00	; 0
    2302:	01 10       	cpse	r0, r1
    2304:	d8 f7       	brcc	.-10     	; 0x22fc <strnlen_P+0x2>
    2306:	80 95       	com	r24
    2308:	90 95       	com	r25
    230a:	8e 0f       	add	r24, r30
    230c:	9f 1f       	adc	r25, r31
    230e:	08 95       	ret

00002310 <strnlen>:
    2310:	fc 01       	movw	r30, r24
    2312:	61 50       	subi	r22, 0x01	; 1
    2314:	70 40       	sbci	r23, 0x00	; 0
    2316:	01 90       	ld	r0, Z+
    2318:	01 10       	cpse	r0, r1
    231a:	d8 f7       	brcc	.-10     	; 0x2312 <strnlen+0x2>
    231c:	80 95       	com	r24
    231e:	90 95       	com	r25
    2320:	8e 0f       	add	r24, r30
    2322:	9f 1f       	adc	r25, r31
    2324:	08 95       	ret

00002326 <fputc>:
    2326:	0f 93       	push	r16
    2328:	1f 93       	push	r17
    232a:	cf 93       	push	r28
    232c:	df 93       	push	r29
    232e:	fb 01       	movw	r30, r22
    2330:	23 81       	ldd	r18, Z+3	; 0x03
    2332:	21 fd       	sbrc	r18, 1
    2334:	03 c0       	rjmp	.+6      	; 0x233c <fputc+0x16>
    2336:	8f ef       	ldi	r24, 0xFF	; 255
    2338:	9f ef       	ldi	r25, 0xFF	; 255
    233a:	2c c0       	rjmp	.+88     	; 0x2394 <fputc+0x6e>
    233c:	22 ff       	sbrs	r18, 2
    233e:	16 c0       	rjmp	.+44     	; 0x236c <fputc+0x46>
    2340:	46 81       	ldd	r20, Z+6	; 0x06
    2342:	57 81       	ldd	r21, Z+7	; 0x07
    2344:	24 81       	ldd	r18, Z+4	; 0x04
    2346:	35 81       	ldd	r19, Z+5	; 0x05
    2348:	42 17       	cp	r20, r18
    234a:	53 07       	cpc	r21, r19
    234c:	44 f4       	brge	.+16     	; 0x235e <fputc+0x38>
    234e:	a0 81       	ld	r26, Z
    2350:	b1 81       	ldd	r27, Z+1	; 0x01
    2352:	9d 01       	movw	r18, r26
    2354:	2f 5f       	subi	r18, 0xFF	; 255
    2356:	3f 4f       	sbci	r19, 0xFF	; 255
    2358:	31 83       	std	Z+1, r19	; 0x01
    235a:	20 83       	st	Z, r18
    235c:	8c 93       	st	X, r24
    235e:	26 81       	ldd	r18, Z+6	; 0x06
    2360:	37 81       	ldd	r19, Z+7	; 0x07
    2362:	2f 5f       	subi	r18, 0xFF	; 255
    2364:	3f 4f       	sbci	r19, 0xFF	; 255
    2366:	37 83       	std	Z+7, r19	; 0x07
    2368:	26 83       	std	Z+6, r18	; 0x06
    236a:	14 c0       	rjmp	.+40     	; 0x2394 <fputc+0x6e>
    236c:	8b 01       	movw	r16, r22
    236e:	ec 01       	movw	r28, r24
    2370:	fb 01       	movw	r30, r22
    2372:	00 84       	ldd	r0, Z+8	; 0x08
    2374:	f1 85       	ldd	r31, Z+9	; 0x09
    2376:	e0 2d       	mov	r30, r0
    2378:	09 95       	icall
    237a:	89 2b       	or	r24, r25
    237c:	e1 f6       	brne	.-72     	; 0x2336 <fputc+0x10>
    237e:	d8 01       	movw	r26, r16
    2380:	16 96       	adiw	r26, 0x06	; 6
    2382:	8d 91       	ld	r24, X+
    2384:	9c 91       	ld	r25, X
    2386:	17 97       	sbiw	r26, 0x07	; 7
    2388:	01 96       	adiw	r24, 0x01	; 1
    238a:	17 96       	adiw	r26, 0x07	; 7
    238c:	9c 93       	st	X, r25
    238e:	8e 93       	st	-X, r24
    2390:	16 97       	sbiw	r26, 0x06	; 6
    2392:	ce 01       	movw	r24, r28
    2394:	df 91       	pop	r29
    2396:	cf 91       	pop	r28
    2398:	1f 91       	pop	r17
    239a:	0f 91       	pop	r16
    239c:	08 95       	ret

0000239e <printf>:
    239e:	a0 e0       	ldi	r26, 0x00	; 0
    23a0:	b0 e0       	ldi	r27, 0x00	; 0
    23a2:	e5 ed       	ldi	r30, 0xD5	; 213
    23a4:	f1 e1       	ldi	r31, 0x11	; 17
    23a6:	0c 94 7c 0d 	jmp	0x1af8	; 0x1af8 <__prologue_saves__+0x20>
    23aa:	ae 01       	movw	r20, r28
    23ac:	4b 5f       	subi	r20, 0xFB	; 251
    23ae:	5f 4f       	sbci	r21, 0xFF	; 255
    23b0:	fa 01       	movw	r30, r20
    23b2:	61 91       	ld	r22, Z+
    23b4:	71 91       	ld	r23, Z+
    23b6:	af 01       	movw	r20, r30
    23b8:	80 91 c7 01 	lds	r24, 0x01C7	; 0x8001c7 <__iob+0x2>
    23bc:	90 91 c8 01 	lds	r25, 0x01C8	; 0x8001c8 <__iob+0x3>
    23c0:	0e 94 ef 09 	call	0x13de	; 0x13de <vfprintf>
    23c4:	e2 e0       	ldi	r30, 0x02	; 2
    23c6:	0c 94 98 0d 	jmp	0x1b30	; 0x1b30 <__epilogue_restores__+0x20>

000023ca <__ultoa_invert>:
    23ca:	fa 01       	movw	r30, r20
    23cc:	aa 27       	eor	r26, r26
    23ce:	28 30       	cpi	r18, 0x08	; 8
    23d0:	51 f1       	breq	.+84     	; 0x2426 <__ultoa_invert+0x5c>
    23d2:	20 31       	cpi	r18, 0x10	; 16
    23d4:	81 f1       	breq	.+96     	; 0x2436 <__ultoa_invert+0x6c>
    23d6:	e8 94       	clt
    23d8:	6f 93       	push	r22
    23da:	6e 7f       	andi	r22, 0xFE	; 254
    23dc:	6e 5f       	subi	r22, 0xFE	; 254
    23de:	7f 4f       	sbci	r23, 0xFF	; 255
    23e0:	8f 4f       	sbci	r24, 0xFF	; 255
    23e2:	9f 4f       	sbci	r25, 0xFF	; 255
    23e4:	af 4f       	sbci	r26, 0xFF	; 255
    23e6:	b1 e0       	ldi	r27, 0x01	; 1
    23e8:	3e d0       	rcall	.+124    	; 0x2466 <__ultoa_invert+0x9c>
    23ea:	b4 e0       	ldi	r27, 0x04	; 4
    23ec:	3c d0       	rcall	.+120    	; 0x2466 <__ultoa_invert+0x9c>
    23ee:	67 0f       	add	r22, r23
    23f0:	78 1f       	adc	r23, r24
    23f2:	89 1f       	adc	r24, r25
    23f4:	9a 1f       	adc	r25, r26
    23f6:	a1 1d       	adc	r26, r1
    23f8:	68 0f       	add	r22, r24
    23fa:	79 1f       	adc	r23, r25
    23fc:	8a 1f       	adc	r24, r26
    23fe:	91 1d       	adc	r25, r1
    2400:	a1 1d       	adc	r26, r1
    2402:	6a 0f       	add	r22, r26
    2404:	71 1d       	adc	r23, r1
    2406:	81 1d       	adc	r24, r1
    2408:	91 1d       	adc	r25, r1
    240a:	a1 1d       	adc	r26, r1
    240c:	20 d0       	rcall	.+64     	; 0x244e <__ultoa_invert+0x84>
    240e:	09 f4       	brne	.+2      	; 0x2412 <__ultoa_invert+0x48>
    2410:	68 94       	set
    2412:	3f 91       	pop	r19
    2414:	2a e0       	ldi	r18, 0x0A	; 10
    2416:	26 9f       	mul	r18, r22
    2418:	11 24       	eor	r1, r1
    241a:	30 19       	sub	r19, r0
    241c:	30 5d       	subi	r19, 0xD0	; 208
    241e:	31 93       	st	Z+, r19
    2420:	de f6       	brtc	.-74     	; 0x23d8 <__ultoa_invert+0xe>
    2422:	cf 01       	movw	r24, r30
    2424:	08 95       	ret
    2426:	46 2f       	mov	r20, r22
    2428:	47 70       	andi	r20, 0x07	; 7
    242a:	40 5d       	subi	r20, 0xD0	; 208
    242c:	41 93       	st	Z+, r20
    242e:	b3 e0       	ldi	r27, 0x03	; 3
    2430:	0f d0       	rcall	.+30     	; 0x2450 <__ultoa_invert+0x86>
    2432:	c9 f7       	brne	.-14     	; 0x2426 <__ultoa_invert+0x5c>
    2434:	f6 cf       	rjmp	.-20     	; 0x2422 <__ultoa_invert+0x58>
    2436:	46 2f       	mov	r20, r22
    2438:	4f 70       	andi	r20, 0x0F	; 15
    243a:	40 5d       	subi	r20, 0xD0	; 208
    243c:	4a 33       	cpi	r20, 0x3A	; 58
    243e:	18 f0       	brcs	.+6      	; 0x2446 <__ultoa_invert+0x7c>
    2440:	49 5d       	subi	r20, 0xD9	; 217
    2442:	31 fd       	sbrc	r19, 1
    2444:	40 52       	subi	r20, 0x20	; 32
    2446:	41 93       	st	Z+, r20
    2448:	02 d0       	rcall	.+4      	; 0x244e <__ultoa_invert+0x84>
    244a:	a9 f7       	brne	.-22     	; 0x2436 <__ultoa_invert+0x6c>
    244c:	ea cf       	rjmp	.-44     	; 0x2422 <__ultoa_invert+0x58>
    244e:	b4 e0       	ldi	r27, 0x04	; 4
    2450:	a6 95       	lsr	r26
    2452:	97 95       	ror	r25
    2454:	87 95       	ror	r24
    2456:	77 95       	ror	r23
    2458:	67 95       	ror	r22
    245a:	ba 95       	dec	r27
    245c:	c9 f7       	brne	.-14     	; 0x2450 <__ultoa_invert+0x86>
    245e:	00 97       	sbiw	r24, 0x00	; 0
    2460:	61 05       	cpc	r22, r1
    2462:	71 05       	cpc	r23, r1
    2464:	08 95       	ret
    2466:	9b 01       	movw	r18, r22
    2468:	ac 01       	movw	r20, r24
    246a:	0a 2e       	mov	r0, r26
    246c:	06 94       	lsr	r0
    246e:	57 95       	ror	r21
    2470:	47 95       	ror	r20
    2472:	37 95       	ror	r19
    2474:	27 95       	ror	r18
    2476:	ba 95       	dec	r27
    2478:	c9 f7       	brne	.-14     	; 0x246c <__ultoa_invert+0xa2>
    247a:	62 0f       	add	r22, r18
    247c:	73 1f       	adc	r23, r19
    247e:	84 1f       	adc	r24, r20
    2480:	95 1f       	adc	r25, r21
    2482:	a0 1d       	adc	r26, r0
    2484:	08 95       	ret

00002486 <_exit>:
    2486:	f8 94       	cli

00002488 <__stop_program>:
    2488:	ff cf       	rjmp	.-2      	; 0x2488 <__stop_program>
